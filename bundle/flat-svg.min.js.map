{"version":3,"file":"flat-svg.min.js","sources":["../node_modules/svg-parser/dist/svg-parser.esm.js","../node_modules/@amandaghassaei/type-checks/dist/type-checks.js","../src/utils.ts","../src/transforms.ts","../node_modules/colord/index.mjs","../node_modules/colord/plugins/lab.mjs","../src/constants.ts","../node_modules/svgpath/lib/path_parse.js","../node_modules/svgpath/lib/matrix.js","../node_modules/svgpath/lib/transform_parse.js","../node_modules/svgpath/lib/a2c.js","../node_modules/svgpath/lib/ellipse.js","../node_modules/svgpath/lib/svgpath.js","../node_modules/svgpath/index.js","../src/convertToPath.ts","../node_modules/@adobe/css-tools/dist/index.mjs","../src/FlatSVG.ts","../node_modules/colord/plugins/names.mjs"],"sourcesContent":["function getLocator(source, options) {\n    if (options === void 0) { options = {}; }\n    var offsetLine = options.offsetLine || 0;\n    var offsetColumn = options.offsetColumn || 0;\n    var originalLines = source.split('\\n');\n    var start = 0;\n    var lineRanges = originalLines.map(function (line, i) {\n        var end = start + line.length + 1;\n        var range = { start: start, end: end, line: i };\n        start = end;\n        return range;\n    });\n    var i = 0;\n    function rangeContains(range, index) {\n        return range.start <= index && index < range.end;\n    }\n    function getLocation(range, index) {\n        return { line: offsetLine + range.line, column: offsetColumn + index - range.start, character: index };\n    }\n    function locate(search, startIndex) {\n        if (typeof search === 'string') {\n            search = source.indexOf(search, startIndex || 0);\n        }\n        var range = lineRanges[i];\n        var d = search >= range.end ? 1 : -1;\n        while (range) {\n            if (rangeContains(range, search))\n                return getLocation(range, search);\n            i += d;\n            range = lineRanges[i];\n        }\n    }\n    return locate;\n}\nfunction locate(source, search, options) {\n    if (typeof options === 'number') {\n        throw new Error('locate takes a { startIndex, offsetLine, offsetColumn } object as the third argument');\n    }\n    return getLocator(source, options)(search, options && options.startIndex);\n}\n\nvar validNameCharacters = /[a-zA-Z0-9:_-]/;\nvar whitespace = /[\\s\\t\\r\\n]/;\nvar quotemark = /['\"]/;\n\nfunction repeat(str, i) {\n\tvar result = '';\n\twhile (i--) { result += str; }\n\treturn result;\n}\n\nfunction parse(source) {\n\tvar header = '';\n\tvar stack = [];\n\n\tvar state = metadata;\n\tvar currentElement = null;\n\tvar root = null;\n\n\tfunction error(message) {\n\t\tvar ref = locate(source, i);\n\t\tvar line = ref.line;\n\t\tvar column = ref.column;\n\t\tvar before = source.slice(0, i);\n\t\tvar beforeLine = /(^|\\n).*$/.exec(before)[0].replace(/\\t/g, '  ');\n\t\tvar after = source.slice(i);\n\t\tvar afterLine = /.*(\\n|$)/.exec(after)[0];\n\n\t\tvar snippet = \"\" + beforeLine + afterLine + \"\\n\" + (repeat(' ', beforeLine.length)) + \"^\";\n\n\t\tthrow new Error(\n\t\t\t(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug in svg-parser. Please raise an issue at https://github.com/Rich-Harris/svg-parser/issues â€“ thanks!\\n\\n\" + snippet)\n\t\t);\n\t}\n\n\tfunction metadata() {\n\t\twhile ((i < source.length && source[i] !== '<') || !validNameCharacters.test(source[i + 1])) {\n\t\t\theader += source[i++];\n\t\t}\n\n\t\treturn neutral();\n\t}\n\n\tfunction neutral() {\n\t\tvar text = '';\n\t\twhile (i < source.length && source[i] !== '<') { text += source[i++]; }\n\n\t\tif (/\\S/.test(text)) {\n\t\t\tcurrentElement.children.push({ type: 'text', value: text });\n\t\t}\n\n\t\tif (source[i] === '<') {\n\t\t\treturn tag;\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction tag() {\n\t\tvar char = source[i];\n\n\t\tif (char === '?') { return neutral; } // <?xml...\n\n\t\tif (char === '!') {\n\t\t\tif (source.slice(i + 1, i + 3) === '--') { return comment; }\n\t\t\tif (source.slice(i + 1, i + 8) === '[CDATA[') { return cdata; }\n\t\t\tif (/doctype/i.test(source.slice(i + 1, i + 8))) { return neutral; }\n\t\t}\n\n\t\tif (char === '/') { return closingTag; }\n\n\t\tvar tagName = getName();\n\n\t\tvar element = {\n\t\t\ttype: 'element',\n\t\t\ttagName: tagName,\n\t\t\tproperties: {},\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (currentElement) {\n\t\t\tcurrentElement.children.push(element);\n\t\t} else {\n\t\t\troot = element;\n\t\t}\n\n\t\tvar attribute;\n\t\twhile (i < source.length && (attribute = getAttribute())) {\n\t\t\telement.properties[attribute.name] = attribute.value;\n\t\t}\n\n\t\tvar selfClosing = false;\n\n\t\tif (source[i] === '/') {\n\t\t\ti += 1;\n\t\t\tselfClosing = true;\n\t\t}\n\n\t\tif (source[i] !== '>') {\n\t\t\terror('Expected >');\n\t\t}\n\n\t\tif (!selfClosing) {\n\t\t\tcurrentElement = element;\n\t\t\tstack.push(element);\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction comment() {\n\t\tvar index = source.indexOf('-->', i);\n\t\tif (!~index) { error('expected -->'); }\n\n\t\ti = index + 2;\n\t\treturn neutral;\n\t}\n\n\tfunction cdata() {\n\t\tvar index = source.indexOf(']]>', i);\n\t\tif (!~index) { error('expected ]]>'); }\n\n\t\tcurrentElement.children.push(source.slice(i + 7, index));\n\n\t\ti = index + 2;\n\t\treturn neutral;\n\t}\n\n\tfunction closingTag() {\n\t\tvar tagName = getName();\n\n\t\tif (!tagName) { error('Expected tag name'); }\n\n\t\tif (tagName !== currentElement.tagName) {\n\t\t\terror((\"Expected closing tag </\" + tagName + \"> to match opening tag <\" + (currentElement.tagName) + \">\"));\n\t\t}\n\n\t\tallowSpaces();\n\n\t\tif (source[i] !== '>') {\n\t\t\terror('Expected >');\n\t\t}\n\n\t\tstack.pop();\n\t\tcurrentElement = stack[stack.length - 1];\n\n\t\treturn neutral;\n\t}\n\n\tfunction getName() {\n\t\tvar name = '';\n\t\twhile (i < source.length && validNameCharacters.test(source[i])) { name += source[i++]; }\n\n\t\treturn name;\n\t}\n\n\tfunction getAttribute() {\n\t\tif (!whitespace.test(source[i])) { return null; }\n\t\tallowSpaces();\n\n\t\tvar name = getName();\n\t\tif (!name) { return null; }\n\n\t\tvar value = true;\n\n\t\tallowSpaces();\n\t\tif (source[i] === '=') {\n\t\t\ti += 1;\n\t\t\tallowSpaces();\n\n\t\t\tvalue = getAttributeValue();\n\t\t\tif (!isNaN(value) && value.trim() !== '') { value = +value; } // TODO whitelist numeric attributes?\n\t\t}\n\n\t\treturn { name: name, value: value };\n\t}\n\n\tfunction getAttributeValue() {\n\t\treturn quotemark.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n\t}\n\n\tfunction getUnquotedAttributeValue() {\n\t\tvar value = '';\n\t\tdo {\n\t\t\tvar char = source[i];\n\t\t\tif (char === ' ' || char === '>' || char === '/') {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvalue += char;\n\t\t\ti += 1;\n\t\t} while (i < source.length);\n\n\t\treturn value;\n\t}\n\n\tfunction getQuotedAttributeValue() {\n\t\tvar quotemark = source[i++];\n\n\t\tvar value = '';\n\t\tvar escaped = false;\n\n\t\twhile (i < source.length) {\n\t\t\tvar char = source[i++];\n\t\t\tif (char === quotemark && !escaped) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (char === '\\\\' && !escaped) {\n\t\t\t\tescaped = true;\n\t\t\t}\n\n\t\t\tvalue += escaped ? (\"\\\\\" + char) : char;\n\t\t\tescaped = false;\n\t\t}\n\t}\n\n\tfunction allowSpaces() {\n\t\twhile (i < source.length && whitespace.test(source[i])) { i += 1; }\n\t}\n\n\tvar i = metadata.length;\n\twhile (i < source.length) {\n\t\tif (!state) { error('Unexpected character'); }\n\t\tstate = state();\n\t\ti += 1;\n\t}\n\n\tif (state !== neutral) {\n\t\terror('Unexpected end of input');\n\t}\n\n\tif (root.tagName === 'svg') { root.metadata = header; }\n\treturn {\n\t\ttype: 'root',\n\t\tchildren: [root]\n\t};\n}\n\nexport { parse };\n//# sourceMappingURL=svg-parser.esm.js.map\n","/**\n * Checks if value is a number (including Infinity).\n */\nexport function isNumber(value) {\n    return !Number.isNaN(value) && typeof value === 'number';\n}\n/**\n * Checks if value is finite number.\n */\nexport function isFiniteNumber(value) {\n    return isNumber(value) && Number.isFinite(value);\n}\n/**\n * Checks if value is integer.\n */\nexport function isInteger(value) {\n    return isFiniteNumber(value) && (value % 1 === 0);\n}\n/**\n * Checks if value is positive number (> 0).\n */\nexport function isPositiveNumber(value) {\n    return isNumber(value) && value > 0;\n}\n/**\n * Checks if value is positive integer (> 0).\n */\nexport function isPositiveInteger(value) {\n    return isInteger(value) && value > 0;\n}\n/**\n * Checks if value is negative number (< 0).\n */\nexport function isNegativeNumber(value) {\n    return isNumber(value) && value < 0;\n}\n/**\n * Checks if value is negative integer (< 0).\n */\nexport function isNegativeInteger(value) {\n    return isInteger(value) && value < 0;\n}\n/**\n * Checks if value is non-negative number (>= 0).\n */\nexport function isNonNegativeNumber(value) {\n    return isNumber(value) && value >= 0;\n}\n/**\n * Checks if value is non-negative integer (>= 0).\n */\nexport function isNonNegativeInteger(value) {\n    return isInteger(value) && value >= 0;\n}\n/**\n * Checks if value is non-positive number (<= 0).\n */\nexport function isNonPositiveNumber(value) {\n    return isNumber(value) && value <= 0;\n}\n/**\n * Checks if value is non-positive integer (<= 0).\n */\nexport function isNonPositiveInteger(value) {\n    return isInteger(value) && value <= 0;\n}\n/**\n * Checks if value is number in range [min, max].\n */\nexport function isNumberInRange(value, min, max) {\n    return isNumber(value) && value >= min && value <= max;\n}\n/**\n * Checks if value is integer in range [min, max].\n */\nexport function isIntegerInRange(value, min, max) {\n    return isInteger(value) && value >= min && value <= max;\n}\n/**\n * Checks if value is string.\n */\nexport function isString(value) {\n    return typeof value === 'string';\n}\n/**\n * Checks if value is TypedArray.\n */\nexport function isTypedArray(value) {\n    return ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n/**\n * Checks if value is Array or TypedArray.\n */\nexport function isArray(value) {\n    return Array.isArray(value) || isTypedArray(value);\n}\n/**\n * Checks if value is Javascript object.\n */\nexport function isObject(value) {\n    return typeof value === 'object' && !isArray(value) && value !== null && !(value instanceof ArrayBuffer) && !(value instanceof DataView);\n}\n/**\n * Checks if value is boolean.\n */\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\n//# sourceMappingURL=type-checks.js.map","import { isArray, isNumber, isPositiveNumber, isString } from '@amandaghassaei/type-checks';\n\nexport function removeWhitespacePadding(string: string) {\n\treturn string.replace(/^\\s+|\\s+$/g,'');\n}\n\nexport function convertToDashArray(value: string | number | number[] | undefined) {\n\tlet dashArray: number[] = [];\n\tif (value === '' || value === undefined) return dashArray;\n\tif (isNumber(value)) {\n\t\tif (!isPositiveNumber(value)) {\n\t\t\tthrow new Error(`Expected positive number for stroke-dasharray value, got ${value}.`);\n\t\t}\n\t\tdashArray = [value as number];\n\t} else if (isString(value)) {\n\t\tdashArray = (value as string).split(' ').map(_el => {\n\t\t\tconst el = Number.parseFloat(_el);\n\t\t\tif (!isPositiveNumber(el)) {\n\t\t\t\tthrow new Error(`Expected positive number for stroke-dasharray value, got ${el} from string \"${_el}\".`);\n\t\t\t}\n\t\t\treturn el;\n\t\t});\n\t} else if (isArray(value)) {\n\t\tfor (let i = 0, len = (value as number[]).length; i < len; i++) {\n\t\t\tconst el = (value as number[])[i];\n\t\t\tif (!isPositiveNumber(el)) {\n\t\t\t\tthrow new Error(`Expected positive number for stroke-dasharray value, got ${el} from array ${JSON.stringify(value)}.`);\n\t\t\t}\n\t\t\tdashArray.push(el);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Invalid type ${typeof value} for stroke-dasharray property ${value}.`);\n\t}\n\tif (dashArray.length % 2 === 1) {\n\t\t// Odd length dash arrays should be repeated. \n\t\tdashArray = [...dashArray, ...dashArray];\n\t}\n\treturn dashArray;\n}","import { Transform, TransformParsed } from './types';\nimport { removeWhitespacePadding } from './utils';\n\nexport function initIdentityTransform() {\n    const transform: Transform = {\n        a: 1,\n        b: 0,\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0,\n    };\n    return transform;\n}\n\n// Parse transforms ourselves so we can attach errors and warnings for more feedback in ui.\n// https://gist.github.com/petersirka/dfac415e1e1e4993af826c0ff706eb4d/\n// https://github.com/fontello/svgpath/blob/master/lib/transform_parse.js\n// https://www.w3.org/TR/SVG11/coords.html#TransformAttribute\nexport function parseTransformString(string: string, tagName?: string) {\n    const transformStrings = string.match(\n        /(translate|matrix|rotate|skewX|skewY|scale)\\s*\\(\\s*(.*?)\\s*\\)/gi\n    );\n    const unusedCharacters: string[] = [string.slice()]; // Place to store any characters in transform that were missed.\n    const transforms: TransformParsed[] = [];\n    if (transformStrings) {\n        // Loop through all transforms (many may be chained together e.g. \"translate(1, 45) rotate(56)\").\n        for (let i = 0; i < transformStrings.length; i++) {\n            const transform = initIdentityTransform() as TransformParsed; // Init identity transform to start.\n            const transformString = transformStrings[i]; // Transform as a string.\n\n            // Keep track of what hasn't been matched.\n            const lastString = unusedCharacters.pop()!;\n            const matchIndex = lastString.indexOf(transformString);\n            unusedCharacters.push(\n                lastString.slice(0, matchIndex),\n                lastString.slice(matchIndex + transformString.length)\n            );\n\n            // Split transform into components: transform name and parameters.\n            const transformComponents = transformString.split(/[\\(\\)]+/);\n            if (transformComponents.length > 2) transformComponents.pop(); // Remove empty string at the end of split.\n            if (transformComponents.length !== 2) {\n                transform.errors = [`Malformed transform: \"${transformString}\".`];\n                transforms.push(transform);\n                continue;\n            }\n            const transformName = removeWhitespacePadding(transformComponents[0]).toLowerCase();\n            // First try splitting by commas.\n            let params = removeWhitespacePadding(transformComponents[1]).split(',');\n            // Then split by spaces if commas not found.\n            if (params.length === 1) params = params[0].split(/\\s+/);\n            // Convert parameters to float.\n            const floatParams: number[] = [];\n            for (let j = 0; j < params.length; j++) {\n                const param = params[j];\n                floatParams.push(parseFloat(param));\n                // Remove infinity cases.\n                if (floatParams[j] === Infinity || floatParams[j] === -Infinity) {\n                    floatParams[j] = NaN;\n                }\n            }\n            let expectedNumParameters: number[] = [];\n            switch (transformName) {\n                case 'translate':\n                    // translate(<tx> [<ty>]), which specifies a translation by tx and ty. If <ty> is not provided, it is assumed to be zero.\n                    expectedNumParameters = [1, 2];\n                    transform.e = floatParams[0] || 0;\n                    transform.f = floatParams[1] || 0;\n                    break;\n                case 'scale':\n                    // scale(<sx> [<sy>]), which specifies a scale operation by sx and sy. If <sy> is not provided, it is assumed to be equal to <sx>.\n                    expectedNumParameters = [1, 2];\n                    // Default value of 1, but allow zero scale to pass through.\n                    transform.a = floatParams[0] === 0 ? 0 : floatParams[0] || 1;\n                    transform.d = floatParams[1] === 0 ? 0 : floatParams[1] || transform.a;\n                    break;\n                case 'rotate': {\n                    // rotate(<rotate-angle> [<cx> <cy>]), which specifies a rotation by <rotate-angle> degrees about a given point.\n                    // If optional parameters <cx> and <cy> are not supplied, the rotate is about the origin of the current user coordinate system.\n                    // If optional parameters <cx> and <cy> are supplied, the rotate is about the point (cx, cy).\n                    expectedNumParameters = [1, 3];\n                    // Rotation angle is in degrees.\n                    const a = ((floatParams[0] || 0) * Math.PI) / 180;\n                    if (a !== 0) {\n                        const x = floatParams[1] || 0;\n                        const y = floatParams[2] || 0;\n                        const cosA = Math.cos(a);\n                        const sinA = Math.sin(a);\n                        transform.a = cosA;\n                        transform.b = sinA;\n                        transform.c = -sinA;\n                        transform.d = cosA;\n                        transform.e = -x * cosA + y * sinA + x;\n                        transform.f = -x * sinA - y * cosA + y;\n                    }\n                    break;\n                }\n                case 'skewx': {\n                    // skewX(<skew-angle>), which specifies a skew transformation along the x-axis.\n                    expectedNumParameters = [1];\n                    // Rotation angle is in degrees.\n                    const a = ((floatParams[0] || 0) * Math.PI) / 180;\n                    if (a !== 0) transform.c = Math.tan(a);\n                    break;\n                }\n                case 'skewy': {\n                    // skewY(<skew-angle>), which specifies a skew transformation along the y-axis.\n                    expectedNumParameters = [1];\n                    // Rotation angle is in degrees.\n                    const a = ((floatParams[0] || 0) * Math.PI) / 180;\n                    if (a !== 0) transform.b = Math.tan(a);\n                    break;\n                }\n                case 'matrix':\n                    // matrix(<a> <b> <c> <d> <e> <f>), which specifies a transformation in the form of a transformation matrix of six values.\n                    expectedNumParameters = [6];\n                    // For elements with default value of 1, allow zero to pass through.\n                    transform.a = floatParams[0] === 0 ? 0 : floatParams[0] || 1;\n                    transform.b = floatParams[1] || 0;\n                    transform.c = floatParams[2] || 0;\n                    transform.d = floatParams[3] === 0 ? 0 : floatParams[3] || 1;\n                    transform.e = floatParams[4] || 0;\n                    transform.f = floatParams[5] || 0;\n                    break;\n                /* c8 ignore next 5 */\n                default:\n                    // It should not be possible to hit this.\n                    // Should be caught by regex at top of function, any invalid transforms go to unusedCharacters.\n                    transform.errors = [`Unknown transform ${transformName}.`];\n                    break;\n            }\n            // Add warnings if necessary.\n            const warnings: string[] = [];\n            // Check that correct number of params supplied.\n            let numParams = params.length;\n            if (numParams === 1 && params[0] === '') {\n                numParams = 0;\n            }\n            if (expectedNumParameters.indexOf(numParams) < 0) {\n                warnings.push(\n                    `Found ${\n                        tagName ? `${tagName} ` : ''\n                    }element with malformed transform: \"${transformString}\" containing ${numParams} parameters, expected ${expectedNumParameters.join(\n                        ' or '\n                    )} parameter${\n                        expectedNumParameters[expectedNumParameters.length - 1] > 1 ? 's' : ''\n                    }.`\n                );\n            } else {\n                // Check if any params are invalid.\n                for (let j = 0; j < floatParams.length; j++) {\n                    if (isNaN(floatParams[j])) {\n                        warnings.push(\n                            `Found ${\n                                tagName ? `${tagName} ` : ''\n                            }element with invalid transform: \"${transformString}\", transform parameters must be finite numbers.`\n                        );\n                        break;\n                    }\n                }\n            }\n            // Attach warning to transform.\n            if (warnings.length) transform.warnings = warnings;\n            transforms.push(transform);\n        }\n    }\n    // Check if anything was missed:\n    for (let i = unusedCharacters.length - 1; i >= 0; i--) {\n        unusedCharacters[i] = removeWhitespacePadding(unusedCharacters[i]);\n        if (unusedCharacters[i] === '' || unusedCharacters[i] === ',')\n            unusedCharacters.splice(i, 1);\n    }\n    if (unusedCharacters.length) {\n        const transform = initIdentityTransform() as TransformParsed;\n        transform.errors = [\n            `Malformed transform, unmatched characters: [ ${unusedCharacters\n                .map((str) => `\"${str}\"`)\n                .join(', ')} ].`,\n        ];\n        transforms.push(transform);\n    }\n    return transforms;\n}\n\nexport function flattenTransformArray(transforms: Transform[]) {\n    // Flatten transforms to a single matrix.\n    const transform = copyTransform(transforms[0]);\n    for (let i = 1; i < transforms.length; i++) {\n        dotTransforms(transform, transforms[i]);\n    }\n    return transform;\n}\n\nexport function dotTransforms(t1: Transform, t2: Transform) {\n    const a = t1.a * t2.a + t1.c * t2.b;\n    const b = t1.b * t2.a + t1.d * t2.b;\n    const c = t1.a * t2.c + t1.c * t2.d;\n    const d = t1.b * t2.c + t1.d * t2.d;\n    const e = t1.a * t2.e + t1.c * t2.f + t1.e;\n    const f = t1.b * t2.e + t1.d * t2.f + t1.f;\n    // Modify t1 in place.\n    t1.a = a;\n    t1.b = b;\n    t1.c = c;\n    t1.d = d;\n    t1.e = e;\n    t1.f = f;\n    return t1;\n}\n\nexport function applyTransform(p: [number, number], t: Transform) {\n    const x = t.a * p[0] + t.c * p[1] + t.e;\n    const y = t.b * p[0] + t.d * p[1] + t.f;\n    // Apply transform in place.\n    p[0] = x;\n    p[1] = y;\n    return p;\n}\n\nexport function copyTransform(t: Transform) {\n    return {\n        a: t.a,\n        b: t.b,\n        c: t.c,\n        d: t.d,\n        e: t.e,\n        f: t.f,\n    } as Transform;\n}\n\nexport function transformToString(t: Transform) {\n    return `matrix(${t.a} ${t.b} ${t.c} ${t.d} ${t.e} ${t.f})`;\n}\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},e=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},u=function(r){return(r=isFinite(r)?r%360:0)>0?r:r+360},a=function(r){return{r:e(r.r,0,255),g:e(r.g,0,255),b:e(r.b,0,255),a:e(r.a)}},o=function(r){return{r:n(r.r),g:n(r.g),b:n(r.b),a:n(r.a,3)}},i=/^#([0-9a-f]{3,8})$/i,s=function(r){var t=r.toString(16);return t.length<2?\"0\"+t:t},h=function(r){var t=r.r,n=r.g,e=r.b,u=r.a,a=Math.max(t,n,e),o=a-Math.min(t,n,e),i=o?a===t?(n-e)/o:a===n?2+(e-t)/o:4+(t-n)/o:0;return{h:60*(i<0?i+6:i),s:a?o/a*100:0,v:a/255*100,a:u}},b=function(r){var t=r.h,n=r.s,e=r.v,u=r.a;t=t/360*6,n/=100,e/=100;var a=Math.floor(t),o=e*(1-n),i=e*(1-(t-a)*n),s=e*(1-(1-t+a)*n),h=a%6;return{r:255*[e,i,o,o,s,e][h],g:255*[s,e,e,i,o,o][h],b:255*[o,o,s,e,e,i][h],a:u}},g=function(r){return{h:u(r.h),s:e(r.s,0,100),l:e(r.l,0,100),a:e(r.a)}},d=function(r){return{h:n(r.h),s:n(r.s),l:n(r.l),a:n(r.a,3)}},f=function(r){return b((n=(t=r).s,{h:t.h,s:(n*=((e=t.l)<50?e:100-e)/100)>0?2*n/(e+n)*100:0,v:e+n,a:t.a}));var t,n,e},c=function(r){return{h:(t=h(r)).h,s:(u=(200-(n=t.s))*(e=t.v)/100)>0&&u<200?n*e/100/(u<=100?u:200-u)*100:0,l:u/2,a:t.a};var t,n,e,u},l=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,p=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,v=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,m=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,y={string:[[function(r){var t=i.exec(r);return t?(r=t[1]).length<=4?{r:parseInt(r[0]+r[0],16),g:parseInt(r[1]+r[1],16),b:parseInt(r[2]+r[2],16),a:4===r.length?n(parseInt(r[3]+r[3],16)/255,2):1}:6===r.length||8===r.length?{r:parseInt(r.substr(0,2),16),g:parseInt(r.substr(2,2),16),b:parseInt(r.substr(4,2),16),a:8===r.length?n(parseInt(r.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(r){var t=v.exec(r)||m.exec(r);return t?t[2]!==t[4]||t[4]!==t[6]?null:a({r:Number(t[1])/(t[2]?100/255:1),g:Number(t[3])/(t[4]?100/255:1),b:Number(t[5])/(t[6]?100/255:1),a:void 0===t[7]?1:Number(t[7])/(t[8]?100:1)}):null},\"rgb\"],[function(t){var n=l.exec(t)||p.exec(t);if(!n)return null;var e,u,a=g({h:(e=n[1],u=n[2],void 0===u&&(u=\"deg\"),Number(e)*(r[u]||1)),s:Number(n[3]),l:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return f(a)},\"hsl\"]],object:[[function(r){var n=r.r,e=r.g,u=r.b,o=r.a,i=void 0===o?1:o;return t(n)&&t(e)&&t(u)?a({r:Number(n),g:Number(e),b:Number(u),a:Number(i)}):null},\"rgb\"],[function(r){var n=r.h,e=r.s,u=r.l,a=r.a,o=void 0===a?1:a;if(!t(n)||!t(e)||!t(u))return null;var i=g({h:Number(n),s:Number(e),l:Number(u),a:Number(o)});return f(i)},\"hsl\"],[function(r){var n=r.h,a=r.s,o=r.v,i=r.a,s=void 0===i?1:i;if(!t(n)||!t(a)||!t(o))return null;var h=function(r){return{h:u(r.h),s:e(r.s,0,100),v:e(r.v,0,100),a:e(r.a)}}({h:Number(n),s:Number(a),v:Number(o),a:Number(s)});return b(h)},\"hsv\"]]},N=function(r,t){for(var n=0;n<t.length;n++){var e=t[n][0](r);if(e)return[e,t[n][1]]}return[null,void 0]},x=function(r){return\"string\"==typeof r?N(r.trim(),y.string):\"object\"==typeof r&&null!==r?N(r,y.object):[null,void 0]},I=function(r){return x(r)[1]},M=function(r,t){var n=c(r);return{h:n.h,s:e(n.s+100*t,0,100),l:n.l,a:n.a}},H=function(r){return(299*r.r+587*r.g+114*r.b)/1e3/255},$=function(r,t){var n=c(r);return{h:n.h,s:n.s,l:e(n.l+100*t,0,100),a:n.a}},j=function(){function r(r){this.parsed=x(r)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return r.prototype.isValid=function(){return null!==this.parsed},r.prototype.brightness=function(){return n(H(this.rgba),2)},r.prototype.isDark=function(){return H(this.rgba)<.5},r.prototype.isLight=function(){return H(this.rgba)>=.5},r.prototype.toHex=function(){return r=o(this.rgba),t=r.r,e=r.g,u=r.b,i=(a=r.a)<1?s(n(255*a)):\"\",\"#\"+s(t)+s(e)+s(u)+i;var r,t,e,u,a,i},r.prototype.toRgb=function(){return o(this.rgba)},r.prototype.toRgbString=function(){return r=o(this.rgba),t=r.r,n=r.g,e=r.b,(u=r.a)<1?\"rgba(\"+t+\", \"+n+\", \"+e+\", \"+u+\")\":\"rgb(\"+t+\", \"+n+\", \"+e+\")\";var r,t,n,e,u},r.prototype.toHsl=function(){return d(c(this.rgba))},r.prototype.toHslString=function(){return r=d(c(this.rgba)),t=r.h,n=r.s,e=r.l,(u=r.a)<1?\"hsla(\"+t+\", \"+n+\"%, \"+e+\"%, \"+u+\")\":\"hsl(\"+t+\", \"+n+\"%, \"+e+\"%)\";var r,t,n,e,u},r.prototype.toHsv=function(){return r=h(this.rgba),{h:n(r.h),s:n(r.s),v:n(r.v),a:n(r.a,3)};var r},r.prototype.invert=function(){return w({r:255-(r=this.rgba).r,g:255-r.g,b:255-r.b,a:r.a});var r},r.prototype.saturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,r))},r.prototype.desaturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,-r))},r.prototype.grayscale=function(){return w(M(this.rgba,-1))},r.prototype.lighten=function(r){return void 0===r&&(r=.1),w($(this.rgba,r))},r.prototype.darken=function(r){return void 0===r&&(r=.1),w($(this.rgba,-r))},r.prototype.rotate=function(r){return void 0===r&&(r=15),this.hue(this.hue()+r)},r.prototype.alpha=function(r){return\"number\"==typeof r?w({r:(t=this.rgba).r,g:t.g,b:t.b,a:r}):n(this.rgba.a,3);var t},r.prototype.hue=function(r){var t=c(this.rgba);return\"number\"==typeof r?w({h:r,s:t.s,l:t.l,a:t.a}):n(t.h)},r.prototype.isEqual=function(r){return this.toHex()===w(r).toHex()},r}(),w=function(r){return r instanceof j?r:new j(r)},S=[],k=function(r){r.forEach(function(r){S.indexOf(r)<0&&(r(j,y),S.push(r))})},E=function(){return new j({r:255*Math.random(),g:255*Math.random(),b:255*Math.random()})};export{j as Colord,w as colord,k as extend,I as getFormat,E as random};\n","var a=function(a){return\"string\"==typeof a?a.length>0:\"number\"==typeof a},t=function(a,t,o){return void 0===t&&(t=0),void 0===o&&(o=Math.pow(10,t)),Math.round(o*a)/o+0},o=function(a,t,o){return void 0===t&&(t=0),void 0===o&&(o=1),a>o?o:a>t?a:t},r=function(a){var t=a/255;return t<.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)},h=function(a){return 255*(a>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a)},n=96.422,p=100,M=82.521,u=function(a){var t,r,n={x:.9555766*(t=a).x+-.0230393*t.y+.0631636*t.z,y:-.0282895*t.x+1.0099416*t.y+.0210077*t.z,z:.0122982*t.x+-.020483*t.y+1.3299098*t.z};return r={r:h(.032404542*n.x-.015371385*n.y-.004985314*n.z),g:h(-.00969266*n.x+.018760108*n.y+41556e-8*n.z),b:h(556434e-9*n.x-.002040259*n.y+.010572252*n.z),a:a.a},{r:o(r.r,0,255),g:o(r.g,0,255),b:o(r.b,0,255),a:o(r.a)}},e=function(a){var t=r(a.r),h=r(a.g),u=r(a.b);return function(a){return{x:o(a.x,0,n),y:o(a.y,0,p),z:o(a.z,0,M),a:o(a.a)}}(function(a){return{x:1.0478112*a.x+.0228866*a.y+-.050127*a.z,y:.0295424*a.x+.9904844*a.y+-.0170491*a.z,z:-.0092345*a.x+.0150436*a.y+.7521316*a.z,a:a.a}}({x:100*(.4124564*t+.3575761*h+.1804375*u),y:100*(.2126729*t+.7151522*h+.072175*u),z:100*(.0193339*t+.119192*h+.9503041*u),a:a.a}))},w=216/24389,b=24389/27,i=function(t){var r=t.l,h=t.a,n=t.b,p=t.alpha,M=void 0===p?1:p;if(!a(r)||!a(h)||!a(n))return null;var u=function(a){return{l:o(a.l,0,400),a:a.a,b:a.b,alpha:o(a.alpha)}}({l:Number(r),a:Number(h),b:Number(n),alpha:Number(M)});return l(u)},l=function(a){var t=(a.l+16)/116,o=a.a/500+t,r=t-a.b/200;return u({x:(Math.pow(o,3)>w?Math.pow(o,3):(116*o-16)/b)*n,y:(a.l>8?Math.pow((a.l+16)/116,3):a.l/b)*p,z:(Math.pow(r,3)>w?Math.pow(r,3):(116*r-16)/b)*M,a:a.alpha})};export default function(a,r){a.prototype.toLab=function(){return o=e(this.rgba),h=o.y/p,u=o.z/M,r=(r=o.x/n)>w?Math.cbrt(r):(b*r+16)/116,a={l:116*(h=h>w?Math.cbrt(h):(b*h+16)/116)-16,a:500*(r-h),b:200*(h-(u=u>w?Math.cbrt(u):(b*u+16)/116)),alpha:o.a},{l:t(a.l,2),a:t(a.a,2),b:t(a.b,2),alpha:t(a.alpha,3)};var a,o,r,h,u},a.prototype.delta=function(r){void 0===r&&(r=\"#FFF\");var h=r instanceof a?r:new a(r),n=function(a,t){var o=a.l,r=a.a,h=a.b,n=t.l,p=t.a,M=t.b,u=180/Math.PI,e=Math.PI/180,w=Math.pow(Math.pow(r,2)+Math.pow(h,2),.5),b=Math.pow(Math.pow(p,2)+Math.pow(M,2),.5),i=(o+n)/2,l=Math.pow((w+b)/2,7),c=.5*(1-Math.pow(l/(l+Math.pow(25,7)),.5)),f=r*(1+c),y=p*(1+c),v=Math.pow(Math.pow(f,2)+Math.pow(h,2),.5),x=Math.pow(Math.pow(y,2)+Math.pow(M,2),.5),z=(v+x)/2,s=0===f&&0===h?0:Math.atan2(h,f)*u,d=0===y&&0===M?0:Math.atan2(M,y)*u;s<0&&(s+=360),d<0&&(d+=360);var g=d-s,m=Math.abs(d-s);m>180&&d<=s?g+=360:m>180&&d>s&&(g-=360);var N=s+d;m<=180?N/=2:N=(s+d<360?N+360:N-360)/2;var F=1-.17*Math.cos(e*(N-30))+.24*Math.cos(2*e*N)+.32*Math.cos(e*(3*N+6))-.2*Math.cos(e*(4*N-63)),L=n-o,I=x-v,P=2*Math.sin(e*g/2)*Math.pow(v*x,.5),j=1+.015*Math.pow(i-50,2)/Math.pow(20+Math.pow(i-50,2),.5),k=1+.045*z,q=1+.015*z*F,A=30*Math.exp(-1*Math.pow((N-275)/25,2)),B=-2*Math.pow(l/(l+Math.pow(25,7)),.5)*Math.sin(2*e*A);return Math.pow(Math.pow(L/1/j,2)+Math.pow(I/1/k,2)+Math.pow(P/1/q,2)+B*I*P/(1*k*1*q),.5)}(this.toLab(),h.toLab())/100;return o(t(n,3))},r.object.push([i,\"lab\"])}\n","// Wrapper elements.\nexport const SVG = 'svg';\nexport const DEFS = 'defs';\nexport const G = 'g';\n\nexport const TEXT = 'text';\n\n// Geometry elements.\nexport const LINE = 'line';\nexport const RECT = 'rect';\nexport const POLYGON = 'polygon';\nexport const POLYLINE = 'polyline';\nexport const PATH = 'path';\nexport const CIRCLE = 'circle';\nexport const ELLIPSE = 'ellipse';\n\n// https://css-tricks.com/svg-properties-and-css/\nexport const SVG_STYLE_FILL = 'fill';\nexport const SVG_STYLE_STROKE_WIDTH = 'stroke-width';\nexport const SVG_STYLE_STROKE_COLOR = 'stroke';\nexport const SVG_STYLE_COLOR = 'color';\nexport const SVG_STYLE_OPACITY = 'opacity';\nexport const SVG_STYLE_MASK = 'mask';\nexport const SVG_STYLE_CLIP_PATH = 'clip-path';\nexport const SVG_STYLE_STROKE_DASH_ARRAY = 'stroke-dasharray';","'use strict';\n\n\nvar paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 };\n\nvar SPECIAL_SPACES = [\n  0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006,\n  0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF\n];\n\nfunction isSpace(ch) {\n  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029) || // Line terminators\n    // White spaces\n    (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n    (ch >= 0x1680 && SPECIAL_SPACES.indexOf(ch) >= 0);\n}\n\nfunction isCommand(code) {\n  /*eslint-disable no-bitwise*/\n  switch (code | 0x20) {\n    case 0x6D/* m */:\n    case 0x7A/* z */:\n    case 0x6C/* l */:\n    case 0x68/* h */:\n    case 0x76/* v */:\n    case 0x63/* c */:\n    case 0x73/* s */:\n    case 0x71/* q */:\n    case 0x74/* t */:\n    case 0x61/* a */:\n    case 0x72/* r */:\n      return true;\n  }\n  return false;\n}\n\nfunction isArc(code) {\n  return (code | 0x20) === 0x61;\n}\n\nfunction isDigit(code) {\n  return (code >= 48 && code <= 57);   // 0..9\n}\n\nfunction isDigitStart(code) {\n  return (code >= 48 && code <= 57) || /* 0..9 */\n          code === 0x2B || /* + */\n          code === 0x2D || /* - */\n          code === 0x2E;   /* . */\n}\n\n\nfunction State(path) {\n  this.index  = 0;\n  this.path   = path;\n  this.max    = path.length;\n  this.result = [];\n  this.param  = 0.0;\n  this.err    = '';\n  this.segmentStart = 0;\n  this.data   = [];\n}\n\nfunction skipSpaces(state) {\n  while (state.index < state.max && isSpace(state.path.charCodeAt(state.index))) {\n    state.index++;\n  }\n}\n\n\nfunction scanFlag(state) {\n  var ch = state.path.charCodeAt(state.index);\n\n  if (ch === 0x30/* 0 */) {\n    state.param = 0;\n    state.index++;\n    return;\n  }\n\n  if (ch === 0x31/* 1 */) {\n    state.param = 1;\n    state.index++;\n    return;\n  }\n\n  state.err = 'SvgPath: arc flag can be 0 or 1 only (at pos ' + state.index + ')';\n}\n\n\nfunction scanParam(state) {\n  var start = state.index,\n      index = start,\n      max = state.max,\n      zeroFirst = false,\n      hasCeiling = false,\n      hasDecimal = false,\n      hasDot = false,\n      ch;\n\n  if (index >= max) {\n    state.err = 'SvgPath: missed param (at pos ' + index + ')';\n    return;\n  }\n  ch = state.path.charCodeAt(index);\n\n  if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n    index++;\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  // This logic is shamelessly borrowed from Esprima\n  // https://github.com/ariya/esprimas\n  //\n  if (!isDigit(ch) && ch !== 0x2E/* . */) {\n    state.err = 'SvgPath: param should start with 0..9 or `.` (at pos ' + index + ')';\n    return;\n  }\n\n  if (ch !== 0x2E/* . */) {\n    zeroFirst = (ch === 0x30/* 0 */);\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n\n    if (zeroFirst && index < max) {\n      // decimal number starts with '0' such as '09' is illegal.\n      if (ch && isDigit(ch)) {\n        state.err = 'SvgPath: numbers started with `0` such as `09` are illegal (at pos ' + start + ')';\n        return;\n      }\n    }\n\n    while (index < max && isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasCeiling = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x2E/* . */) {\n    hasDot = true;\n    index++;\n    while (isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasDecimal = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x65/* e */ || ch === 0x45/* E */) {\n    if (hasDot && !hasCeiling && !hasDecimal) {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      index++;\n    }\n    if (index < max && isDigit(state.path.charCodeAt(index))) {\n      while (index < max && isDigit(state.path.charCodeAt(index))) {\n        index++;\n      }\n    } else {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n  }\n\n  state.index = index;\n  state.param = parseFloat(state.path.slice(start, index)) + 0.0;\n}\n\n\nfunction finalizeSegment(state) {\n  var cmd, cmdLC;\n\n  // Process duplicated commands (without comand name)\n\n  // This logic is shamelessly borrowed from Raphael\n  // https://github.com/DmitryBaranovskiy/raphael/\n  //\n  cmd   = state.path[state.segmentStart];\n  cmdLC = cmd.toLowerCase();\n\n  var params = state.data;\n\n  if (cmdLC === 'm' && params.length > 2) {\n    state.result.push([ cmd, params[0], params[1] ]);\n    params = params.slice(2);\n    cmdLC = 'l';\n    cmd = (cmd === 'm') ? 'l' : 'L';\n  }\n\n  if (cmdLC === 'r') {\n    state.result.push([ cmd ].concat(params));\n  } else {\n\n    while (params.length >= paramCounts[cmdLC]) {\n      state.result.push([ cmd ].concat(params.splice(0, paramCounts[cmdLC])));\n      if (!paramCounts[cmdLC]) {\n        break;\n      }\n    }\n  }\n}\n\n\nfunction scanSegment(state) {\n  var max = state.max,\n      cmdCode, is_arc, comma_found, need_params, i;\n\n  state.segmentStart = state.index;\n  cmdCode = state.path.charCodeAt(state.index);\n  is_arc = isArc(cmdCode);\n\n  if (!isCommand(cmdCode)) {\n    state.err = 'SvgPath: bad command ' + state.path[state.index] + ' (at pos ' + state.index + ')';\n    return;\n  }\n\n  need_params = paramCounts[state.path[state.index].toLowerCase()];\n\n  state.index++;\n  skipSpaces(state);\n\n  state.data = [];\n\n  if (!need_params) {\n    // Z\n    finalizeSegment(state);\n    return;\n  }\n\n  comma_found = false;\n\n  for (;;) {\n    for (i = need_params; i > 0; i--) {\n      if (is_arc && (i === 3 || i === 4)) scanFlag(state);\n      else scanParam(state);\n\n      if (state.err.length) {\n        finalizeSegment(state);\n        return;\n      }\n      state.data.push(state.param);\n\n      skipSpaces(state);\n      comma_found = false;\n\n      if (state.index < max && state.path.charCodeAt(state.index) === 0x2C/* , */) {\n        state.index++;\n        skipSpaces(state);\n        comma_found = true;\n      }\n    }\n\n    // after ',' param is mandatory\n    if (comma_found) {\n      continue;\n    }\n\n    if (state.index >= state.max) {\n      break;\n    }\n\n    // Stop on next segment\n    if (!isDigitStart(state.path.charCodeAt(state.index))) {\n      break;\n    }\n  }\n\n  finalizeSegment(state);\n}\n\n\n/* Returns array of segments:\n *\n * [\n *   [ command, coord1, coord2, ... ]\n * ]\n */\nmodule.exports = function pathParse(svgPath) {\n  var state = new State(svgPath);\n  var max = state.max;\n\n  skipSpaces(state);\n\n  while (state.index < max && !state.err.length) {\n    scanSegment(state);\n  }\n\n  if (state.result.length) {\n    if ('mM'.indexOf(state.result[0][0]) < 0) {\n      state.err = 'SvgPath: string should start with `M` or `m`';\n      state.result = [];\n    } else {\n      state.result[0][0] = 'M';\n    }\n  }\n\n  return {\n    err: state.err,\n    segments: state.result\n  };\n};\n","'use strict';\n\n// combine 2 matrixes\n// m1, m2 - [a, b, c, d, e, g]\n//\nfunction combine(m1, m2) {\n  return [\n    m1[0] * m2[0] + m1[2] * m2[1],\n    m1[1] * m2[0] + m1[3] * m2[1],\n    m1[0] * m2[2] + m1[2] * m2[3],\n    m1[1] * m2[2] + m1[3] * m2[3],\n    m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n    m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n}\n\n\nfunction Matrix() {\n  if (!(this instanceof Matrix)) { return new Matrix(); }\n  this.queue = [];   // list of matrixes to apply\n  this.cache = null; // combined matrix cache\n}\n\n\nMatrix.prototype.matrix = function (m) {\n  if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0) {\n    return this;\n  }\n  this.cache = null;\n  this.queue.push(m);\n  return this;\n};\n\n\nMatrix.prototype.translate = function (tx, ty) {\n  if (tx !== 0 || ty !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, 0, 1, tx, ty ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.scale = function (sx, sy) {\n  if (sx !== 1 || sy !== 1) {\n    this.cache = null;\n    this.queue.push([ sx, 0, 0, sy, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.rotate = function (angle, rx, ry) {\n  var rad, cos, sin;\n\n  if (angle !== 0) {\n    this.translate(rx, ry);\n\n    rad = angle * Math.PI / 180;\n    cos = Math.cos(rad);\n    sin = Math.sin(rad);\n\n    this.queue.push([ cos, sin, -sin, cos, 0, 0 ]);\n    this.cache = null;\n\n    this.translate(-rx, -ry);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewX = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewY = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\n// Flatten queue\n//\nMatrix.prototype.toArray = function () {\n  if (this.cache) {\n    return this.cache;\n  }\n\n  if (!this.queue.length) {\n    this.cache = [ 1, 0, 0, 1, 0, 0 ];\n    return this.cache;\n  }\n\n  this.cache = this.queue[0];\n\n  if (this.queue.length === 1) {\n    return this.cache;\n  }\n\n  for (var i = 1; i < this.queue.length; i++) {\n    this.cache = combine(this.cache, this.queue[i]);\n  }\n\n  return this.cache;\n};\n\n\n// Apply list of matrixes to (x,y) point.\n// If `isRelative` set, `translate` component of matrix will be skipped\n//\nMatrix.prototype.calc = function (x, y, isRelative) {\n  var m;\n\n  // Don't change point on empty transforms queue\n  if (!this.queue.length) { return [ x, y ]; }\n\n  // Calculate final matrix, if not exists\n  //\n  // NB. if you deside to apply transforms to point one-by-one,\n  // they should be taken in reverse order\n\n  if (!this.cache) {\n    this.cache = this.toArray();\n  }\n\n  m = this.cache;\n\n  // Apply matrix to point\n  return [\n    x * m[0] + y * m[2] + (isRelative ? 0 : m[4]),\n    x * m[1] + y * m[3] + (isRelative ? 0 : m[5])\n  ];\n};\n\n\nmodule.exports = Matrix;\n","'use strict';\n\n\nvar Matrix = require('./matrix');\n\nvar operations = {\n  matrix: true,\n  scale: true,\n  rotate: true,\n  translate: true,\n  skewX: true,\n  skewY: true\n};\n\nvar CMD_SPLIT_RE    = /\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/;\nvar PARAMS_SPLIT_RE = /[\\s,]+/;\n\n\nmodule.exports = function transformParse(transformString) {\n  var matrix = new Matrix();\n  var cmd, params;\n\n  // Split value into ['', 'translate', '10 50', '', 'scale', '2', '', 'rotate',  '-45', '']\n  transformString.split(CMD_SPLIT_RE).forEach(function (item) {\n\n    // Skip empty elements\n    if (!item.length) { return; }\n\n    // remember operation\n    if (typeof operations[item] !== 'undefined') {\n      cmd = item;\n      return;\n    }\n\n    // extract params & att operation to matrix\n    params = item.split(PARAMS_SPLIT_RE).map(function (i) {\n      return +i || 0;\n    });\n\n    // If params count is not correct - ignore command\n    switch (cmd) {\n      case 'matrix':\n        if (params.length === 6) {\n          matrix.matrix(params);\n        }\n        return;\n\n      case 'scale':\n        if (params.length === 1) {\n          matrix.scale(params[0], params[0]);\n        } else if (params.length === 2) {\n          matrix.scale(params[0], params[1]);\n        }\n        return;\n\n      case 'rotate':\n        if (params.length === 1) {\n          matrix.rotate(params[0], 0, 0);\n        } else if (params.length === 3) {\n          matrix.rotate(params[0], params[1], params[2]);\n        }\n        return;\n\n      case 'translate':\n        if (params.length === 1) {\n          matrix.translate(params[0], 0);\n        } else if (params.length === 2) {\n          matrix.translate(params[0], params[1]);\n        }\n        return;\n\n      case 'skewX':\n        if (params.length === 1) {\n          matrix.skewX(params[0]);\n        }\n        return;\n\n      case 'skewY':\n        if (params.length === 1) {\n          matrix.skewY(params[0]);\n        }\n        return;\n    }\n  });\n\n  return matrix;\n};\n","// Convert an arc to a sequence of cubic bÃ©zier curves\n//\n'use strict';\n\n\nvar TAU = Math.PI * 2;\n\n\n/* eslint-disable space-infix-ops */\n\n// Calculate an angle between two unit vectors\n//\n// Since we measure angle between radii of circular arcs,\n// we can use simplified math (without length normalization)\n//\nfunction unit_vector_angle(ux, uy, vx, vy) {\n  var sign = (ux * vy - uy * vx < 0) ? -1 : 1;\n  var dot  = ux * vx + uy * vy;\n\n  // Add this to work with arbitrary vectors:\n  // dot /= Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n\n  // rounding errors, e.g. -1.0000000000000002 can screw up this\n  if (dot >  1.0) { dot =  1.0; }\n  if (dot < -1.0) { dot = -1.0; }\n\n  return sign * Math.acos(dot);\n}\n\n\n// Convert from endpoint to center parameterization,\n// see http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n//\n// Return [cx, cy, theta1, delta_theta]\n//\nfunction get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_phi, cos_phi) {\n  // Step 1.\n  //\n  // Moving an ellipse so origin will be the middlepoint between our two\n  // points. After that, rotate it to line up ellipse axes with coordinate\n  // axes.\n  //\n  var x1p =  cos_phi*(x1-x2)/2 + sin_phi*(y1-y2)/2;\n  var y1p = -sin_phi*(x1-x2)/2 + cos_phi*(y1-y2)/2;\n\n  var rx_sq  =  rx * rx;\n  var ry_sq  =  ry * ry;\n  var x1p_sq = x1p * x1p;\n  var y1p_sq = y1p * y1p;\n\n  // Step 2.\n  //\n  // Compute coordinates of the centre of this ellipse (cx', cy')\n  // in the new coordinate system.\n  //\n  var radicant = (rx_sq * ry_sq) - (rx_sq * y1p_sq) - (ry_sq * x1p_sq);\n\n  if (radicant < 0) {\n    // due to rounding errors it might be e.g. -1.3877787807814457e-17\n    radicant = 0;\n  }\n\n  radicant /=   (rx_sq * y1p_sq) + (ry_sq * x1p_sq);\n  radicant = Math.sqrt(radicant) * (fa === fs ? -1 : 1);\n\n  var cxp = radicant *  rx/ry * y1p;\n  var cyp = radicant * -ry/rx * x1p;\n\n  // Step 3.\n  //\n  // Transform back to get centre coordinates (cx, cy) in the original\n  // coordinate system.\n  //\n  var cx = cos_phi*cxp - sin_phi*cyp + (x1+x2)/2;\n  var cy = sin_phi*cxp + cos_phi*cyp + (y1+y2)/2;\n\n  // Step 4.\n  //\n  // Compute angles (theta1, delta_theta).\n  //\n  var v1x =  (x1p - cxp) / rx;\n  var v1y =  (y1p - cyp) / ry;\n  var v2x = (-x1p - cxp) / rx;\n  var v2y = (-y1p - cyp) / ry;\n\n  var theta1 = unit_vector_angle(1, 0, v1x, v1y);\n  var delta_theta = unit_vector_angle(v1x, v1y, v2x, v2y);\n\n  if (fs === 0 && delta_theta > 0) {\n    delta_theta -= TAU;\n  }\n  if (fs === 1 && delta_theta < 0) {\n    delta_theta += TAU;\n  }\n\n  return [ cx, cy, theta1, delta_theta ];\n}\n\n//\n// Approximate one unit arc segment with bÃ©zier curves,\n// see http://math.stackexchange.com/questions/873224\n//\nfunction approximate_unit_arc(theta1, delta_theta) {\n  var alpha = 4/3 * Math.tan(delta_theta/4);\n\n  var x1 = Math.cos(theta1);\n  var y1 = Math.sin(theta1);\n  var x2 = Math.cos(theta1 + delta_theta);\n  var y2 = Math.sin(theta1 + delta_theta);\n\n  return [ x1, y1, x1 - y1*alpha, y1 + x1*alpha, x2 + y2*alpha, y2 - x2*alpha, x2, y2 ];\n}\n\nmodule.exports = function a2c(x1, y1, x2, y2, fa, fs, rx, ry, phi) {\n  var sin_phi = Math.sin(phi * TAU / 360);\n  var cos_phi = Math.cos(phi * TAU / 360);\n\n  // Make sure radii are valid\n  //\n  var x1p =  cos_phi*(x1-x2)/2 + sin_phi*(y1-y2)/2;\n  var y1p = -sin_phi*(x1-x2)/2 + cos_phi*(y1-y2)/2;\n\n  if (x1p === 0 && y1p === 0) {\n    // we're asked to draw line to itself\n    return [];\n  }\n\n  if (rx === 0 || ry === 0) {\n    // one of the radii is zero\n    return [];\n  }\n\n\n  // Compensate out-of-range radii\n  //\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = (x1p * x1p) / (rx * rx) + (y1p * y1p) / (ry * ry);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n\n  // Get center parameters (cx, cy, theta1, delta_theta)\n  //\n  var cc = get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_phi, cos_phi);\n\n  var result = [];\n  var theta1 = cc[2];\n  var delta_theta = cc[3];\n\n  // Split an arc to multiple segments, so each segment\n  // will be less than Ï„/4 (= 90Â°)\n  //\n  var segments = Math.max(Math.ceil(Math.abs(delta_theta) / (TAU / 4)), 1);\n  delta_theta /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    result.push(approximate_unit_arc(theta1, delta_theta));\n    theta1 += delta_theta;\n  }\n\n  // We have a bezier approximation of a unit circle,\n  // now need to transform back to the original ellipse\n  //\n  return result.map(function (curve) {\n    for (var i = 0; i < curve.length; i += 2) {\n      var x = curve[i + 0];\n      var y = curve[i + 1];\n\n      // scale\n      x *= rx;\n      y *= ry;\n\n      // rotate\n      var xp = cos_phi*x - sin_phi*y;\n      var yp = sin_phi*x + cos_phi*y;\n\n      // translate\n      curve[i + 0] = xp + cc[0];\n      curve[i + 1] = yp + cc[1];\n    }\n\n    return curve;\n  });\n};\n","'use strict';\n\n/* eslint-disable space-infix-ops */\n\n// The precision used to consider an ellipse as a circle\n//\nvar epsilon = 0.0000000001;\n\n// To convert degree in radians\n//\nvar torad = Math.PI / 180;\n\n// Class constructor :\n//  an ellipse centred at 0 with radii rx,ry and x - axis - angle ax.\n//\nfunction Ellipse(rx, ry, ax) {\n  if (!(this instanceof Ellipse)) { return new Ellipse(rx, ry, ax); }\n  this.rx = rx;\n  this.ry = ry;\n  this.ax = ax;\n}\n\n// Apply a linear transform m to the ellipse\n// m is an array representing a matrix :\n//    -         -\n//   | m[0] m[2] |\n//   | m[1] m[3] |\n//    -         -\n//\nEllipse.prototype.transform = function (m) {\n  // We consider the current ellipse as image of the unit circle\n  // by first scale(rx,ry) and then rotate(ax) ...\n  // So we apply ma =  m x rotate(ax) x scale(rx,ry) to the unit circle.\n  var c = Math.cos(this.ax * torad), s = Math.sin(this.ax * torad);\n  var ma = [\n    this.rx * (m[0]*c + m[2]*s),\n    this.rx * (m[1]*c + m[3]*s),\n    this.ry * (-m[0]*s + m[2]*c),\n    this.ry * (-m[1]*s + m[3]*c)\n  ];\n\n  // ma * transpose(ma) = [ J L ]\n  //                      [ L K ]\n  // L is calculated later (if the image is not a circle)\n  var J = ma[0]*ma[0] + ma[2]*ma[2],\n      K = ma[1]*ma[1] + ma[3]*ma[3];\n\n  // the discriminant of the characteristic polynomial of ma * transpose(ma)\n  var D = ((ma[0]-ma[3])*(ma[0]-ma[3]) + (ma[2]+ma[1])*(ma[2]+ma[1])) *\n          ((ma[0]+ma[3])*(ma[0]+ma[3]) + (ma[2]-ma[1])*(ma[2]-ma[1]));\n\n  // the \"mean eigenvalue\"\n  var JK = (J + K) / 2;\n\n  // check if the image is (almost) a circle\n  if (D < epsilon * JK) {\n    // if it is\n    this.rx = this.ry = Math.sqrt(JK);\n    this.ax = 0;\n    return this;\n  }\n\n  // if it is not a circle\n  var L = ma[0]*ma[1] + ma[2]*ma[3];\n\n  D = Math.sqrt(D);\n\n  // {l1,l2} = the two eigen values of ma * transpose(ma)\n  var l1 = JK + D/2,\n      l2 = JK - D/2;\n  // the x - axis - rotation angle is the argument of the l1 - eigenvector\n  /*eslint-disable indent*/\n  this.ax = (Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon) ?\n    90\n  :\n    Math.atan(Math.abs(L) > Math.abs(l1 - K) ?\n      (l1 - J) / L\n    :\n      L / (l1 - K)\n    ) * 180 / Math.PI;\n  /*eslint-enable indent*/\n\n  // if ax > 0 => rx = sqrt(l1), ry = sqrt(l2), else exchange axes and ax += 90\n  if (this.ax >= 0) {\n    // if ax in [0,90]\n    this.rx = Math.sqrt(l1);\n    this.ry = Math.sqrt(l2);\n  } else {\n    // if ax in ]-90,0[ => exchange axes\n    this.ax += 90;\n    this.rx = Math.sqrt(l2);\n    this.ry = Math.sqrt(l1);\n  }\n\n  return this;\n};\n\n// Check if the ellipse is (almost) degenerate, i.e. rx = 0 or ry = 0\n//\nEllipse.prototype.isDegenerate = function () {\n  return (this.rx < epsilon * this.ry || this.ry < epsilon * this.rx);\n};\n\nmodule.exports = Ellipse;\n","// SVG Path transformations library\n//\n// Usage:\n//\n//    SvgPath('...')\n//      .translate(-150, -100)\n//      .scale(0.5)\n//      .translate(-150, -100)\n//      .toFixed(1)\n//      .toString()\n//\n\n'use strict';\n\n\nvar pathParse      = require('./path_parse');\nvar transformParse = require('./transform_parse');\nvar matrix         = require('./matrix');\nvar a2c            = require('./a2c');\nvar ellipse        = require('./ellipse');\n\n\n// Class constructor\n//\nfunction SvgPath(path) {\n  if (!(this instanceof SvgPath)) { return new SvgPath(path); }\n\n  var pstate = pathParse(path);\n\n  // Array of path segments.\n  // Each segment is array [command, param1, param2, ...]\n  this.segments = pstate.segments;\n\n  // Error message on parse error.\n  this.err      = pstate.err;\n\n  // Transforms stack for lazy evaluation\n  this.__stack    = [];\n}\n\nSvgPath.from = function (src) {\n  if (typeof src === 'string') return new SvgPath(src);\n\n  if (src instanceof SvgPath) {\n    // Create empty object\n    var s = new SvgPath('');\n\n    // Clone properies\n    s.err = src.err;\n    s.segments = src.segments.map(function (sgm) { return sgm.slice(); });\n    s.__stack = src.__stack.map(function (m) {\n      return matrix().matrix(m.toArray());\n    });\n\n    return s;\n  }\n\n  throw new Error('SvgPath.from: invalid param type ' + src);\n};\n\n\nSvgPath.prototype.__matrix = function (m) {\n  var self = this, i;\n\n  // Quick leave for empty matrix\n  if (!m.queue.length) { return; }\n\n  this.iterate(function (s, index, x, y) {\n    var p, result, name, isRelative;\n\n    switch (s[0]) {\n\n      // Process 'assymetric' commands separately\n      case 'v':\n        p      = m.calc(0, s[1], true);\n        result = (p[0] === 0) ? [ 'v', p[1] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'V':\n        p      = m.calc(x, s[1], false);\n        result = (p[0] === m.calc(x, y, false)[0]) ? [ 'V', p[1] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'h':\n        p      = m.calc(s[1], 0, true);\n        result = (p[1] === 0) ? [ 'h', p[0] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'H':\n        p      = m.calc(s[1], y, false);\n        result = (p[1] === m.calc(x, y, false)[1]) ? [ 'H', p[0] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'a':\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n\n        // Drop segment if arc is empty (end point === start point)\n        /*if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          return [];\n        }*/\n\n        // Transform rx, ry and the x-axis-rotation\n        var ma = m.toArray();\n        var e = ellipse(s[1], s[2], s[3]).transform(ma);\n\n        // flip sweep-flag if matrix is not orientation-preserving\n        if (ma[0] * ma[3] - ma[1] * ma[2] < 0) {\n          s[5] = s[5] ? '0' : '1';\n        }\n\n        // Transform end point as usual (without translation for relative notation)\n        p = m.calc(s[6], s[7], s[0] === 'a');\n\n        // Empty arcs can be ignored by renderer, but should not be dropped\n        // to avoid collisions with `S A S` and so on. Replace with empty line.\n        if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n          break;\n        }\n\n        // if the resulting ellipse is (almost) a segment ...\n        if (e.isDegenerate()) {\n          // replace the arc by a line\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n        } else {\n          // if it is a real ellipse\n          // s[0], s[4] and s[5] are not modified\n          result = [ s[0], e.rx, e.ry, e.ax, s[4], s[5], p[0], p[1] ];\n        }\n\n        break;\n\n      case 'm':\n        // Edge case. The very first `m` should be processed as absolute, if happens.\n        // Make sense for coord shift transforms.\n        isRelative = index > 0;\n\n        p = m.calc(s[1], s[2], isRelative);\n        result = [ 'm', p[0], p[1] ];\n        break;\n\n      default:\n        name       = s[0];\n        result     = [ name ];\n        isRelative = (name.toLowerCase() === name);\n\n        // Apply transformations to the segment\n        for (i = 1; i < s.length; i += 2) {\n          p = m.calc(s[i], s[i + 1], isRelative);\n          result.push(p[0], p[1]);\n        }\n    }\n\n    self.segments[index] = result;\n  }, true);\n};\n\n\n// Apply stacked commands\n//\nSvgPath.prototype.__evaluateStack = function () {\n  var m, i;\n\n  if (!this.__stack.length) { return; }\n\n  if (this.__stack.length === 1) {\n    this.__matrix(this.__stack[0]);\n    this.__stack = [];\n    return;\n  }\n\n  m = matrix();\n  i = this.__stack.length;\n\n  while (--i >= 0) {\n    m.matrix(this.__stack[i].toArray());\n  }\n\n  this.__matrix(m);\n  this.__stack = [];\n};\n\n\n// Convert processed SVG Path back to string\n//\nSvgPath.prototype.toString = function () {\n  var result = '', prevCmd = '', cmdSkipped = false;\n\n  this.__evaluateStack();\n\n  for (var i = 0, len = this.segments.length; i < len; i++) {\n    var segment = this.segments[i];\n    var cmd = segment[0];\n\n    // Command not repeating => store\n    if (cmd !== prevCmd || cmd === 'm' || cmd === 'M') {\n      // workaround for FontForge SVG importing bug, keep space between \"z m\".\n      if (cmd === 'm' && prevCmd === 'z') result += ' ';\n      result += cmd;\n\n      cmdSkipped = false;\n    } else {\n      cmdSkipped = true;\n    }\n\n    // Store segment params\n    for (var pos = 1; pos < segment.length; pos++) {\n      var val = segment[pos];\n      // Space can be skipped\n      // 1. After command (always)\n      // 2. For negative value (with '-' at start)\n      if (pos === 1) {\n        if (cmdSkipped && val >= 0) result += ' ';\n      } else if (val >= 0) result += ' ';\n\n      result += val;\n    }\n\n    prevCmd = cmd;\n  }\n\n  return result;\n};\n\n\n// Translate path to (x [, y])\n//\nSvgPath.prototype.translate = function (x, y) {\n  this.__stack.push(matrix().translate(x, y || 0));\n  return this;\n};\n\n\n// Scale path to (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.scale = function (sx, sy) {\n  this.__stack.push(matrix().scale(sx, (!sy && (sy !== 0)) ? sx : sy));\n  return this;\n};\n\n\n// Rotate path around point (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.rotate = function (angle, rx, ry) {\n  this.__stack.push(matrix().rotate(angle, rx || 0, ry || 0));\n  return this;\n};\n\n\n// Skew path along the X axis by `degrees` angle\n//\nSvgPath.prototype.skewX = function (degrees) {\n  this.__stack.push(matrix().skewX(degrees));\n  return this;\n};\n\n\n// Skew path along the Y axis by `degrees` angle\n//\nSvgPath.prototype.skewY = function (degrees) {\n  this.__stack.push(matrix().skewY(degrees));\n  return this;\n};\n\n\n// Apply matrix transform (array of 6 elements)\n//\nSvgPath.prototype.matrix = function (m) {\n  this.__stack.push(matrix().matrix(m));\n  return this;\n};\n\n\n// Transform path according to \"transform\" attr of SVG spec\n//\nSvgPath.prototype.transform = function (transformString) {\n  if (!transformString.trim()) {\n    return this;\n  }\n  this.__stack.push(transformParse(transformString));\n  return this;\n};\n\n\n// Round coords with given decimal precition.\n// 0 by default (to integers)\n//\nSvgPath.prototype.round = function (d) {\n  var contourStartDeltaX = 0, contourStartDeltaY = 0, deltaX = 0, deltaY = 0, l;\n\n  d = d || 0;\n\n  this.__evaluateStack();\n\n  this.segments.forEach(function (s) {\n    var isRelative = (s[0].toLowerCase() === s[0]);\n\n    switch (s[0]) {\n      case 'H':\n      case 'h':\n        if (isRelative) { s[1] += deltaX; }\n        deltaX = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'V':\n      case 'v':\n        if (isRelative) { s[1] += deltaY; }\n        deltaY = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'Z':\n      case 'z':\n        deltaX = contourStartDeltaX;\n        deltaY = contourStartDeltaY;\n        return;\n\n      case 'M':\n      case 'm':\n        if (isRelative) {\n          s[1] += deltaX;\n          s[2] += deltaY;\n        }\n\n        deltaX = s[1] - s[1].toFixed(d);\n        deltaY = s[2] - s[2].toFixed(d);\n\n        contourStartDeltaX = deltaX;\n        contourStartDeltaY = deltaY;\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        return;\n\n      case 'A':\n      case 'a':\n        // [cmd, rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        if (isRelative) {\n          s[6] += deltaX;\n          s[7] += deltaY;\n        }\n\n        deltaX = s[6] - s[6].toFixed(d);\n        deltaY = s[7] - s[7].toFixed(d);\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        s[3] = +s[3].toFixed(d + 2); // better precision for rotation\n        s[6] = +s[6].toFixed(d);\n        s[7] = +s[7].toFixed(d);\n        return;\n\n      default:\n        // a c l q s t\n        l = s.length;\n\n        if (isRelative) {\n          s[l - 2] += deltaX;\n          s[l - 1] += deltaY;\n        }\n\n        deltaX = s[l - 2] - s[l - 2].toFixed(d);\n        deltaY = s[l - 1] - s[l - 1].toFixed(d);\n\n        s.forEach(function (val, i) {\n          if (!i) { return; }\n          s[i] = +s[i].toFixed(d);\n        });\n        return;\n    }\n  });\n\n  return this;\n};\n\n\n// Apply iterator function to all segments. If function returns result,\n// current segment will be replaced to array of returned segments.\n// If empty array is returned, current regment will be deleted.\n//\nSvgPath.prototype.iterate = function (iterator, keepLazyStack) {\n  var segments = this.segments,\n      replacements = {},\n      needReplace = false,\n      lastX = 0,\n      lastY = 0,\n      countourStartX = 0,\n      countourStartY = 0;\n  var i, j, newSegments;\n\n  if (!keepLazyStack) {\n    this.__evaluateStack();\n  }\n\n  segments.forEach(function (s, index) {\n\n    var res = iterator(s, index, lastX, lastY);\n\n    if (Array.isArray(res)) {\n      replacements[index] = res;\n      needReplace = true;\n    }\n\n    var isRelative = (s[0] === s[0].toLowerCase());\n\n    // calculate absolute X and Y\n    switch (s[0]) {\n      case 'm':\n      case 'M':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        lastY = s[2] + (isRelative ? lastY : 0);\n        countourStartX = lastX;\n        countourStartY = lastY;\n        return;\n\n      case 'h':\n      case 'H':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        return;\n\n      case 'v':\n      case 'V':\n        lastY = s[1] + (isRelative ? lastY : 0);\n        return;\n\n      case 'z':\n      case 'Z':\n        // That make sence for multiple contours\n        lastX = countourStartX;\n        lastY = countourStartY;\n        return;\n\n      default:\n        lastX = s[s.length - 2] + (isRelative ? lastX : 0);\n        lastY = s[s.length - 1] + (isRelative ? lastY : 0);\n    }\n  });\n\n  // Replace segments if iterator return results\n\n  if (!needReplace) { return this; }\n\n  newSegments = [];\n\n  for (i = 0; i < segments.length; i++) {\n    if (typeof replacements[i] !== 'undefined') {\n      for (j = 0; j < replacements[i].length; j++) {\n        newSegments.push(replacements[i][j]);\n      }\n    } else {\n      newSegments.push(segments[i]);\n    }\n  }\n\n  this.segments = newSegments;\n\n  return this;\n};\n\n\n// Converts segments from relative to absolute\n//\nSvgPath.prototype.abs = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameUC = name.toUpperCase(),\n        i;\n\n    // Skip absolute commands\n    if (name === nameUC) { return; }\n\n    s[0] = nameUC;\n\n    switch (name) {\n      case 'v':\n        // v has shifted coords parity\n        s[1] += y;\n        return;\n\n      case 'a':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] += x;\n        s[7] += y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] += i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts segments from absolute to relative\n//\nSvgPath.prototype.rel = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameLC = name.toLowerCase(),\n        i;\n\n    // Skip relative commands\n    if (name === nameLC) { return; }\n\n    // Don't touch the first M to avoid potential confusions.\n    if (index === 0 && name === 'M') { return; }\n\n    s[0] = nameLC;\n\n    switch (name) {\n      case 'V':\n        // V has shifted coords parity\n        s[1] -= y;\n        return;\n\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] -= x;\n        s[7] -= y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] -= i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts arcs to cubic bÃ©zier curves\n//\nSvgPath.prototype.unarc = function () {\n  this.iterate(function (s, index, x, y) {\n    var new_segments, nextX, nextY, result = [], name = s[0];\n\n    // Skip anything except arcs\n    if (name !== 'A' && name !== 'a') { return null; }\n\n    if (name === 'a') {\n      // convert relative arc coordinates to absolute\n      nextX = x + s[6];\n      nextY = y + s[7];\n    } else {\n      nextX = s[6];\n      nextY = s[7];\n    }\n\n    new_segments = a2c(x, y, nextX, nextY, s[4], s[5], s[1], s[2], s[3]);\n\n    // Degenerated arcs can be ignored by renderer, but should not be dropped\n    // to avoid collisions with `S A S` and so on. Replace with empty line.\n    if (new_segments.length === 0) {\n      return [ [ s[0] === 'a' ? 'l' : 'L', s[6], s[7] ] ];\n    }\n\n    new_segments.forEach(function (s) {\n      result.push([ 'C', s[2], s[3], s[4], s[5], s[6], s[7] ]);\n    });\n\n    return result;\n  });\n\n  return this;\n};\n\n\n// Converts smooth curves (with missed control point) to generic curves\n//\nSvgPath.prototype.unshort = function () {\n  var segments = this.segments;\n  var prevControlX, prevControlY, prevSegment;\n  var curControlX, curControlY;\n\n  // TODO: add lazy evaluation flag when relative commands supported\n\n  this.iterate(function (s, idx, x, y) {\n    var name = s[0], nameUC = name.toUpperCase(), isRelative;\n\n    // First command MUST be M|m, it's safe to skip.\n    // Protect from access to [-1] for sure.\n    if (!idx) { return; }\n\n    if (nameUC === 'T') { // quadratic curve\n      isRelative = (name === 't');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'Q') {\n        prevControlX = prevSegment[1] - x;\n        prevControlY = prevSegment[2] - y;\n      } else if (prevSegment[0] === 'q') {\n        prevControlX = prevSegment[1] - prevSegment[3];\n        prevControlY = prevSegment[2] - prevSegment[4];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'q' : 'Q',\n        curControlX, curControlY,\n        s[1], s[2]\n      ];\n\n    } else if (nameUC === 'S') { // cubic curve\n      isRelative = (name === 's');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'C') {\n        prevControlX = prevSegment[3] - x;\n        prevControlY = prevSegment[4] - y;\n      } else if (prevSegment[0] === 'c') {\n        prevControlX = prevSegment[3] - prevSegment[5];\n        prevControlY = prevSegment[4] - prevSegment[6];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'c' : 'C',\n        curControlX, curControlY,\n        s[1], s[2], s[3], s[4]\n      ];\n    }\n  });\n\n  return this;\n};\n\n\nmodule.exports = SvgPath;\n","'use strict';\n\nmodule.exports = require('./lib/svgpath');\n","import { POLYGON, POLYLINE } from './constants';\nimport { applyTransform } from './transforms';\nimport {\n    CircleProperties,\n    EllipseProperties,\n    LineProperties,\n    PathParser,\n    PathProperties,\n    PolygonProperties,\n    PolylineProperties,\n    RectProperties,\n    Transform,\n} from './types';\nimport { removeWhitespacePadding } from './utils';\nimport svgpath from 'svgpath';\nimport { isNonNegativeNumber, isNumber, isString } from '@amandaghassaei/type-checks';\n\n/*\nExport any geometry object as path in Abs coordinates with only L, H, V, B, and C types.\n*/\n\nconst temp = [0, 0] as [number, number];\n\nexport function convertLineToPath(\n    properties: LineProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    let { x1, x2, y1, y2 } = properties;\n    // x1, x2, y1, y2 default to 0.\n    /* c8 ignore next if */\n    if (x1 === undefined) x1 = 0;\n    if (x2 === undefined) x2 = 0;\n    if (y1 === undefined) y1 = 0;\n    if (y2 === undefined) y2 = 0;\n    if (!isNumber(x1) || !isNumber(x2) || !isNumber(y1) || !isNumber(y2)) {\n        parsingErrors.push(`Invalid <line> properties: ${JSON.stringify({ x1, y1, x2, y2 })}.`);\n        return;\n    }\n    if (transform) {\n        temp[0] = x1;\n        temp[1] = y1;\n        [x1, y1] = applyTransform(temp, transform);\n        temp[0] = x2;\n        temp[1] = y2;\n        [x2, y2] = applyTransform(temp, transform);\n    }\n    return `M${x1},${y1} L${x2},${y2}`;\n}\n\nexport function convertRectToPath(\n    properties: RectProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    let { x, y } = properties;\n    // x and y default to 0.\n    if (x === undefined) x = 0;\n    if (y === undefined) y = 0;\n    const { width, height } = properties;\n    if (\n        !isNumber(x) ||\n        !isNumber(y) ||\n        !isNonNegativeNumber(width) ||\n        !isNonNegativeNumber(height)\n    ) {\n        parsingErrors.push(\n            `Invalid <rect> properties: ${JSON.stringify({ x, y, width, height })}.`\n        );\n        return;\n    }\n    let x1 = x;\n    let y1 = y;\n    let x2 = x + width;\n    let y2 = y;\n    let x3 = x + width;\n    let y3 = y + height;\n    let x4 = x;\n    let y4 = y + height;\n    if (transform) {\n        temp[0] = x1;\n        temp[1] = y1;\n        [x1, y1] = applyTransform(temp, transform);\n        temp[0] = x2;\n        temp[1] = y2;\n        [x2, y2] = applyTransform(temp, transform);\n        temp[0] = x3;\n        temp[1] = y3;\n        [x3, y3] = applyTransform(temp, transform);\n        temp[0] = x4;\n        temp[1] = y4;\n        [x4, y4] = applyTransform(temp, transform);\n    }\n    return `M${x1},${y1} L${x2},${y2} L${x3},${y3} L${x4},${y4} z`;\n}\n\nexport function convertCircleToPath(\n    properties: CircleProperties,\n    parsingErrors: string[],\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    let { cx, cy, r } = properties;\n    // cx, cy, r default to 0.\n    if (cx === undefined) cx = 0;\n    /* c8 ignore next if */\n    if (cy === undefined) cy = 0;\n    if (r === undefined) r = 0;\n    if (!isNumber(cx) || !isNumber(cy) || !isNonNegativeNumber(r)) {\n        parsingErrors.push(`Invalid <circle> properties: ${JSON.stringify({ cx, cy, r })}.`);\n        return;\n    }\n    const pathParser = _convertEllipseToPath(cx, cy, r, r, _preserveArcs, transform);\n    /* c8 ignore next 7 */\n    if (pathParser.err) {\n        // Should not hit this.\n        parsingErrors.push(\n            `Problem parsing <circle> ${JSON.stringify({ cx, cy, r })} with ${pathParser.err}.`\n        );\n        return;\n    }\n    return pathParser;\n}\n\nexport function convertEllipseToPath(\n    properties: EllipseProperties,\n    parsingErrors: string[],\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    let { cx, cy, rx, ry } = properties;\n    // cx, cy, rx, ry default to 0.\n    /* c8 ignore next if */\n    if (cx === undefined) cx = 0;\n    if (cy === undefined) cy = 0;\n    if (rx === undefined) rx = 0;\n    if (ry === undefined) ry = 0;\n    if (!isNumber(cx) || !isNumber(cy) || !isNonNegativeNumber(rx) || !isNonNegativeNumber(ry)) {\n        parsingErrors.push(`Invalid <ellipse> properties: ${JSON.stringify({ cx, cy, rx, ry })}.`);\n        return;\n    }\n    const pathParser = _convertEllipseToPath(cx, cy, rx, ry, _preserveArcs, transform);\n    /* c8 ignore next 9 */\n    if (pathParser.err) {\n        // Should not hit this.\n        parsingErrors.push(\n            `Problem parsing <ellipse> ${JSON.stringify({ cx, cy, rx, ry })} with ${\n                pathParser.err\n            }.`\n        );\n        return;\n    }\n    return pathParser;\n}\n\n// https://stackoverflow.com/questions/59011294/ellipse-to-path-convertion-using-javascript\n// const ellipsePoints = new Array(24).fill(0);\nfunction _convertEllipseToPath(\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number,\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    // Convert ellipse to 2 arcs.\n    const d = `M${cx - rx},${cy} a${rx},${ry} 0 1,0 ${rx * 2},0 a ${rx},${ry} 0 1,0 -${rx * 2},0`;\n    let pathParser = svgpath(d).abs() as any as PathParser;\n    // Convert arcs to bezier is _preserveArcs == false.\n    if (!_preserveArcs) pathParser = pathParser.unarc();\n    // Apply transform.\n    if (transform)\n        pathParser = pathParser.matrix([\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.e,\n            transform.f,\n        ]);\n    return pathParser;\n\n    // \tconst kappa = 0.5522847498;\n    // \tconst ox = rx * kappa; // x offset for the control point\n    // \tconst oy = ry * kappa; // y offset for the control point\n\n    // \tellipsePoints[0] = cx - rx;\n    // \tellipsePoints[1] = cy;\n\n    // \tellipsePoints[2] = cx - rx;\n    // \tellipsePoints[3] = cy - oy;\n\n    // \tellipsePoints[4] = cx - ox;\n    // \tellipsePoints[5] = cy - ry;\n\n    // \tellipsePoints[6] = cx;\n    // \tellipsePoints[7] = cy - ry;\n\n    // \tellipsePoints[8] = cx + ox;\n    // \tellipsePoints[9] = cy - ry;\n\n    // \tellipsePoints[10] = cx + rx;\n    // \tellipsePoints[11] = cy - oy;\n\n    // \tellipsePoints[12] = cx + rx;\n    // \tellipsePoints[13] = cy;\n\n    // \tellipsePoints[14] = cx + rx;\n    // \tellipsePoints[15] = cy + oy;\n\n    // \tellipsePoints[16] = cx + ox;\n    // \tellipsePoints[17] = cy + ry;\n\n    // \tellipsePoints[18] = cx;\n    // \tellipsePoints[19] = cy + ry;\n\n    // \tellipsePoints[20] = cx - ox;\n    // \tellipsePoints[21] = cy + ry;\n\n    // \tellipsePoints[22] = cx - rx;\n    // \tellipsePoints[23] = cy + oy;\n\n    // \tif (transform) {\n    // \t\tfor (let i = 0, length = ellipsePoints.length / 2; i < length; i++) {\n    // \t\t\ttemp[0] = ellipsePoints[2 * i];\n    // \t\t\ttemp[1] = ellipsePoints[2 * i + 1];\n    // \t\t\tapplyTransform(temp, transform);\n    // \t\t\tellipsePoints[2 * i] = temp[0];\n    // \t\t\tellipsePoints[2 * i + 1] = temp[1];\n    // \t\t}\n    // \t}\n    // \treturn `M${ellipsePoints[0]},${ellipsePoints[1]} \\\n    // C${ellipsePoints[2]},${ellipsePoints[3]} ${ellipsePoints[4]},${ellipsePoints[5]} ${ellipsePoints[6]},${ellipsePoints[7]} \\\n    // C${ellipsePoints[8]},${ellipsePoints[9]} ${ellipsePoints[10]},${ellipsePoints[11]} ${ellipsePoints[12]},${ellipsePoints[13]} \\\n    // C${ellipsePoints[14]},${ellipsePoints[15]} ${ellipsePoints[16]},${ellipsePoints[17]} ${ellipsePoints[18]},${ellipsePoints[19]} \\\n    // C${ellipsePoints[20]},${ellipsePoints[21]} ${ellipsePoints[22]},${ellipsePoints[23]} ${ellipsePoints[0]},${ellipsePoints[1]} \\\n    // z`;\n}\n\nexport function convertPolygonToPath(\n    properties: PolygonProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    const { points } = properties;\n    if (!isString(points)) {\n        parsingErrors.push(`Invalid <polygon> properties: ${JSON.stringify({ points })}.`);\n        return;\n    }\n    const path = _convertPointsToPath(points, parsingErrors, POLYGON, transform);\n    if (!path) return path;\n    return path + ' z';\n}\n\nexport function convertPolylineToPath(\n    properties: PolylineProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    const { points } = properties;\n    if (!isString(points)) {\n        parsingErrors.push(`Invalid <polyline> properties: ${JSON.stringify({ points })}.`);\n        return;\n    }\n    return _convertPointsToPath(points, parsingErrors, POLYLINE, transform);\n}\n\nfunction _convertPointsToPath(\n    pointsString: string,\n    parsingErrors: string[],\n    elementType: typeof POLYGON | typeof POLYLINE,\n    transform?: Transform\n) {\n    const points = removeWhitespacePadding(pointsString).split(' ');\n    let d = '';\n    while (points.length) {\n        const point = points.shift()!.split(',');\n        if (point.length === 1) {\n            // Sometimes polyline is not separated by commas, only by whitespace.\n            if (points.length && points.length % 2 === 1) {\n                point.push(points.shift()!); // Get next element in points array.\n            }\n        }\n        if (point.length !== 2) {\n            parsingErrors.push(\n                `Unable to parse points string: \"${pointsString}\" in <${elementType}>.`\n            );\n            return;\n        }\n        let x = parseFloat(point[0]);\n        let y = parseFloat(point[1]);\n        if (isNaN(x) || isNaN(y)) {\n            parsingErrors.push(\n                `Unable to parse points string: \"${pointsString}\" in <${elementType}>.`\n            );\n            return;\n        }\n        if (transform) {\n            temp[0] = x;\n            temp[1] = y;\n            [x, y] = applyTransform(temp, transform);\n        }\n        if (d === '') {\n            d += `M${x},${y}`;\n        } else {\n            d += ` L${x},${y}`;\n        }\n    }\n    return d;\n}\n\nexport function convertPathToPath(\n    properties: PathProperties,\n    parsingErrors: string[],\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    const { d } = properties;\n    if (!isString(d)) {\n        parsingErrors.push(`Invalid <path> properties: ${JSON.stringify({ d })}.`);\n        return;\n    }\n    // Convert to absolute coordinates,\n    // Convert smooth curves (T/S) to regular Bezier (Q/C).\n    let pathParser = svgpath(d).abs().unshort() as any as PathParser;\n    if (_preserveArcs) {\n        // Convert arcs to bezier.\n        pathParser = pathParser.unarc();\n    }\n    // Apply transform.\n    if (transform) {\n        pathParser = pathParser.matrix([\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.e,\n            transform.f,\n        ]);\n    }\n    if (pathParser.err) {\n        parsingErrors.push(\n            `Problem parsing <path> ${JSON.stringify({ d })} with ${pathParser.err}.`\n        );\n        return;\n    }\n    return pathParser;\n}\n","function $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $009ddb00d3ec72b8$exports = {};\n\n$parcel$defineInteropFlag($009ddb00d3ec72b8$exports);\n\n$parcel$export($009ddb00d3ec72b8$exports, \"default\", () => $009ddb00d3ec72b8$export$2e2bcd8739ae039);\nclass $009ddb00d3ec72b8$export$2e2bcd8739ae039 extends Error {\n    constructor(filename, msg, lineno, column, css){\n        super(filename + \":\" + lineno + \":\" + column + \": \" + msg);\n        this.reason = msg;\n        this.filename = filename;\n        this.line = lineno;\n        this.column = column;\n        this.source = css;\n    }\n}\n\n\nvar $0865a9fb4cc365fe$exports = {};\n\n$parcel$defineInteropFlag($0865a9fb4cc365fe$exports);\n\n$parcel$export($0865a9fb4cc365fe$exports, \"default\", () => $0865a9fb4cc365fe$export$2e2bcd8739ae039);\n/**\n * Store position information for a node\n */ class $0865a9fb4cc365fe$export$2e2bcd8739ae039 {\n    constructor(start, end, source){\n        this.start = start;\n        this.end = end;\n        this.source = source;\n    }\n}\n\n\nvar $b2e137848b48cf4f$exports = {};\n\n$parcel$export($b2e137848b48cf4f$exports, \"CssTypes\", () => $b2e137848b48cf4f$export$9be5dd6e61d5d73a);\nvar $b2e137848b48cf4f$export$9be5dd6e61d5d73a;\n(function(CssTypes) {\n    CssTypes[\"stylesheet\"] = \"stylesheet\";\n    CssTypes[\"rule\"] = \"rule\";\n    CssTypes[\"declaration\"] = \"declaration\";\n    CssTypes[\"comment\"] = \"comment\";\n    CssTypes[\"container\"] = \"container\";\n    CssTypes[\"charset\"] = \"charset\";\n    CssTypes[\"document\"] = \"document\";\n    CssTypes[\"customMedia\"] = \"custom-media\";\n    CssTypes[\"fontFace\"] = \"font-face\";\n    CssTypes[\"host\"] = \"host\";\n    CssTypes[\"import\"] = \"import\";\n    CssTypes[\"keyframes\"] = \"keyframes\";\n    CssTypes[\"keyframe\"] = \"keyframe\";\n    CssTypes[\"layer\"] = \"layer\";\n    CssTypes[\"media\"] = \"media\";\n    CssTypes[\"namespace\"] = \"namespace\";\n    CssTypes[\"page\"] = \"page\";\n    CssTypes[\"supports\"] = \"supports\";\n})($b2e137848b48cf4f$export$9be5dd6e61d5d73a || ($b2e137848b48cf4f$export$9be5dd6e61d5d73a = {}));\n\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nconst $d708735ed1303b43$var$commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nconst $d708735ed1303b43$export$98e6a39c04603d36 = (css, options)=>{\n    options = options || {};\n    /**\n   * Positional.\n   */ let lineno = 1;\n    let column = 1;\n    /**\n   * Update lineno and column based on `str`.\n   */ function updatePosition(str) {\n        const lines = str.match(/\\n/g);\n        if (lines) lineno += lines.length;\n        const i = str.lastIndexOf(\"\\n\");\n        column = ~i ? str.length - i : column + str.length;\n    }\n    /**\n   * Mark position and patch `node.position`.\n   */ function position() {\n        const start = {\n            line: lineno,\n            column: column\n        };\n        return function(node) {\n            node.position = new (0, $0865a9fb4cc365fe$export$2e2bcd8739ae039)(start, {\n                line: lineno,\n                column: column\n            }, options?.source || \"\");\n            whitespace();\n            return node;\n        };\n    }\n    /**\n   * Error `msg`.\n   */ const errorsList = [];\n    function error(msg) {\n        const err = new (0, $009ddb00d3ec72b8$export$2e2bcd8739ae039)(options?.source || \"\", msg, lineno, column, css);\n        if (options?.silent) errorsList.push(err);\n        else throw err;\n    }\n    /**\n   * Parse stylesheet.\n   */ function stylesheet() {\n        const rulesList = rules();\n        const result = {\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet,\n            stylesheet: {\n                source: options?.source,\n                rules: rulesList,\n                parsingErrors: errorsList\n            }\n        };\n        return result;\n    }\n    /**\n   * Opening brace.\n   */ function open() {\n        return match(/^{\\s*/);\n    }\n    /**\n   * Closing brace.\n   */ function close() {\n        return match(/^}/);\n    }\n    /**\n   * Parse ruleset.\n   */ function rules() {\n        let node;\n        const rules = [];\n        whitespace();\n        comments(rules);\n        while(css.length && css.charAt(0) !== \"}\" && (node = atrule() || rule()))if (node) {\n            rules.push(node);\n            comments(rules);\n        }\n        return rules;\n    }\n    /**\n   * Match `re` and return captures.\n   */ function match(re) {\n        const m = re.exec(css);\n        if (!m) return;\n        const str = m[0];\n        updatePosition(str);\n        css = css.slice(str.length);\n        return m;\n    }\n    /**\n   * Parse whitespace.\n   */ function whitespace() {\n        match(/^\\s*/);\n    }\n    /**\n   * Parse comments;\n   */ function comments(rules) {\n        let c;\n        rules = rules || [];\n        while(c = comment())if (c) rules.push(c);\n        return rules;\n    }\n    /**\n   * Parse comment.\n   */ function comment() {\n        const pos = position();\n        if (\"/\" !== css.charAt(0) || \"*\" !== css.charAt(1)) return;\n        const m = match(/^\\/\\*[^]*?\\*\\//);\n        if (!m) return error(\"End of comment missing\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment,\n            comment: m[0].slice(2, -2)\n        });\n    }\n    /**\n   * Parse selector.\n   */ function selector() {\n        const m = match(/^([^{]+)/);\n        if (!m) return;\n        // remove comment in selector; [^] is equivalent to [.\\n\\r]\n        const res = $d708735ed1303b43$var$trim(m[0]).replace(/\\/\\*[^]*?\\*\\//gm, \"\");\n        // Optimisation: If there is no ',' no need to split or post-process (this is less costly)\n        if (res.indexOf(\",\") === -1) return [\n            res\n        ];\n        return res/**\n         * replace ',' by \\u200C for data selector (div[data-lang=\"fr,de,us\"])\n         * replace ',' by \\u200C for nthChild and other selector (div:nth-child(2,3,4))\n         *\n         * Examples:\n         * div[data-lang=\"fr,\\\"de,us\"]\n         * div[data-lang='fr,\\'de,us']\n         * div:matches(.toto, .titi:matches(.toto, .titi))\n         *\n         * Regex logic:\n         *  (\"|')(?:\\\\\\1|.)*?\\1 => Handle the \" and '\n         *  \\(.*?\\)  => Handle the ()\n         *\n         * Optimization 1:\n         * No greedy capture (see docs about the difference between .* and .*?)\n         *\n         * Optimization 2:\n         * (\"|')(?:\\\\\\1|.)*?\\1 this use reference to capture group, it work faster.\n         */ .replace(/(\"|')(?:\\\\\\1|.)*?\\1|\\(.*?\\)/g, (m)=>m.replace(/,/g, \"â€Œ\"))// Split the selector by ','\n        .split(\",\")// Replace back \\u200C by ','\n        .map((s)=>{\n            return $d708735ed1303b43$var$trim(s.replace(/\\u200C/g, \",\"));\n        });\n    }\n    /**\n   * Parse declaration.\n   */ function declaration() {\n        const pos = position();\n        // prop\n        const propMatch = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n        if (!propMatch) return;\n        const propValue = $d708735ed1303b43$var$trim(propMatch[0]);\n        // :\n        if (!match(/^:\\s*/)) return error(\"property missing ':'\");\n        // val\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/);\n        const ret = pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration,\n            property: propValue.replace($d708735ed1303b43$var$commentre, \"\"),\n            value: val ? $d708735ed1303b43$var$trim(val[0]).replace($d708735ed1303b43$var$commentre, \"\") : \"\"\n        });\n        // ;\n        match(/^[;\\s]*/);\n        return ret;\n    }\n    /**\n   * Parse declarations.\n   */ function declarations() {\n        const decls = [];\n        if (!open()) return error(\"missing '{'\");\n        comments(decls);\n        // declarations\n        let decl;\n        while(decl = declaration())if (decl) {\n            decls.push(decl);\n            comments(decls);\n        }\n        if (!close()) return error(\"missing '}'\");\n        return decls;\n    }\n    /**\n   * Parse keyframe.\n   */ function keyframe() {\n        let m;\n        const vals = [];\n        const pos = position();\n        while(m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)){\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n        if (!vals.length) return;\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe,\n            values: vals,\n            declarations: declarations() || []\n        });\n    }\n    /**\n   * Parse keyframes.\n   */ function atkeyframes() {\n        const pos = position();\n        const m1 = match(/^@([-\\w]+)?keyframes\\s*/);\n        if (!m1) return;\n        const vendor = m1[1];\n        // identifier\n        const m2 = match(/^([-\\w]+)\\s*/);\n        if (!m2) return error(\"@keyframes missing name\");\n        const name = m2[1];\n        if (!open()) return error(\"@keyframes missing '{'\");\n        let frame;\n        let frames = comments();\n        while(frame = keyframe()){\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n        if (!close()) return error(\"@keyframes missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes,\n            name: name,\n            vendor: vendor,\n            keyframes: frames\n        });\n    }\n    /**\n   * Parse supports.\n   */ function atsupports() {\n        const pos = position();\n        const m = match(/^@supports *([^{]+)/);\n        if (!m) return;\n        const supports = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) return error(\"@supports missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@supports missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports,\n            supports: supports,\n            rules: style\n        });\n    }\n    /**\n   * Parse host.\n   */ function athost() {\n        const pos = position();\n        const m = match(/^@host\\s*/);\n        if (!m) return;\n        if (!open()) return error(\"@host missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@host missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host,\n            rules: style\n        });\n    }\n    /**\n   * Parse container.\n   */ function atcontainer() {\n        const pos = position();\n        const m = match(/^@container *([^{]+)/);\n        if (!m) return;\n        const container = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) return error(\"@container missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@container missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container,\n            container: container,\n            rules: style\n        });\n    }\n    /**\n   * Parse container.\n   */ function atlayer() {\n        const pos = position();\n        const m = match(/^@layer *([^{;@]+)/);\n        if (!m) return;\n        const layer = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) {\n            match(/^[;\\s]*/);\n            return pos({\n                type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n                layer: layer\n            });\n        }\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@layer missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n            layer: layer,\n            rules: style\n        });\n    }\n    /**\n   * Parse media.\n   */ function atmedia() {\n        const pos = position();\n        const m = match(/^@media *([^{]+)/);\n        if (!m) return;\n        const media = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) return error(\"@media missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@media missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media,\n            media: media,\n            rules: style\n        });\n    }\n    /**\n   * Parse custom-media.\n   */ function atcustommedia() {\n        const pos = position();\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (!m) return;\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia,\n            name: $d708735ed1303b43$var$trim(m[1]),\n            media: $d708735ed1303b43$var$trim(m[2])\n        });\n    }\n    /**\n   * Parse paged media.\n   */ function atpage() {\n        const pos = position();\n        const m = match(/^@page */);\n        if (!m) return;\n        const sel = selector() || [];\n        if (!open()) return error(\"@page missing '{'\");\n        let decls = comments();\n        // declarations\n        let decl;\n        while(decl = declaration()){\n            decls.push(decl);\n            decls = decls.concat(comments());\n        }\n        if (!close()) return error(\"@page missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page,\n            selectors: sel,\n            declarations: decls\n        });\n    }\n    /**\n   * Parse document.\n   */ function atdocument() {\n        const pos = position();\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (!m) return;\n        const vendor = $d708735ed1303b43$var$trim(m[1]);\n        const doc = $d708735ed1303b43$var$trim(m[2]);\n        if (!open()) return error(\"@document missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@document missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document,\n            document: doc,\n            vendor: vendor,\n            rules: style\n        });\n    }\n    /**\n   * Parse font-face.\n   */ function atfontface() {\n        const pos = position();\n        const m = match(/^@font-face\\s*/);\n        if (!m) return;\n        if (!open()) return error(\"@font-face missing '{'\");\n        let decls = comments();\n        // declarations\n        let decl;\n        while(decl = declaration()){\n            decls.push(decl);\n            decls = decls.concat(comments());\n        }\n        if (!close()) return error(\"@font-face missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace,\n            declarations: decls\n        });\n    }\n    /**\n   * Parse import\n   */ const atimport = _compileAtrule(\"import\");\n    /**\n   * Parse charset\n   */ const atcharset = _compileAtrule(\"charset\");\n    /**\n   * Parse namespace\n   */ const atnamespace = _compileAtrule(\"namespace\");\n    /**\n   * Parse non-block at-rules\n   */ function _compileAtrule(name) {\n        const re = new RegExp(\"^@\" + name + \"\\\\s*((:?[^;'\\\"]|\\\"(?:\\\\\\\\\\\"|[^\\\"])*?\\\"|'(?:\\\\\\\\'|[^'])*?')+);\");\n        // ^@import\\s*([^;\"']|(\"|')(?:\\\\\\2|.)*?\\2)+;\n        return function() {\n            const pos = position();\n            const m = match(re);\n            if (!m) return;\n            const ret = {\n                type: name\n            };\n            ret[name] = m[1].trim();\n            return pos(ret);\n        };\n    }\n    /**\n   * Parse at rule.\n   */ function atrule() {\n        if (css[0] !== \"@\") return;\n        return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface() || atcontainer() || atlayer();\n    }\n    /**\n   * Parse rule.\n   */ function rule() {\n        const pos = position();\n        const sel = selector();\n        if (!sel) return error(\"selector missing\");\n        comments();\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule,\n            selectors: sel,\n            declarations: declarations() || []\n        });\n    }\n    return $d708735ed1303b43$var$addParent(stylesheet());\n};\n/**\n * Trim `str`.\n */ function $d708735ed1303b43$var$trim(str) {\n    return str ? str.trim() : \"\";\n}\n/**\n * Adds non-enumerable parent node reference to each node.\n */ function $d708735ed1303b43$var$addParent(obj, parent) {\n    const isNode = obj && typeof obj.type === \"string\";\n    const childParent = isNode ? obj : parent;\n    for(const k in obj){\n        const value = obj[k];\n        if (Array.isArray(value)) value.forEach((v)=>{\n            $d708735ed1303b43$var$addParent(v, childParent);\n        });\n        else if (value && typeof value === \"object\") $d708735ed1303b43$var$addParent(value, childParent);\n    }\n    if (isNode) Object.defineProperty(obj, \"parent\", {\n        configurable: true,\n        writable: true,\n        enumerable: false,\n        value: parent || null\n    });\n    return obj;\n}\nvar $d708735ed1303b43$export$2e2bcd8739ae039 = $d708735ed1303b43$export$98e6a39c04603d36;\n\n\n\nclass $de9540138ed1fd01$var$Compiler {\n    constructor(options){\n        this.level = 0;\n        this.indentation = \"  \";\n        this.compress = false;\n        if (typeof options?.indent === \"string\") this.indentation = options?.indent;\n        if (options?.compress) this.compress = true;\n    }\n    // We disable no-unused-vars for _position. We keep position for potential reintroduction of source-map\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    emit(str, _position) {\n        return str;\n    }\n    /**\n   * Increase, decrease or return current indentation.\n   */ indent(level) {\n        this.level = this.level || 1;\n        if (level) {\n            this.level += level;\n            return \"\";\n        }\n        return Array(this.level).join(this.indentation);\n    }\n    visit(node) {\n        switch(node.type){\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet:\n                return this.stylesheet(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule:\n                return this.rule(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration:\n                return this.declaration(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment:\n                return this.comment(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container:\n                return this.container(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).charset:\n                return this.charset(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document:\n                return this.document(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia:\n                return this.customMedia(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace:\n                return this.fontFace(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host:\n                return this.host(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).import:\n                return this.import(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes:\n                return this.keyframes(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe:\n                return this.keyframe(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer:\n                return this.layer(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media:\n                return this.media(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).namespace:\n                return this.namespace(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page:\n                return this.page(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports:\n                return this.supports(node);\n        }\n    }\n    mapVisit(nodes, delim) {\n        let buf = \"\";\n        delim = delim || \"\";\n        for(let i = 0, length = nodes.length; i < length; i++){\n            buf += this.visit(nodes[i]);\n            if (delim && i < length - 1) buf += this.emit(delim);\n        }\n        return buf;\n    }\n    compile(node) {\n        if (this.compress) return node.stylesheet.rules.map(this.visit, this).join(\"\");\n        return this.stylesheet(node);\n    }\n    /**\n   * Visit stylesheet node.\n   */ stylesheet(node) {\n        return this.mapVisit(node.stylesheet.rules, \"\\n\\n\");\n    }\n    /**\n   * Visit comment node.\n   */ comment(node) {\n        if (this.compress) return this.emit(\"\", node.position);\n        return this.emit(this.indent() + \"/*\" + node.comment + \"*/\", node.position);\n    }\n    /**\n   * Visit container node.\n   */ container(node) {\n        if (this.compress) return this.emit(\"@container \" + node.container, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(this.indent() + \"@container \" + node.container, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n    }\n    /**\n   * Visit container node.\n   */ layer(node) {\n        if (this.compress) return this.emit(\"@layer \" + node.layer, node.position) + (node.rules ? this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\") : \";\");\n        return this.emit(this.indent() + \"@layer \" + node.layer, node.position) + (node.rules ? this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\") : \";\");\n    }\n    /**\n   * Visit import node.\n   */ import(node) {\n        return this.emit(\"@import \" + node.import + \";\", node.position);\n    }\n    /**\n   * Visit media node.\n   */ media(node) {\n        if (this.compress) return this.emit(\"@media \" + node.media, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(this.indent() + \"@media \" + node.media, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n    }\n    /**\n   * Visit document node.\n   */ document(node) {\n        const doc = \"@\" + (node.vendor || \"\") + \"document \" + node.document;\n        if (this.compress) return this.emit(doc, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(doc, node.position) + this.emit(\"  {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n    }\n    /**\n   * Visit charset node.\n   */ charset(node) {\n        return this.emit(\"@charset \" + node.charset + \";\", node.position);\n    }\n    /**\n   * Visit namespace node.\n   */ namespace(node) {\n        return this.emit(\"@namespace \" + node.namespace + \";\", node.position);\n    }\n    /**\n   * Visit supports node.\n   */ supports(node) {\n        if (this.compress) return this.emit(\"@supports \" + node.supports, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(this.indent() + \"@supports \" + node.supports, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n    }\n    /**\n   * Visit keyframes node.\n   */ keyframes(node) {\n        if (this.compress) return this.emit(\"@\" + (node.vendor || \"\") + \"keyframes \" + node.name, node.position) + this.emit(\"{\") + this.mapVisit(node.keyframes) + this.emit(\"}\");\n        return this.emit(\"@\" + (node.vendor || \"\") + \"keyframes \" + node.name, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.keyframes, \"\\n\") + this.emit(this.indent(-1) + \"}\");\n    }\n    /**\n   * Visit keyframe node.\n   */ keyframe(node) {\n        const decls = node.declarations;\n        if (this.compress) return this.emit(node.values.join(\",\"), node.position) + this.emit(\"{\") + this.mapVisit(decls) + this.emit(\"}\");\n        return this.emit(this.indent()) + this.emit(node.values.join(\", \"), node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(decls, \"\\n\") + this.emit(this.indent(-1) + \"\\n\" + this.indent() + \"}\\n\");\n    }\n    /**\n   * Visit page node.\n   */ page(node) {\n        if (this.compress) {\n            const sel = node.selectors.length ? node.selectors.join(\", \") : \"\";\n            return this.emit(\"@page \" + sel, node.position) + this.emit(\"{\") + this.mapVisit(node.declarations) + this.emit(\"}\");\n        }\n        const sel = node.selectors.length ? node.selectors.join(\", \") + \" \" : \"\";\n        return this.emit(\"@page \" + sel, node.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(node.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n    }\n    /**\n   * Visit font-face node.\n   */ fontFace(node) {\n        if (this.compress) return this.emit(\"@font-face\", node.position) + this.emit(\"{\") + this.mapVisit(node.declarations) + this.emit(\"}\");\n        return this.emit(\"@font-face \", node.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(node.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n    }\n    /**\n   * Visit host node.\n   */ host(node) {\n        if (this.compress) return this.emit(\"@host\", node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(\"@host\", node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n    }\n    /**\n   * Visit custom-media node.\n   */ customMedia(node) {\n        return this.emit(\"@custom-media \" + node.name + \" \" + node.media + \";\", node.position);\n    }\n    /**\n   * Visit rule node.\n   */ rule(node) {\n        const decls = node.declarations;\n        if (!decls.length) return \"\";\n        if (this.compress) return this.emit(node.selectors.join(\",\"), node.position) + this.emit(\"{\") + this.mapVisit(decls) + this.emit(\"}\");\n        const indent = this.indent();\n        return this.emit(node.selectors.map((s)=>{\n            return indent + s;\n        }).join(\",\\n\"), node.position) + this.emit(\" {\\n\") + this.emit(this.indent(1)) + this.mapVisit(decls, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n\" + this.indent() + \"}\");\n    }\n    /**\n   * Visit declaration node.\n   */ declaration(node) {\n        if (this.compress) return this.emit(node.property + \":\" + node.value, node.position) + this.emit(\";\");\n        return this.emit(this.indent()) + this.emit(node.property + \": \" + node.value, node.position) + this.emit(\";\");\n    }\n}\nvar $de9540138ed1fd01$export$2e2bcd8739ae039 = $de9540138ed1fd01$var$Compiler;\n\n\nvar $fdf773ab87e20450$export$2e2bcd8739ae039 = (node, options)=>{\n    const compiler = new (0, $de9540138ed1fd01$export$2e2bcd8739ae039)(options || {});\n    return compiler.compile(node);\n};\n\n\n\n\n\nconst $149c1bd638913645$export$98e6a39c04603d36 = (0, $d708735ed1303b43$export$2e2bcd8739ae039);\nconst $149c1bd638913645$export$fac44ee5b035f737 = (0, $fdf773ab87e20450$export$2e2bcd8739ae039);\nvar $149c1bd638913645$export$2e2bcd8739ae039 = {\n    parse: $149c1bd638913645$export$98e6a39c04603d36,\n    stringify: $149c1bd638913645$export$fac44ee5b035f737\n};\n\n\nexport {$149c1bd638913645$export$98e6a39c04603d36 as parse, $149c1bd638913645$export$fac44ee5b035f737 as stringify, $149c1bd638913645$export$2e2bcd8739ae039 as default, $b2e137848b48cf4f$export$9be5dd6e61d5d73a as CssTypes};\n//# sourceMappingURL=index.mjs.map\n","import { parse, RootNode } from 'svg-parser';\nimport {\n    parseTransformString,\n    flattenTransformArray,\n    copyTransform,\n    transformToString,\n} from './transforms';\nimport { AnyColor, Colord, colord, extend } from 'colord';\nimport namesPlugin from 'colord/plugins/names';\nimport labPlugin from 'colord/plugins/lab';\nimport {\n    CIRCLE,\n    ELLIPSE,\n    G,\n    LINE,\n    PATH,\n    POLYGON,\n    POLYLINE,\n    RECT,\n    SVG,\n    SVG_STYLE_COLOR,\n    SVG_STYLE_FILL,\n    SVG_STYLE_OPACITY,\n    SVG_STYLE_STROKE_COLOR,\n    SVG_STYLE_STROKE_DASH_ARRAY,\n} from './constants';\nimport {\n    FlatArcSegment,\n    FlatBezierSegment,\n    ComputedProperties,\n    ElementNode,\n    FlatElement,\n    FlatPath,\n    FlatSegment,\n    GeometryElementProperties,\n    GeometryElementTagName,\n    Node,\n    PathParser,\n    Properties,\n    PropertiesFilter,\n    Style,\n    Transform,\n} from './types';\nimport {\n    convertCircleToPath,\n    convertEllipseToPath,\n    convertLineToPath,\n    convertPathToPath,\n    convertPolygonToPath,\n    convertPolylineToPath,\n    convertRectToPath,\n} from './convertToPath';\nimport svgpath from 'svgpath';\n// Had to roll back to @adobe/css-tools to version 4.3.0-rc.1 to get this to work.\n// https://github.com/adobe/css-tools/issues/116\nimport { parse as cssParse, type CssDeclarationAST, type CssRuleAST } from '@adobe/css-tools';\nimport { isNumber } from '@amandaghassaei/type-checks';\nimport { convertToDashArray } from './utils';\n\nextend([namesPlugin]);\nextend([labPlugin]);\n// Color input examples\n// \"#FFF\"\n// \"#ffffff\"\n// \"#ffffffff\"\n// \"rgb(255, 255, 255)\"\n// \"rgba(255, 255, 255, 0.5)\"\n// \"rgba(100% 100% 100% / 50%)\"\n// \"hsl(90, 100%, 100%)\"\n// \"hsla(90, 100%, 100%, 0.5)\"\n// \"hsla(90deg 100% 100% / 50%)\"\n// \"tomato\"\n\nexport class FlatSVG {\n    private readonly _rootNode: RootNode;\n    private _elements?: FlatElement[];\n    private _paths?: FlatPath[];\n    private _pathParsers?: (PathParser | undefined)[];\n    private _segments?: FlatSegment[];\n    private readonly _preserveArcs: boolean;\n\n    /**\n     * Defs elements that are removed during flattening.\n     */\n    readonly defs: ElementNode[] = [];\n    /**\n     * Global style to be applied to children during flattening.\n     */\n    private readonly _globalStyles?: { [key: string]: Style };\n\n    /**\n     * A list of errors generated during parsing.\n     */\n    readonly errors: string[] = [];\n    /**\n     * A list of warnings generated during parsing.\n     */\n    readonly warnings: string[] = [];\n\n    // Hold onto some extra computed properties so we don't have to recompute during filter operations.\n    private _computedElementProperties?: ComputedProperties[];\n    private _computedPathProperties?: ComputedProperties[];\n    private _computedSegmentProperties?: ComputedProperties[];\n\n    /**\n     * Init a FlatSVG object.\n     * @param string - SVG string to parse.\n     * @param options - Optional settings.\n     * @param options.preserveArcs - Preserve arcs, ellipses, and circles as arcs when calling FlatSVG.paths and FlatSVG.segments.  Defaults to false, which will approximate arcs as cubic beziers.\n     */\n    constructor(string: string, options?: { preserveArcs: boolean }) {\n        if (string === undefined) {\n            throw new Error('Must pass in an SVG string to FlatSVG().');\n        }\n        if (string === '') {\n            throw new Error('SVG string is empty.');\n        }\n        this._rootNode = parse(string);\n        this._preserveArcs = !!options?.preserveArcs;\n\n        // Validate svg.\n        // Check that a root svg element exists.\n        if (\n            this._rootNode.children.length !== 1 ||\n            this._rootNode.children[0].type !== 'element' ||\n            this._rootNode.children[0].tagName !== SVG\n        ) {\n            // console.log(this._rootNode);\n            this.errors.push(`Malformed SVG: expected only 1 child <svg> element on root node.`);\n            throw new Error(`Malformed SVG: expected only 1 child <svg> element on root node.`);\n        }\n\n        // Pull out defs/style tags.\n        const topChildren = this._rootNode.children[0].children;\n        for (let i = topChildren.length - 1; i >= 0; i--) {\n            const child = topChildren[i] as ElementNode;\n            if (child.tagName === 'defs') {\n                this.defs.push(child);\n                topChildren.splice(i, 1);\n                // Check if defs contains style.\n                if (child.children) {\n                    for (let j = child.children.length - 1; j >= 0; j--) {\n                        const defsChild = child.children[j] as ElementNode;\n                        if (defsChild.tagName === 'style') {\n                            child.children.splice(j, 1);\n                            if (\n                                defsChild.children &&\n                                defsChild.children[0] &&\n                                defsChild.children[0].type === 'text'\n                            ) {\n                                this._globalStyles = {\n                                    ...this._globalStyles,\n                                    ...this.parseStyleToObject(\n                                        defsChild.children[0].value as string\n                                    ),\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n            if (child.tagName === 'style') {\n                topChildren.splice(i, 1);\n                if (child.children && child.children[0] && child.children[0].type === 'text') {\n                    this._globalStyles = {\n                        ...this._globalStyles,\n                        ...this.parseStyleToObject(child.children[0].value as string),\n                    };\n                }\n            }\n        }\n\n        this.deepIterChildren = this.deepIterChildren.bind(this);\n\n        // // Check that no children are strings.\n        // this.deepIterChildren((child) => {\n        // \tif (typeof child === 'string') {\n        // \t\tconsole.log(this.rootNode);\n        // \t\tthrow new Error(`Child is a string: ${child}.`);\n        // \t}\n        // });\n    }\n\n    private parseStyleToObject(styleString: string) {\n        const { errors } = this;\n        const result = {} as { [key: string]: Style };\n        const css = cssParse(styleString, { silent: true });\n        const { stylesheet } = css;\n        /* c8 ignore next 3 */\n        if (!stylesheet) {\n            return result;\n        }\n        if (stylesheet.parsingErrors) {\n            const parsingErrors = stylesheet.parsingErrors\n                .map((error) => error.message)\n                .filter((error) => error !== undefined);\n            errors.push(...parsingErrors);\n        }\n        // Extract style info.\n        /* c8 ignore next 3 */\n        if (!stylesheet.rules) {\n            return result;\n        }\n        const rules = stylesheet.rules;\n        for (let i = 0, numRules = rules.length; i < numRules; i++) {\n            const rule = rules[i];\n            const selectorStyle: { [key: string]: number | string } = {};\n            const { declarations, selectors } = rule as CssRuleAST;\n            if (declarations) {\n                for (let j = 0, numDeclarations = declarations.length; j < numDeclarations; j++) {\n                    const declaration = declarations[j] as CssDeclarationAST;\n                    const { property } = declaration;\n                    let { value } = declaration;\n                    if (property && value !== undefined) {\n                        // Cast value as number if needed.\n                        // Try stripping px off the end.\n                        value = value.replace(/px\\b/g, '');\n                        if (/^\\-?[0-9]?([0-9]+e-?[0-9]+)?(\\.[0-9]+)?$/.test(value))\n                            selectorStyle[property] = parseFloat(value);\n                        else selectorStyle[property] = value;\n                    }\n                }\n            }\n            if (selectors) {\n                for (let j = 0, numSelectors = selectors.length; j < numSelectors; j++) {\n                    const selector = selectors[j];\n                    result[selector] = { ...result[selector], ...selectorStyle };\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Get the root node of the SVG.\n     */\n    get root() {\n        return this._rootNode.children[0] as Node as ElementNode;\n    }\n\n    /**\n     * Get the viewBox of the SVG as [min-x, min-y, width, height].\n     */\n    get viewBox() {\n        const viewBoxString = this.root.properties!.viewBox;\n        if (viewBoxString) {\n            return viewBoxString.split(' ').map((el) => parseFloat(el));\n        }\n        return [\n            Number.parseFloat((this.root.properties!.x || '0') as string),\n            Number.parseFloat((this.root.properties!.y || '0') as string),\n            Number.parseFloat((this.root.properties!.width || '0') as string),\n            Number.parseFloat((this.root.properties!.height || '0') as string),\n        ];\n    }\n\n    /**\n     * Get the units of the SVG as a string.\n     */\n    get units() {\n        // If you do not specify any units inside the width and height attributes, the units are assumed to be pixels.\n        const regex = new RegExp(/(em|ex|px|pt|pc|cm|mm|in)$/);\n        const { x, y, width, height } = this.root.properties || /* c8 ignore next */ {};\n        if (isNumber(x) || isNumber(y) || isNumber(width) || isNumber(height)) {\n            // No units specified.\n            return 'px';\n        }\n        if ((width && typeof width !== 'string') || (height && typeof height !== 'string')) {\n            // Should not hit this.\n            console.warn(`Encountered poorly formed SVG width and/or height: ${width}, ${height}.`);\n            return 'px';\n        }\n        /* c8 ignore next 2 */\n        const match =\n            x?.match(regex) || y?.match(regex) || width?.match(regex) || height?.match(regex);\n        return (match ? match[0] : 'px') as 'in' | 'cm' | 'mm' | 'px' | 'pt' | 'em' | 'ex' | 'pc';\n    }\n\n    private deepIterChildren(\n        callback: (\n            child: ElementNode,\n            transform?: Transform,\n            ids?: string,\n            classes?: string,\n            properties?: GeometryElementProperties\n        ) => void,\n        node = this.root,\n        transform?: Transform,\n        ids?: string,\n        classes?: string,\n        properties?: Style\n    ) {\n        const { _globalStyles } = this;\n        for (let i = 0, numChildren = node.children.length; i < numChildren; i++) {\n            const child = node.children[i] as ElementNode;\n\n            let childTransform = transform;\n            let childClasses: string | undefined;\n            let childIds: string | undefined;\n            let childProperties: Style | undefined;\n\n            if (child.properties) {\n                // Add transforms to list.\n                if (child.properties.transform) {\n                    const childTransforms = parseTransformString(\n                        child.properties.transform,\n                        child.tagName\n                    );\n                    // Get errors / warnings.\n                    for (\n                        let transformIndex = 0, numTransforms = childTransforms.length;\n                        transformIndex < numTransforms;\n                        transformIndex++\n                    ) {\n                        const { errors, warnings } = childTransforms[transformIndex];\n                        /* c8 ignore next if */\n                        if (errors) this.errors.push(...errors);\n                        /* c8 ignore next if */\n                        if (warnings) this.warnings.push(...warnings);\n                    }\n                    // Merge transforms.\n                    if (childTransforms.length) {\n                        if (childTransform) {\n                            childTransforms.unshift(childTransform);\n                        }\n                        // Flatten transforms to a new matrix.\n                        childTransform = flattenTransformArray(childTransforms);\n                    }\n                    delete child.properties.transform;\n                }\n                let childPropertiesToMerge = child.properties || /* c8 ignore next */ {};\n\n                childIds = ids;\n                if (child.properties.id) {\n                    // Check for styling associated with id.\n                    if (_globalStyles) {\n                        const idsArray = child.properties.id.split(' ');\n                        for (let j = 0, numIds = idsArray.length; j < numIds; j++) {\n                            const idStyle = _globalStyles[`#${idsArray[j]}`];\n                            if (idStyle) {\n                                childPropertiesToMerge = { ...childPropertiesToMerge, ...idStyle };\n                            }\n                        }\n                    }\n                    // Add child ids to ids list.\n                    childIds = `${childIds ? `${childIds} ` : ''}${child.properties.id}`;\n                    delete child.properties.id;\n                    delete childPropertiesToMerge.id;\n                }\n\n                childClasses = classes;\n                if (child.properties.class) {\n                    // Check for styling associated with class.\n                    if (_globalStyles) {\n                        const classArray = child.properties.class.split(' ');\n                        for (let j = 0, numClasses = classArray.length; j < numClasses; j++) {\n                            const classStyle = _globalStyles[`.${classArray[j]}`];\n                            if (classStyle) {\n                                childPropertiesToMerge = {\n                                    ...childPropertiesToMerge,\n                                    ...classStyle,\n                                };\n                            }\n                        }\n                    }\n                    // Add child classes to classes list.\n                    childClasses = `${childClasses ? `${childClasses} ` : ''}${\n                        child.properties.class\n                    }`;\n                    delete child.properties.class;\n                    delete childPropertiesToMerge.class;\n                }\n\n                // Add child properties to properties list.\n                childProperties = properties;\n                // Check if the child has inline styles.\n                if ((childPropertiesToMerge as any).style) {\n                    const style = this.parseStyleToObject(\n                        `#this { ${(childPropertiesToMerge as any).style} }`\n                    )['#this'];\n                    childPropertiesToMerge = { ...style, ...childPropertiesToMerge };\n                    delete (childPropertiesToMerge as any).style;\n                }\n                const propertyKeys = Object.keys(childPropertiesToMerge);\n                for (let j = 0, numProperties = propertyKeys.length; j < numProperties; j++) {\n                    const key = propertyKeys[j] as keyof Properties;\n                    if (childPropertiesToMerge[key] !== undefined) {\n                        // Make a copy.\n                        if (!childProperties || childProperties === properties)\n                            childProperties = { ...properties };\n                        // In the case of opacity, multiply parent and child.\n                        if (key === SVG_STYLE_OPACITY) {\n                            /* c8 ignore next 6 */\n                            if (!isNumber(childPropertiesToMerge[key]))\n                                throw new Error(\n                                    `Opacity is not number: \"${JSON.stringify(\n                                        childPropertiesToMerge[key]\n                                    )}\".`\n                                );\n                            childProperties[key] =\n                                (childPropertiesToMerge[key] as number) *\n                                (childProperties[key] !== undefined\n                                    ? (childProperties[key] as number)\n                                    : 1);\n                        }\n                        // Only use child style if parent style is not defined.\n                        // @ts-ignore\n                        if (childProperties[key] === undefined)\n                            // @ts-ignore\n                            childProperties[key] = childPropertiesToMerge[key];\n                    }\n                }\n            }\n\n            // Callback.\n            if (child.tagName !== G) {\n                // Make copies of all child properties.\n                callback(\n                    child,\n                    childTransform ? copyTransform(childTransform) : undefined,\n                    childIds?.slice(),\n                    childClasses?.slice(),\n                    /* c8 ignore next 3 */\n                    childProperties\n                        ? ({ ...childProperties } as GeometryElementProperties)\n                        : undefined\n                );\n            }\n\n            if (child.children) {\n                this.deepIterChildren(\n                    callback,\n                    child,\n                    childTransform,\n                    childIds,\n                    childClasses,\n                    childProperties\n                );\n            }\n        }\n    }\n\n    /**\n     * Get a flat list of geometry elements in the SVG.\n     * The return value is cached internally.\n     */\n    get elements() {\n        if (this._elements) return this._elements;\n\n        // Init output arrays.\n        const elements: FlatElement[] = [];\n        const parsingErrors: string[] = [];\n        const parsingWarnings: string[] = [];\n\n        // Flatten all children and return.\n        this.deepIterChildren((child, transform, ids, classes, properties) => {\n            /* c8 ignore next 4 */\n            if (child.value) {\n                parsingErrors.push(`Skipping child ${child.tagName} with value: ${child.value}`);\n                return;\n            }\n            /* c8 ignore next 6 */\n            if (child.metadata) {\n                parsingErrors.push(\n                    `Skipping child ${child.tagName} with metadata: ${child.metadata}`\n                );\n                return;\n            }\n            if (!child.tagName) {\n                parsingErrors.push(`Skipping child with no tagName: ${JSON.stringify(child)}.`);\n                return;\n            }\n            /* c8 ignore next 4 */\n            if (!properties) {\n                parsingErrors.push(`Skipping child with no properties: ${JSON.stringify(child)}.`);\n                return;\n            }\n\n            if (ids) properties.ids = ids;\n            if (classes) properties.class = classes;\n\n            const flatChild = {\n                tagName: child.tagName as GeometryElementTagName,\n                properties,\n            } as FlatElement;\n            if (transform) flatChild.transform = transform;\n            elements.push(flatChild);\n        });\n\n        this._elements = elements; // Save for later so we don't need to recompute.\n\n        // Save any errors or warnings so we can query these later.\n        this.errors.push(...parsingErrors);\n        this.warnings.push(...parsingWarnings);\n\n        return elements;\n    }\n\n    private static wrapWithSVGTag(root: ElementNode, svgElements: string) {\n        const properties = root.properties || /* c8 ignore next */ {};\n        return `<svg ${Object.keys(properties)\n            .map((key) => `${key}=\"${properties[key as keyof Properties]}\"`)\n            .join(' ')}>\\n${svgElements}\\n</svg>`;\n    }\n\n    /**\n     * Get svg string from elements array.\n     * @private\n     */\n    private static elementsAsSVG(root: ElementNode, elements: FlatElement[]) {\n        return FlatSVG.wrapWithSVGTag(\n            root,\n            elements\n                .map((element) => {\n                    const { tagName, properties, transform } = element;\n                    const propertiesKeys = Object.keys(properties);\n                    let propertiesString = '';\n                    for (let i = 0, length = propertiesKeys.length; i < length; i++) {\n                        const key = propertiesKeys[i] as keyof typeof properties;\n                        propertiesString += `${key}=\"${properties[key]}\" `;\n                    }\n                    if (transform)\n                        propertiesString += `transform=\"${transformToString(transform)}\" `;\n                    return `<${tagName} ${propertiesString}/>`;\n                })\n                .join('\\n')\n        );\n    }\n\n    /**\n     * Get svg string from FlatSVG.elements array.\n     */\n    get elementsAsSVG() {\n        const { elements, root } = this;\n        return FlatSVG.elementsAsSVG(root, elements);\n    }\n\n    /**\n     * Get a flat list of SVG geometry represented as paths.\n     * The return value is cached internally.\n     */\n    get paths() {\n        if (this._paths) return this._paths;\n\n        const { elements, _preserveArcs } = this; // First query elements.\n\n        // Init output arrays.\n        const paths: FlatPath[] = [];\n        const pathParsers: (PathParser | undefined)[] = [];\n        const parsingErrors: string[] = [];\n        const parsingWarnings: string[] = [];\n\n        for (let i = 0; i < elements.length; i++) {\n            const child = elements[i];\n            const { transform, tagName, properties } = child;\n\n            const propertiesCopy: { [key: string]: any } = { ...properties };\n\n            // Convert all object types to path with absolute coordinates and transform applied.\n            let d: string | undefined;\n            let pathParser: PathParser | undefined;\n            switch (tagName) {\n                case LINE:\n                    d = convertLineToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.x1;\n                    delete propertiesCopy.y1;\n                    delete propertiesCopy.x2;\n                    delete propertiesCopy.y2;\n                    break;\n                case RECT:\n                    d = convertRectToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.x;\n                    delete propertiesCopy.y;\n                    delete propertiesCopy.width;\n                    delete propertiesCopy.height;\n                    break;\n                case POLYGON:\n                    d = convertPolygonToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.points;\n                    break;\n                case POLYLINE:\n                    d = convertPolylineToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.points;\n                    break;\n                case CIRCLE:\n                    pathParser = convertCircleToPath(\n                        properties,\n                        parsingErrors,\n                        _preserveArcs,\n                        transform\n                    );\n                    if (pathParser) d = pathParser.toString();\n                    delete propertiesCopy.cx;\n                    delete propertiesCopy.cy;\n                    delete propertiesCopy.r;\n                    break;\n                case ELLIPSE:\n                    pathParser = convertEllipseToPath(\n                        properties,\n                        parsingErrors,\n                        _preserveArcs,\n                        transform\n                    );\n                    if (pathParser) d = pathParser.toString();\n                    delete propertiesCopy.cx;\n                    delete propertiesCopy.cy;\n                    delete propertiesCopy.rx;\n                    delete propertiesCopy.ry;\n                    break;\n                case PATH:\n                    pathParser = convertPathToPath(\n                        properties,\n                        parsingErrors,\n                        _preserveArcs,\n                        transform\n                    );\n                    if (pathParser) d = pathParser.toString();\n                    delete propertiesCopy.d;\n                    break;\n                default:\n                    parsingWarnings.push(`Unsupported tagname: \"${tagName}\".`);\n                    break;\n            }\n            if (d === undefined || d === '') {\n                continue;\n            }\n\n            const path = {\n                properties: {\n                    ...propertiesCopy,\n                    d,\n                },\n            };\n            paths.push(path);\n            pathParsers.push(pathParser);\n        }\n\n        this._paths = paths; // Save for later so we don't need to recompute.\n        this._pathParsers = pathParsers; // Save pathParsers in case segments are queried.\n\n        // Save any errors or warnings so we can query these later.\n        this.errors.push(...parsingErrors);\n        this.warnings.push(...parsingWarnings);\n\n        return paths;\n    }\n\n    /**\n     * Get svg string from paths array.\n     * @private\n     */\n    private static pathsAsSVG(root: ElementNode, paths: FlatPath[]) {\n        return FlatSVG.wrapWithSVGTag(\n            root,\n            paths\n                .map((path) => {\n                    const { properties } = path;\n                    const propertiesKeys = Object.keys(properties);\n                    let propertiesString = '';\n                    for (let i = 0, length = propertiesKeys.length; i < length; i++) {\n                        const key = propertiesKeys[i] as keyof typeof properties;\n                        propertiesString += `${key}=\"${properties[key]}\" `;\n                    }\n                    return `<path ${propertiesString}/>`;\n                })\n                .join('\\n')\n        );\n    }\n\n    /**\n     * Get svg string from FlatSVG.paths array.\n     */\n    get pathsAsSVG() {\n        const { paths, root } = this;\n        return FlatSVG.pathsAsSVG(root, paths);\n    }\n\n    /**\n     * Get a flat list of SVG edge segments (as lines, quadratic/cubic beziers, or arcs).\n     * The return value is cached internally.\n     */\n    get segments() {\n        if (this._segments) return this._segments;\n\n        const { paths } = this; // First query paths.\n        const { _pathParsers } = this; // Once paths are computed, _pathParsers becomes available.\n        /* c8 ignore next 3 */\n        if (!_pathParsers) {\n            console.warn('Initing new _pathParsers array, we should never hit this.');\n        }\n        const pathParsers =\n            _pathParsers || /* c8 ignore next */ new Array(paths.length).fill(undefined);\n\n        // Init output arrays.\n        const segments: FlatSegment[] = [];\n        const parsingErrors: string[] = [];\n        const parsingWarnings: string[] = [];\n\n        for (let i = 0, numPaths = paths.length; i < numPaths; i++) {\n            const path = paths[i];\n            const { properties } = path;\n            let pathParser = pathParsers[i];\n            if (pathParser === undefined) {\n                // Define a pathParser for elements that were not originally paths.\n                pathParser = svgpath(properties.d);\n                pathParsers[i] = pathParser;\n            }\n            /* c8 ignore next 4 */\n            if (pathParser.err) {\n                // Should not hit this.\n                parsingErrors.push(`Problem parsing path to segments with ${pathParser.err}.`);\n            }\n            // Split paths to segments.\n            const startPoint = [0, 0];\n            pathParser.iterate((command: any, index: number, x: number, y: number) => {\n                const p1 = [x, y] as [number, number];\n\n                // Copy parent properties to segment (minus the \"d\" property).\n                const propertiesCopy: { [key: string]: any } = { ...properties };\n                delete propertiesCopy.d;\n                const segment = {\n                    p1,\n                    properties: propertiesCopy,\n                } as FlatSegment;\n\n                const segmentType = command[0];\n                /* c8 ignore next 6 */\n                if (index === 0 && segmentType !== 'M') {\n                    // Should not hit this, it should be caught earlier by SvgPath.\n                    parsingErrors.push(\n                        `Malformed svg path: \"${pathParser.toString()}\", should start with M command.`\n                    );\n                }\n                switch (segmentType) {\n                    case 'M':\n                        startPoint[0] = command[1];\n                        startPoint[1] = command[2];\n                        return;\n                    case 'L':\n                        segment.p2 = [command[1], command[2]];\n                        break;\n                    case 'H':\n                        segment.p2 = [command[1], y];\n                        break;\n                    case 'V':\n                        segment.p2 = [x, command[1]];\n                        break;\n                    case 'Q':\n                        (segment as FlatBezierSegment).controlPoints = [[command[1], command[2]]];\n                        segment.p2 = [command[3], command[4]];\n                        break;\n                    case 'C':\n                        (segment as FlatBezierSegment).controlPoints = [\n                            [command[1], command[2]],\n                            [command[3], command[4]],\n                        ];\n                        segment.p2 = [command[5], command[6]];\n                        break;\n                    case 'A':\n                        (segment as FlatArcSegment).rx = command[1];\n                        (segment as FlatArcSegment).ry = command[2];\n                        (segment as FlatArcSegment).xAxisRotation = command[3];\n                        (segment as FlatArcSegment).largeArcFlag = !!command[4];\n                        (segment as FlatArcSegment).sweepFlag = !!command[5];\n                        segment.p2 = [command[6], command[7]];\n                        break;\n                    case 'z':\n                    case 'Z':\n                        // Get first point since last move command.\n                        if (startPoint[0] === x && startPoint[1] === y) {\n                            // Ignore zero length line.\n                            return;\n                        }\n                        segment.p2 = [startPoint[0], startPoint[1]];\n                        break;\n                    /* c8 ignore next 4 */\n                    default:\n                        // Should not hit this.\n                        parsingErrors.push(`Unknown <path> command: ${segmentType}.`);\n                        return;\n                }\n                segments.push(segment);\n            });\n        }\n        this._segments = segments; // Save for later so we don't need to recompute.\n\n        // We no longer need to hold _pathParsers.\n        delete this._pathParsers;\n\n        // Save any errors or warnings so we can query these later.\n        this.errors.push(...parsingErrors);\n        this.warnings.push(...parsingWarnings);\n\n        return segments;\n    }\n\n    /**\n     * Get svg string from paths array.\n     * @private\n     */\n    private static segmentsAsSVG(root: ElementNode, segments: FlatSegment[]) {\n        return FlatSVG.wrapWithSVGTag(\n            root,\n            segments\n                .map((segment) => {\n                    const { p1, p2, properties } = segment;\n                    const propertiesKeys = Object.keys(properties);\n                    let propertiesString = '';\n                    for (let i = 0, length = propertiesKeys.length; i < length; i++) {\n                        const key = propertiesKeys[i] as keyof typeof properties;\n                        propertiesString += `${key}=\"${properties[key]}\" `;\n                    }\n                    if ((segment as FlatBezierSegment).controlPoints) {\n                        const { controlPoints } = segment as FlatBezierSegment;\n                        const curveType = controlPoints.length === 1 ? 'Q' : 'C';\n                        let d = `M ${p1[0]} ${p1[1]} ${curveType} ${controlPoints[0][0]} ${controlPoints[0][1]} `;\n                        if (curveType === 'C')\n                            d += `${controlPoints[1][0]} ${controlPoints[1][1]} `;\n                        d += `${p2[0]} ${p2[1]} `;\n                        return `<path d=\"${d}\" ${propertiesString}/>`;\n                    }\n                    if ((segment as FlatArcSegment).rx !== undefined) {\n                        const { rx, ry, xAxisRotation, largeArcFlag, sweepFlag } =\n                            segment as FlatArcSegment;\n                        return `<path d=\"M ${p1[0]} ${p1[1]} A ${rx} ${ry} ${xAxisRotation} ${\n                            /* c8 ignore next */ largeArcFlag ? 1 : 0\n                        } ${sweepFlag ? 1 : 0} ${p2[0]} ${p2[1]}\" ${propertiesString}/>`;\n                    }\n                    return `<line x1=\"${p1[0]}\" y1=\"${p1[1]}\" x2=\"${p2[0]}\" y2=\"${p2[1]}\" ${propertiesString}/>`;\n                })\n                .join('\\n')\n        );\n    }\n\n    /**\n     * Get svg string from FlatSVG.segments array.\n     */\n    get segmentsAsSVG() {\n        const { segments, root } = this;\n        return FlatSVG.segmentsAsSVG(root, segments);\n    }\n\n    private static filter(\n        objects: FlatElement[],\n        filterFunction: (object: FlatElement, index: number) => boolean\n    ): FlatElement[];\n    private static filter(\n        objects: FlatPath[],\n        filterFunction: (object: FlatPath, index: number) => boolean\n    ): FlatPath[];\n    private static filter(\n        objects: FlatSegment[],\n        filterFunction: (object: FlatSegment, index: number) => boolean\n    ): FlatSegment[];\n    private static filter(\n        objects: (FlatElement | FlatPath | FlatSegment)[],\n        filterFunction: (object: any, index: number) => boolean\n    ) {\n        const matches: (FlatElement | FlatPath | FlatSegment)[] = [];\n        // const remaining: (FlatElement | FlatPath | FlatSegment)[] = [];\n        for (let i = 0; i < objects.length; i++) {\n            const object = objects[i];\n            if (filterFunction(object, i)) matches.push(object);\n            // else remaining.push(object);\n        }\n        return matches;\n    }\n\n    private static filterByStyle(\n        objects: FlatElement[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ): { matches: FlatElement[]; computedProperties: ComputedProperties[] };\n    private static filterByStyle(\n        objects: FlatPath[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ): { matches: FlatPath[]; computedProperties: ComputedProperties[] };\n    private static filterByStyle(\n        objects: FlatSegment[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ): { matches: FlatSegment[]; computedProperties: ComputedProperties[] };\n    private static filterByStyle(\n        objects: (FlatElement | FlatPath | FlatSegment)[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ) {\n        const filterArray = Array.isArray(filter) ? filter : [filter];\n        const filterArrayValues: (string | number | Colord | number[])[] = [];\n        // Precompute colors.\n        for (let i = 0; i < filterArray.length; i++) {\n            const { key, value } = filterArray[i];\n            filterArrayValues.push(value);\n            switch (key) {\n                case SVG_STYLE_STROKE_COLOR:\n                case SVG_STYLE_FILL:\n                case SVG_STYLE_COLOR:\n                    filterArrayValues[i] = colord(value as AnyColor | Colord);\n                    break;\n                case SVG_STYLE_STROKE_DASH_ARRAY:\n                    filterArrayValues[i] = convertToDashArray(value as string | number | number[]);\n                    break;\n            }\n        }\n\n        const matches = FlatSVG.filter(objects as any[], (object, i) => {\n            if (exclude && exclude[i]) return false;\n            const { properties } = object;\n            // Check that this object meets ALL the the style requirements.\n            for (let j = 0; j < filterArray.length; j++) {\n                const { key, tolerance } = filterArray[j];\n                let value = filterArrayValues[j];\n                // Special handling of certain keys.\n                let passed = true;\n                switch (key) {\n                    case SVG_STYLE_STROKE_COLOR:\n                    case SVG_STYLE_FILL:\n                    case SVG_STYLE_COLOR:\n                    case SVG_STYLE_OPACITY:\n                        let color: Colord | undefined;\n                        const computedKey =\n                            key === SVG_STYLE_OPACITY ? SVG_STYLE_STROKE_COLOR : key;\n                        if (computedProperties) {\n                            color = computedProperties[i][computedKey];\n                        }\n                        if (color === undefined) {\n                            color = colord(properties[computedKey] as AnyColor);\n                            // Multiply color.a by properties.opacity.\n                            const opacity = properties[SVG_STYLE_OPACITY];\n                            if (opacity !== undefined) {\n                                const alpha = opacity * color.rgba.a; // Use color.rgba.a instead of alpha() to avoid rounding.\n                                color = color.alpha(alpha); // This makes a copy.\n                            }\n\n                            // Init computed properties array if needed.\n                            if (!computedProperties) {\n                                computedProperties = new Array(\n                                    objects.length\n                                ) as ComputedProperties[];\n                                // Fill with empty objects.\n                                // Don't use Array.fill({}) bc all elements will point to same empty object instance.\n                                for (let k = 0; k < objects.length; k++) {\n                                    computedProperties[k] = {};\n                                }\n                            }\n                            computedProperties[i][computedKey] = color;\n                        }\n                        if (\n                            key === SVG_STYLE_STROKE_COLOR ||\n                            key === SVG_STYLE_FILL ||\n                            key === SVG_STYLE_COLOR\n                        ) {\n                            passed = color.delta(value as AnyColor) <= (tolerance || 0);\n                            break;\n                        }\n                        // Else check color opacity for opacity.\n                        // Use color.rgba.a instead of alpha() to avoid rounding.\n                        passed = Math.abs(color.rgba.a - (value as number)) <= (tolerance || 0);\n                        break;\n                    case SVG_STYLE_STROKE_DASH_ARRAY:\n                        let dashArray: number[] | undefined;\n                        if (computedProperties) {\n                            dashArray = computedProperties[i][key];\n                        }\n                        if (!dashArray) {\n                            dashArray = convertToDashArray(properties[key] as string | number);\n                            // Init computed properties array if needed.\n                            if (!computedProperties) {\n                                computedProperties = new Array(\n                                    objects.length\n                                ) as ComputedProperties[];\n                                // Fill with empty objects.\n                                // Don't use Array.fill({}) bc all elements will point to same empty object instance.\n                                for (let k = 0; k < objects.length; k++) {\n                                    computedProperties[k] = {};\n                                }\n                            }\n                            computedProperties[i][key] = dashArray;\n                        }\n                        if (dashArray.length !== (value as number[]).length) {\n                            if (dashArray.length === (value as number[]).length * 2) {\n                                value = [...(value as number[]), ...(value as number[])];\n                            } else if (dashArray.length * 2 === (value as number[]).length) {\n                                dashArray = [\n                                    ...(dashArray as number[]),\n                                    ...(dashArray as number[]),\n                                ];\n                            } else {\n                                passed = false;\n                            }\n                        }\n                        if (passed) {\n                            for (let k = 0; k < (value as number[]).length; k++) {\n                                if (\n                                    Math.abs((value as number[])[k] - dashArray[k]) >\n                                    (tolerance || 0)\n                                )\n                                    passed = false;\n                            }\n                        }\n                        break;\n                    default:\n                        // Assume any remaining keys correspond to numbers.\n                        if (!isNumber(value)) {\n                            passed = false;\n                            throw new Error(\n                                `flat-svg cannot handle filters with key \"${key}\" and value ${JSON.stringify(\n                                    value\n                                )} of type ${typeof value}.  Please submit an issue to https://github.com/amandaghassaei/flat-svg if this feature should be added.`\n                            );\n                            /* c8 ignore next 2 */\n                            break;\n                        }\n                        if (\n                            properties[key as keyof typeof properties] === undefined ||\n                            Math.abs(\n                                (properties[key as keyof typeof properties] as number) -\n                                    (value as number)\n                            ) > (tolerance || 0)\n                        ) {\n                            passed = false;\n                        }\n                        break;\n                }\n                if (!passed) return false;\n            }\n            return true;\n        });\n        return { matches: matches as (FlatElement | FlatPath | FlatSegment)[], computedProperties };\n    }\n\n    /**\n     * Filter FlatSVG elements by style properties.\n     * @param filter - Style properties to filter for.\n     * @param exclude - Optionally pass an array of booleans of the same length as elements with \"true\" indicating that element should be excluded from the filter.\n     */\n    filterElementsByStyle(filter: PropertiesFilter | PropertiesFilter[], exclude?: boolean[]) {\n        const { elements } = this;\n        const { matches, computedProperties } = FlatSVG.filterByStyle(\n            elements,\n            filter,\n            this._computedElementProperties,\n            exclude\n        );\n        this._computedElementProperties = computedProperties;\n        return matches;\n    }\n\n    /**\n     * Filter FlatSVG paths by style properties.\n     * @param filter - Style properties to filter for.\n     * @param exclude - Optionally pass an array of booleans of the same length as paths with \"true\" indicating that path should be excluded from the filter.\n     */\n    filterPathsByStyle(filter: PropertiesFilter | PropertiesFilter[], exclude?: boolean[]) {\n        const { paths } = this;\n        const { matches, computedProperties } = FlatSVG.filterByStyle(\n            paths,\n            filter,\n            this._computedPathProperties,\n            exclude\n        );\n        this._computedPathProperties = computedProperties;\n        return matches;\n    }\n\n    /**\n     * Filter FlatSVG segments by style properties.\n     * @param filter - Style properties to filter for.\n     * @param exclude - Optionally pass an array of booleans of the same length as segments with \"true\" indicating that segment should be excluded from the filter.\n     */\n    filterSegmentsByStyle(filter: PropertiesFilter | PropertiesFilter[], exclude?: boolean[]) {\n        const { segments } = this;\n        const { matches, computedProperties } = FlatSVG.filterByStyle(\n            segments,\n            filter,\n            this._computedSegmentProperties,\n            exclude\n        );\n        this._computedSegmentProperties = computedProperties;\n        return matches;\n    }\n}\n","export default function(e,f){var a={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},r={};for(var d in a)r[a[d]]=d;var l={};e.prototype.toName=function(f){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return\"transparent\";var d,i,n=r[this.toHex()];if(n)return n;if(null==f?void 0:f.closest){var o=this.toRgb(),t=1/0,b=\"black\";if(!l.length)for(var c in a)l[c]=new e(a[c]).toRgb();for(var g in a){var u=(d=o,i=l[g],Math.pow(d.r-i.r,2)+Math.pow(d.g-i.g,2)+Math.pow(d.b-i.b,2));u<t&&(t=u,b=g)}return b}};f.string.push([function(f){var r=f.toLowerCase(),d=\"transparent\"===r?\"#0000\":a[r];return d?new e(d).toRgb():null},\"name\"])}\n"],"names":["validNameCharacters","whitespace","quotemark","parse","source","header","stack","state","metadata","currentElement","root","error","message","ref","search","options","Error","offsetLine","offsetColumn","originalLines","split","start","lineRanges","map","line","i","end","length","range","rangeContains","index","getLocation","column","character","startIndex","indexOf","d","getLocator","locate","before","slice","beforeLine","exec","replace","after","snippet","str","result","test","neutral","text","children","push","type","value","tag","char","comment","cdata","closingTag","attribute","element","tagName","getName","properties","getAttribute","name","selfClosing","allowSpaces","pop","escaped","getQuotedAttributeValue","getUnquotedAttributeValue","isNaN","trim","isNumber","Number","isPositiveNumber","isNonNegativeNumber","isString","isArray","Array","ArrayBuffer","isView","DataView","isTypedArray","removeWhitespacePadding","string","convertToDashArray","dashArray","undefined","_el","el","parseFloat","len","JSON","stringify","parseTransformString","transformStrings","match","unusedCharacters","transforms","transform","a","b","c","e","f","transformString","lastString","matchIndex","transformComponents","errors","transformName","toLowerCase","params","floatParams","j","param","Infinity","NaN","expectedNumParameters","Math","PI","x","y","cosA","cos","sinA","sin","tan","warnings","numParams","join","splice","flattenTransformArray","copyTransform","dotTransforms","t1","t2","applyTransform","p","t","r","grad","turn","rad","n","pow","round","u","isFinite","g","o","s","toString","h","max","min","v","floor","l","m","parseInt","substr","object","N","M","H","$","this","parsed","rgba","prototype","isValid","brightness","isDark","isLight","toHex","toRgb","toRgbString","toHsl","toHslString","toHsv","invert","w","saturate","desaturate","grayscale","lighten","darken","rotate","hue","alpha","isEqual","S","k","forEach","z","POLYGON","POLYLINE","SVG_STYLE_FILL","SVG_STYLE_STROKE_COLOR","SVG_STYLE_COLOR","SVG_STYLE_OPACITY","SVG_STYLE_STROKE_DASH_ARRAY","paramCounts","q","SPECIAL_SPACES","isDigit","code","isDigitStart","State","path","err","segmentStart","data","skipSpaces","ch","charCodeAt","scanFlag","scanParam","zeroFirst","hasCeiling","hasDecimal","hasDot","finalizeSegment","cmd","cmdLC","concat","scanSegment","cmdCode","is_arc","comma_found","need_params","isCommand","Matrix","queue","cache","matrix","Matrix$1","translate","tx","ty","scale","sx","sy","angle","rx","ry","skewX","skewY","toArray","m1","m2","calc","isRelative","require$$0","operations","CMD_SPLIT_RE","PARAMS_SPLIT_RE","TAU","unit_vector_angle","ux","uy","vx","vy","dot","acos","approximate_unit_arc","theta1","delta_theta","x1","y1","x2","y2","epsilon","torad","Ellipse","ax","ma","J","K","D","JK","sqrt","L","l1","l2","abs","atan","isDegenerate","pathParse","svgPath","segments","transformParse","item","require$$2","a2c","fa","fs","phi","sin_phi","cos_phi","x1p","y1p","lambda","cc","rx_sq","ry_sq","x1p_sq","y1p_sq","radicant","cxp","cyp","cx","cy","v1x","v1y","v2x","v2y","get_arc_center","ceil","curve","xp","yp","ellipse","SvgPath","pstate","__stack","from","src","sgm","__matrix","self","iterate","__evaluateStack","prevCmd","cmdSkipped","segment","pos","val","degrees","contourStartDeltaX","contourStartDeltaY","deltaX","deltaY","toFixed","iterator","keepLazyStack","newSegments","replacements","needReplace","lastX","lastY","countourStartX","countourStartY","res","nameUC","toUpperCase","rel","nameLC","unarc","new_segments","nextX","nextY","unshort","prevControlX","prevControlY","prevSegment","curControlX","curControlY","idx","svgpath","module","exports","temp","convertLineToPath","parsingErrors","convertRectToPath","width","height","x3","y3","x4","y4","convertCircleToPath","_preserveArcs","pathParser","_convertEllipseToPath","convertEllipseToPath","convertPolygonToPath","points","_convertPointsToPath","convertPolylineToPath","pointsString","elementType","point","shift","convertPathToPath","$parcel$defineInteropFlag","Object","defineProperty","configurable","$parcel$export","get","set","enumerable","$009ddb00d3ec72b8$exports","$009ddb00d3ec72b8$export$2e2bcd8739ae039","constructor","filename","msg","lineno","css","super","reason","$0865a9fb4cc365fe$exports","$0865a9fb4cc365fe$export$2e2bcd8739ae039","$b2e137848b48cf4f$export$9be5dd6e61d5d73a","CssTypes","$d708735ed1303b43$var$commentre","$d708735ed1303b43$var$trim","$d708735ed1303b43$var$addParent","obj","parent","isNode","childParent","writable","$d708735ed1303b43$export$2e2bcd8739ae039","position","node","errorsList","silent","open","close","rules","comments","charAt","atrule","rule","re","lines","lastIndexOf","updatePosition","selector","declaration","propMatch","propValue","ret","property","declarations","decls","decl","keyframe","vals","values","atimport","_compileAtrule","atcharset","atnamespace","RegExp","vendor","frame","frames","keyframes","atkeyframes","media","style","atmedia","customMedia","atcustommedia","supports","atsupports","doc","document","atdocument","sel","page","selectors","atpage","host","athost","fontFace","atfontface","container","atcontainer","layer","atlayer","rulesList","stylesheet","$149c1bd638913645$export$98e6a39c04603d36","extend","white","bisque","blue","cadetblue","chartreuse","chocolate","coral","antiquewhite","aqua","azure","whitesmoke","papayawhip","plum","blanchedalmond","black","gold","goldenrod","gainsboro","cornsilk","cornflowerblue","burlywood","aquamarine","beige","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkkhaki","darkgray","darkgreen","darkgrey","peachpuff","darkmagenta","darkred","darkorchid","darkorange","darkslateblue","gray","darkslategray","darkslategrey","deeppink","deepskyblue","wheat","firebrick","floralwhite","ghostwhite","darkviolet","magenta","green","dodgerblue","grey","honeydew","hotpink","blueviolet","forestgreen","lawngreen","indianred","indigo","fuchsia","brown","maroon","mediumblue","lightcoral","darkturquoise","lightcyan","ivory","lightyellow","lightsalmon","lightseagreen","linen","mediumaquamarine","lemonchiffon","lime","khaki","mediumseagreen","limegreen","mediumspringgreen","lightskyblue","lightblue","midnightblue","lightpink","mistyrose","moccasin","mintcream","lightslategray","lightslategrey","navajowhite","navy","mediumvioletred","powderblue","palegoldenrod","oldlace","paleturquoise","mediumturquoise","mediumorchid","rebeccapurple","lightsteelblue","mediumslateblue","thistle","orchid","mediumpurple","purple","pink","skyblue","springgreen","palegreen","red","yellow","slateblue","lavenderblush","peru","palevioletred","violet","teal","slategray","slategrey","aliceblue","darkseagreen","darkolivegreen","greenyellow","seagreen","seashell","tomato","silver","sienna","lavender","lightgreen","orange","orangered","steelblue","royalblue","turquoise","yellowgreen","salmon","saddlebrown","sandybrown","rosybrown","darksalmon","lightgoldenrodyellow","snow","lightgrey","lightgray","dimgray","dimgrey","olivedrab","olive","toName","closest","toLab","cbrt","delta","atan2","F","I","P","A","exp","B","FlatSVG","defs","_rootNode","preserveArcs","topChildren","child","defsChild","_globalStyles","assign","parseStyleToObject","deepIterChildren","bind","styleString","cssParse","filter","numRules","selectorStyle","numDeclarations","numSelectors","viewBox","viewBoxString","units","regex","console","warn","callback","ids","classes","numChildren","childClasses","childIds","childProperties","childTransform","childTransforms","transformIndex","numTransforms","unshift","childPropertiesToMerge","id","idsArray","numIds","idStyle","class","classArray","numClasses","classStyle","propertyKeys","keys","numProperties","key","elements","_elements","flatChild","static","svgElements","wrapWithSVGTag","propertiesKeys","propertiesString","transformToString","elementsAsSVG","paths","_paths","pathParsers","parsingWarnings","propertiesCopy","_pathParsers","pathsAsSVG","_segments","fill","numPaths","startPoint","command","p1","segmentType","p2","controlPoints","xAxisRotation","largeArcFlag","sweepFlag","curveType","segmentsAsSVG","objects","filterFunction","matches","computedProperties","exclude","filterArray","filterArrayValues","colord","tolerance","passed","color","computedKey","opacity","filterElementsByStyle","filterByStyle","_computedElementProperties","filterPathsByStyle","_computedPathProperties","filterSegmentsByStyle","_computedSegmentProperties"],"mappings":"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"}