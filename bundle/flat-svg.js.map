{"version":3,"file":"flat-svg.js","sources":["../node_modules/svg-parser/dist/svg-parser.esm.js","../node_modules/@amandaghassaei/type-checks/dist/type-checks.js","../src/utils.ts","../src/transforms.ts","../node_modules/colord/index.mjs","../node_modules/colord/plugins/names.mjs","../node_modules/colord/plugins/lab.mjs","../src/constants.ts","../node_modules/svgpath/lib/path_parse.js","../node_modules/svgpath/lib/matrix.js","../node_modules/svgpath/lib/transform_parse.js","../node_modules/svgpath/lib/a2c.js","../node_modules/svgpath/lib/ellipse.js","../node_modules/svgpath/lib/svgpath.js","../node_modules/svgpath/index.js","../src/convertToPath.ts","../node_modules/@adobe/css-tools/dist/index.mjs","../src/FlatSVG.ts"],"sourcesContent":["function getLocator(source, options) {\n    if (options === void 0) { options = {}; }\n    var offsetLine = options.offsetLine || 0;\n    var offsetColumn = options.offsetColumn || 0;\n    var originalLines = source.split('\\n');\n    var start = 0;\n    var lineRanges = originalLines.map(function (line, i) {\n        var end = start + line.length + 1;\n        var range = { start: start, end: end, line: i };\n        start = end;\n        return range;\n    });\n    var i = 0;\n    function rangeContains(range, index) {\n        return range.start <= index && index < range.end;\n    }\n    function getLocation(range, index) {\n        return { line: offsetLine + range.line, column: offsetColumn + index - range.start, character: index };\n    }\n    function locate(search, startIndex) {\n        if (typeof search === 'string') {\n            search = source.indexOf(search, startIndex || 0);\n        }\n        var range = lineRanges[i];\n        var d = search >= range.end ? 1 : -1;\n        while (range) {\n            if (rangeContains(range, search))\n                return getLocation(range, search);\n            i += d;\n            range = lineRanges[i];\n        }\n    }\n    return locate;\n}\nfunction locate(source, search, options) {\n    if (typeof options === 'number') {\n        throw new Error('locate takes a { startIndex, offsetLine, offsetColumn } object as the third argument');\n    }\n    return getLocator(source, options)(search, options && options.startIndex);\n}\n\nvar validNameCharacters = /[a-zA-Z0-9:_-]/;\nvar whitespace = /[\\s\\t\\r\\n]/;\nvar quotemark = /['\"]/;\n\nfunction repeat(str, i) {\n\tvar result = '';\n\twhile (i--) { result += str; }\n\treturn result;\n}\n\nfunction parse(source) {\n\tvar header = '';\n\tvar stack = [];\n\n\tvar state = metadata;\n\tvar currentElement = null;\n\tvar root = null;\n\n\tfunction error(message) {\n\t\tvar ref = locate(source, i);\n\t\tvar line = ref.line;\n\t\tvar column = ref.column;\n\t\tvar before = source.slice(0, i);\n\t\tvar beforeLine = /(^|\\n).*$/.exec(before)[0].replace(/\\t/g, '  ');\n\t\tvar after = source.slice(i);\n\t\tvar afterLine = /.*(\\n|$)/.exec(after)[0];\n\n\t\tvar snippet = \"\" + beforeLine + afterLine + \"\\n\" + (repeat(' ', beforeLine.length)) + \"^\";\n\n\t\tthrow new Error(\n\t\t\t(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug in svg-parser. Please raise an issue at https://github.com/Rich-Harris/svg-parser/issues â€“ thanks!\\n\\n\" + snippet)\n\t\t);\n\t}\n\n\tfunction metadata() {\n\t\twhile ((i < source.length && source[i] !== '<') || !validNameCharacters.test(source[i + 1])) {\n\t\t\theader += source[i++];\n\t\t}\n\n\t\treturn neutral();\n\t}\n\n\tfunction neutral() {\n\t\tvar text = '';\n\t\twhile (i < source.length && source[i] !== '<') { text += source[i++]; }\n\n\t\tif (/\\S/.test(text)) {\n\t\t\tcurrentElement.children.push({ type: 'text', value: text });\n\t\t}\n\n\t\tif (source[i] === '<') {\n\t\t\treturn tag;\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction tag() {\n\t\tvar char = source[i];\n\n\t\tif (char === '?') { return neutral; } // <?xml...\n\n\t\tif (char === '!') {\n\t\t\tif (source.slice(i + 1, i + 3) === '--') { return comment; }\n\t\t\tif (source.slice(i + 1, i + 8) === '[CDATA[') { return cdata; }\n\t\t\tif (/doctype/i.test(source.slice(i + 1, i + 8))) { return neutral; }\n\t\t}\n\n\t\tif (char === '/') { return closingTag; }\n\n\t\tvar tagName = getName();\n\n\t\tvar element = {\n\t\t\ttype: 'element',\n\t\t\ttagName: tagName,\n\t\t\tproperties: {},\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (currentElement) {\n\t\t\tcurrentElement.children.push(element);\n\t\t} else {\n\t\t\troot = element;\n\t\t}\n\n\t\tvar attribute;\n\t\twhile (i < source.length && (attribute = getAttribute())) {\n\t\t\telement.properties[attribute.name] = attribute.value;\n\t\t}\n\n\t\tvar selfClosing = false;\n\n\t\tif (source[i] === '/') {\n\t\t\ti += 1;\n\t\t\tselfClosing = true;\n\t\t}\n\n\t\tif (source[i] !== '>') {\n\t\t\terror('Expected >');\n\t\t}\n\n\t\tif (!selfClosing) {\n\t\t\tcurrentElement = element;\n\t\t\tstack.push(element);\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction comment() {\n\t\tvar index = source.indexOf('-->', i);\n\t\tif (!~index) { error('expected -->'); }\n\n\t\ti = index + 2;\n\t\treturn neutral;\n\t}\n\n\tfunction cdata() {\n\t\tvar index = source.indexOf(']]>', i);\n\t\tif (!~index) { error('expected ]]>'); }\n\n\t\tcurrentElement.children.push(source.slice(i + 7, index));\n\n\t\ti = index + 2;\n\t\treturn neutral;\n\t}\n\n\tfunction closingTag() {\n\t\tvar tagName = getName();\n\n\t\tif (!tagName) { error('Expected tag name'); }\n\n\t\tif (tagName !== currentElement.tagName) {\n\t\t\terror((\"Expected closing tag </\" + tagName + \"> to match opening tag <\" + (currentElement.tagName) + \">\"));\n\t\t}\n\n\t\tallowSpaces();\n\n\t\tif (source[i] !== '>') {\n\t\t\terror('Expected >');\n\t\t}\n\n\t\tstack.pop();\n\t\tcurrentElement = stack[stack.length - 1];\n\n\t\treturn neutral;\n\t}\n\n\tfunction getName() {\n\t\tvar name = '';\n\t\twhile (i < source.length && validNameCharacters.test(source[i])) { name += source[i++]; }\n\n\t\treturn name;\n\t}\n\n\tfunction getAttribute() {\n\t\tif (!whitespace.test(source[i])) { return null; }\n\t\tallowSpaces();\n\n\t\tvar name = getName();\n\t\tif (!name) { return null; }\n\n\t\tvar value = true;\n\n\t\tallowSpaces();\n\t\tif (source[i] === '=') {\n\t\t\ti += 1;\n\t\t\tallowSpaces();\n\n\t\t\tvalue = getAttributeValue();\n\t\t\tif (!isNaN(value) && value.trim() !== '') { value = +value; } // TODO whitelist numeric attributes?\n\t\t}\n\n\t\treturn { name: name, value: value };\n\t}\n\n\tfunction getAttributeValue() {\n\t\treturn quotemark.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n\t}\n\n\tfunction getUnquotedAttributeValue() {\n\t\tvar value = '';\n\t\tdo {\n\t\t\tvar char = source[i];\n\t\t\tif (char === ' ' || char === '>' || char === '/') {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvalue += char;\n\t\t\ti += 1;\n\t\t} while (i < source.length);\n\n\t\treturn value;\n\t}\n\n\tfunction getQuotedAttributeValue() {\n\t\tvar quotemark = source[i++];\n\n\t\tvar value = '';\n\t\tvar escaped = false;\n\n\t\twhile (i < source.length) {\n\t\t\tvar char = source[i++];\n\t\t\tif (char === quotemark && !escaped) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif (char === '\\\\' && !escaped) {\n\t\t\t\tescaped = true;\n\t\t\t}\n\n\t\t\tvalue += escaped ? (\"\\\\\" + char) : char;\n\t\t\tescaped = false;\n\t\t}\n\t}\n\n\tfunction allowSpaces() {\n\t\twhile (i < source.length && whitespace.test(source[i])) { i += 1; }\n\t}\n\n\tvar i = metadata.length;\n\twhile (i < source.length) {\n\t\tif (!state) { error('Unexpected character'); }\n\t\tstate = state();\n\t\ti += 1;\n\t}\n\n\tif (state !== neutral) {\n\t\terror('Unexpected end of input');\n\t}\n\n\tif (root.tagName === 'svg') { root.metadata = header; }\n\treturn {\n\t\ttype: 'root',\n\t\tchildren: [root]\n\t};\n}\n\nexport { parse };\n//# sourceMappingURL=svg-parser.esm.js.map\n","/**\n * Checks if value is a number (including Infinity).\n */\nexport function isNumber(value) {\n    return !Number.isNaN(value) && typeof value === 'number';\n}\n/**\n * Checks if value is finite number.\n */\nexport function isFiniteNumber(value) {\n    return isNumber(value) && Number.isFinite(value);\n}\n/**\n * Checks if value is integer.\n */\nexport function isInteger(value) {\n    return isFiniteNumber(value) && (value % 1 === 0);\n}\n/**\n * Checks if value is positive number (> 0).\n */\nexport function isPositiveNumber(value) {\n    return isNumber(value) && value > 0;\n}\n/**\n * Checks if value is positive integer (> 0).\n */\nexport function isPositiveInteger(value) {\n    return isInteger(value) && value > 0;\n}\n/**\n * Checks if value is negative number (< 0).\n */\nexport function isNegativeNumber(value) {\n    return isNumber(value) && value < 0;\n}\n/**\n * Checks if value is negative integer (< 0).\n */\nexport function isNegativeInteger(value) {\n    return isInteger(value) && value < 0;\n}\n/**\n * Checks if value is non-negative number (>= 0).\n */\nexport function isNonNegativeNumber(value) {\n    return isNumber(value) && value >= 0;\n}\n/**\n * Checks if value is non-negative integer (>= 0).\n */\nexport function isNonNegativeInteger(value) {\n    return isInteger(value) && value >= 0;\n}\n/**\n * Checks if value is non-positive number (<= 0).\n */\nexport function isNonPositiveNumber(value) {\n    return isNumber(value) && value <= 0;\n}\n/**\n * Checks if value is non-positive integer (<= 0).\n */\nexport function isNonPositiveInteger(value) {\n    return isInteger(value) && value <= 0;\n}\n/**\n * Checks if value is number in range [min, max].\n */\nexport function isNumberInRange(value, min, max) {\n    return isNumber(value) && value >= min && value <= max;\n}\n/**\n * Checks if value is integer in range [min, max].\n */\nexport function isIntegerInRange(value, min, max) {\n    return isInteger(value) && value >= min && value <= max;\n}\n/**\n * Checks if value is string.\n */\nexport function isString(value) {\n    return typeof value === 'string';\n}\n/**\n * Checks if value is TypedArray.\n */\nexport function isTypedArray(value) {\n    return ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n/**\n * Checks if value is Array or TypedArray.\n */\nexport function isArray(value) {\n    return Array.isArray(value) || isTypedArray(value);\n}\n/**\n * Checks if value is Javascript object.\n */\nexport function isObject(value) {\n    return typeof value === 'object' && !isArray(value) && value !== null && !(value instanceof ArrayBuffer) && !(value instanceof DataView);\n}\n/**\n * Checks if value is boolean.\n */\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\n//# sourceMappingURL=type-checks.js.map","import { isArray, isNumber, isPositiveNumber, isString } from '@amandaghassaei/type-checks';\n\nexport function removeWhitespacePadding(string: string) {\n\treturn string.replace(/^\\s+|\\s+$/g,'');\n}\n\nexport function convertToDashArray(value: string | number | number[] | undefined) {\n\tlet dashArray: number[] = [];\n\tif (value === '' || value === undefined) return dashArray;\n\tif (isNumber(value)) {\n\t\tif (!isPositiveNumber(value)) {\n\t\t\tthrow new Error(`Expected positive number for stroke-dasharray value, got ${value}.`);\n\t\t}\n\t\tdashArray = [value as number];\n\t} else if (isString(value)) {\n\t\tdashArray = (value as string).split(' ').map(_el => {\n\t\t\tconst el = Number.parseFloat(_el);\n\t\t\tif (!isPositiveNumber(el)) {\n\t\t\t\tthrow new Error(`Expected positive number for stroke-dasharray value, got ${el} from string \"${_el}\".`);\n\t\t\t}\n\t\t\treturn el;\n\t\t});\n\t} else if (isArray(value)) {\n\t\tfor (let i = 0, len = (value as number[]).length; i < len; i++) {\n\t\t\tconst el = (value as number[])[i];\n\t\t\tif (!isPositiveNumber(el)) {\n\t\t\t\tthrow new Error(`Expected positive number for stroke-dasharray value, got ${el} from array ${JSON.stringify(value)}.`);\n\t\t\t}\n\t\t\tdashArray.push(el);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Invalid type ${typeof value} for stroke-dasharray property ${value}.`);\n\t}\n\tif (dashArray.length % 2 === 1) {\n\t\t// Odd length dash arrays should be repeated. \n\t\tdashArray = [...dashArray, ...dashArray];\n\t}\n\treturn dashArray;\n}","import { Transform, TransformParsed } from './types';\nimport { removeWhitespacePadding } from './utils';\n\nexport function initIdentityTransform() {\n    const transform: Transform = {\n        a: 1,\n        b: 0,\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0,\n    };\n    return transform;\n}\n\n// Parse transforms ourselves so we can attach errors and warnings for more feedback in ui.\n// https://gist.github.com/petersirka/dfac415e1e1e4993af826c0ff706eb4d/\n// https://github.com/fontello/svgpath/blob/master/lib/transform_parse.js\n// https://www.w3.org/TR/SVG11/coords.html#TransformAttribute\nexport function parseTransformString(string: string, tagName?: string) {\n    const transformStrings = string.match(\n        /(translate|matrix|rotate|skewX|skewY|scale)\\s*\\(\\s*(.*?)\\s*\\)/gi\n    );\n    const unusedCharacters: string[] = [string.slice()]; // Place to store any characters in transform that were missed.\n    const transforms: TransformParsed[] = [];\n    if (transformStrings) {\n        // Loop through all transforms (many may be chained together e.g. \"translate(1, 45) rotate(56)\").\n        for (let i = 0; i < transformStrings.length; i++) {\n            const transform = initIdentityTransform() as TransformParsed; // Init identity transform to start.\n            const transformString = transformStrings[i]; // Transform as a string.\n\n            // Keep track of what hasn't been matched.\n            const lastString = unusedCharacters.pop()!;\n            const matchIndex = lastString.indexOf(transformString);\n            unusedCharacters.push(\n                lastString.slice(0, matchIndex),\n                lastString.slice(matchIndex + transformString.length)\n            );\n\n            // Split transform into components: transform name and parameters.\n            const transformComponents = transformString.split(/[\\(\\)]+/);\n            if (transformComponents.length > 2) transformComponents.pop(); // Remove empty string at the end of split.\n            if (transformComponents.length !== 2) {\n                transform.errors = [`Malformed transform: \"${transformString}\".`];\n                transforms.push(transform);\n                continue;\n            }\n            const transformName = removeWhitespacePadding(transformComponents[0]).toLowerCase();\n            // First try splitting by commas.\n            let params = removeWhitespacePadding(transformComponents[1]).split(',');\n            // Then split by spaces if commas not found.\n            if (params.length === 1) params = params[0].split(/\\s+/);\n            // Convert parameters to float.\n            const floatParams: number[] = [];\n            for (let j = 0; j < params.length; j++) {\n                const param = params[j];\n                floatParams.push(parseFloat(param));\n                // Remove infinity cases.\n                if (floatParams[j] === Infinity || floatParams[j] === -Infinity) {\n                    floatParams[j] = NaN;\n                }\n            }\n            let expectedNumParameters: number[] = [];\n            switch (transformName) {\n                case 'translate':\n                    // translate(<tx> [<ty>]), which specifies a translation by tx and ty. If <ty> is not provided, it is assumed to be zero.\n                    expectedNumParameters = [1, 2];\n                    transform.e = floatParams[0] || 0;\n                    transform.f = floatParams[1] || 0;\n                    break;\n                case 'scale':\n                    // scale(<sx> [<sy>]), which specifies a scale operation by sx and sy. If <sy> is not provided, it is assumed to be equal to <sx>.\n                    expectedNumParameters = [1, 2];\n                    // Default value of 1, but allow zero scale to pass through.\n                    transform.a = floatParams[0] === 0 ? 0 : floatParams[0] || 1;\n                    transform.d = floatParams[1] === 0 ? 0 : floatParams[1] || transform.a;\n                    break;\n                case 'rotate': {\n                    // rotate(<rotate-angle> [<cx> <cy>]), which specifies a rotation by <rotate-angle> degrees about a given point.\n                    // If optional parameters <cx> and <cy> are not supplied, the rotate is about the origin of the current user coordinate system.\n                    // If optional parameters <cx> and <cy> are supplied, the rotate is about the point (cx, cy).\n                    expectedNumParameters = [1, 3];\n                    // Rotation angle is in degrees.\n                    const a = ((floatParams[0] || 0) * Math.PI) / 180;\n                    if (a !== 0) {\n                        const x = floatParams[1] || 0;\n                        const y = floatParams[2] || 0;\n                        const cosA = Math.cos(a);\n                        const sinA = Math.sin(a);\n                        transform.a = cosA;\n                        transform.b = sinA;\n                        transform.c = -sinA;\n                        transform.d = cosA;\n                        transform.e = -x * cosA + y * sinA + x;\n                        transform.f = -x * sinA - y * cosA + y;\n                    }\n                    break;\n                }\n                case 'skewx': {\n                    // skewX(<skew-angle>), which specifies a skew transformation along the x-axis.\n                    expectedNumParameters = [1];\n                    // Rotation angle is in degrees.\n                    const a = ((floatParams[0] || 0) * Math.PI) / 180;\n                    if (a !== 0) transform.c = Math.tan(a);\n                    break;\n                }\n                case 'skewy': {\n                    // skewY(<skew-angle>), which specifies a skew transformation along the y-axis.\n                    expectedNumParameters = [1];\n                    // Rotation angle is in degrees.\n                    const a = ((floatParams[0] || 0) * Math.PI) / 180;\n                    if (a !== 0) transform.b = Math.tan(a);\n                    break;\n                }\n                case 'matrix':\n                    // matrix(<a> <b> <c> <d> <e> <f>), which specifies a transformation in the form of a transformation matrix of six values.\n                    expectedNumParameters = [6];\n                    // For elements with default value of 1, allow zero to pass through.\n                    transform.a = floatParams[0] === 0 ? 0 : floatParams[0] || 1;\n                    transform.b = floatParams[1] || 0;\n                    transform.c = floatParams[2] || 0;\n                    transform.d = floatParams[3] === 0 ? 0 : floatParams[3] || 1;\n                    transform.e = floatParams[4] || 0;\n                    transform.f = floatParams[5] || 0;\n                    break;\n                /* c8 ignore next 5 */\n                default:\n                    // It should not be possible to hit this.\n                    // Should be caught by regex at top of function, any invalid transforms go to unusedCharacters.\n                    transform.errors = [`Unknown transform ${transformName}.`];\n                    break;\n            }\n            // Add warnings if necessary.\n            const warnings: string[] = [];\n            // Check that correct number of params supplied.\n            let numParams = params.length;\n            if (numParams === 1 && params[0] === '') {\n                numParams = 0;\n            }\n            if (expectedNumParameters.indexOf(numParams) < 0) {\n                warnings.push(\n                    `Found ${\n                        tagName ? `${tagName} ` : ''\n                    }element with malformed transform: \"${transformString}\" containing ${numParams} parameters, expected ${expectedNumParameters.join(\n                        ' or '\n                    )} parameter${\n                        expectedNumParameters[expectedNumParameters.length - 1] > 1 ? 's' : ''\n                    }.`\n                );\n            } else {\n                // Check if any params are invalid.\n                for (let j = 0; j < floatParams.length; j++) {\n                    if (isNaN(floatParams[j])) {\n                        warnings.push(\n                            `Found ${\n                                tagName ? `${tagName} ` : ''\n                            }element with invalid transform: \"${transformString}\", transform parameters must be finite numbers.`\n                        );\n                        break;\n                    }\n                }\n            }\n            // Attach warning to transform.\n            if (warnings.length) transform.warnings = warnings;\n            transforms.push(transform);\n        }\n    }\n    // Check if anything was missed:\n    for (let i = unusedCharacters.length - 1; i >= 0; i--) {\n        unusedCharacters[i] = removeWhitespacePadding(unusedCharacters[i]);\n        if (unusedCharacters[i] === '' || unusedCharacters[i] === ',')\n            unusedCharacters.splice(i, 1);\n    }\n    if (unusedCharacters.length) {\n        const transform = initIdentityTransform() as TransformParsed;\n        transform.errors = [\n            `Malformed transform, unmatched characters: [ ${unusedCharacters\n                .map((str) => `\"${str}\"`)\n                .join(', ')} ].`,\n        ];\n        transforms.push(transform);\n    }\n    return transforms;\n}\n\nexport function flattenTransformArray(transforms: Transform[]) {\n    // Flatten transforms to a single matrix.\n    const transform = copyTransform(transforms[0]);\n    for (let i = 1; i < transforms.length; i++) {\n        dotTransforms(transform, transforms[i]);\n    }\n    return transform;\n}\n\nexport function dotTransforms(t1: Transform, t2: Transform) {\n    const a = t1.a * t2.a + t1.c * t2.b;\n    const b = t1.b * t2.a + t1.d * t2.b;\n    const c = t1.a * t2.c + t1.c * t2.d;\n    const d = t1.b * t2.c + t1.d * t2.d;\n    const e = t1.a * t2.e + t1.c * t2.f + t1.e;\n    const f = t1.b * t2.e + t1.d * t2.f + t1.f;\n    // Modify t1 in place.\n    t1.a = a;\n    t1.b = b;\n    t1.c = c;\n    t1.d = d;\n    t1.e = e;\n    t1.f = f;\n    return t1;\n}\n\nexport function applyTransform(p: [number, number], t: Transform) {\n    const x = t.a * p[0] + t.c * p[1] + t.e;\n    const y = t.b * p[0] + t.d * p[1] + t.f;\n    // Apply transform in place.\n    p[0] = x;\n    p[1] = y;\n    return p;\n}\n\nexport function copyTransform(t: Transform) {\n    return {\n        a: t.a,\n        b: t.b,\n        c: t.c,\n        d: t.d,\n        e: t.e,\n        f: t.f,\n    } as Transform;\n}\n\nexport function transformToString(t: Transform) {\n    return `matrix(${t.a} ${t.b} ${t.c} ${t.d} ${t.e} ${t.f})`;\n}\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},e=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},u=function(r){return(r=isFinite(r)?r%360:0)>0?r:r+360},a=function(r){return{r:e(r.r,0,255),g:e(r.g,0,255),b:e(r.b,0,255),a:e(r.a)}},o=function(r){return{r:n(r.r),g:n(r.g),b:n(r.b),a:n(r.a,3)}},i=/^#([0-9a-f]{3,8})$/i,s=function(r){var t=r.toString(16);return t.length<2?\"0\"+t:t},h=function(r){var t=r.r,n=r.g,e=r.b,u=r.a,a=Math.max(t,n,e),o=a-Math.min(t,n,e),i=o?a===t?(n-e)/o:a===n?2+(e-t)/o:4+(t-n)/o:0;return{h:60*(i<0?i+6:i),s:a?o/a*100:0,v:a/255*100,a:u}},b=function(r){var t=r.h,n=r.s,e=r.v,u=r.a;t=t/360*6,n/=100,e/=100;var a=Math.floor(t),o=e*(1-n),i=e*(1-(t-a)*n),s=e*(1-(1-t+a)*n),h=a%6;return{r:255*[e,i,o,o,s,e][h],g:255*[s,e,e,i,o,o][h],b:255*[o,o,s,e,e,i][h],a:u}},g=function(r){return{h:u(r.h),s:e(r.s,0,100),l:e(r.l,0,100),a:e(r.a)}},d=function(r){return{h:n(r.h),s:n(r.s),l:n(r.l),a:n(r.a,3)}},f=function(r){return b((n=(t=r).s,{h:t.h,s:(n*=((e=t.l)<50?e:100-e)/100)>0?2*n/(e+n)*100:0,v:e+n,a:t.a}));var t,n,e},c=function(r){return{h:(t=h(r)).h,s:(u=(200-(n=t.s))*(e=t.v)/100)>0&&u<200?n*e/100/(u<=100?u:200-u)*100:0,l:u/2,a:t.a};var t,n,e,u},l=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,p=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,v=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,m=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,y={string:[[function(r){var t=i.exec(r);return t?(r=t[1]).length<=4?{r:parseInt(r[0]+r[0],16),g:parseInt(r[1]+r[1],16),b:parseInt(r[2]+r[2],16),a:4===r.length?n(parseInt(r[3]+r[3],16)/255,2):1}:6===r.length||8===r.length?{r:parseInt(r.substr(0,2),16),g:parseInt(r.substr(2,2),16),b:parseInt(r.substr(4,2),16),a:8===r.length?n(parseInt(r.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(r){var t=v.exec(r)||m.exec(r);return t?t[2]!==t[4]||t[4]!==t[6]?null:a({r:Number(t[1])/(t[2]?100/255:1),g:Number(t[3])/(t[4]?100/255:1),b:Number(t[5])/(t[6]?100/255:1),a:void 0===t[7]?1:Number(t[7])/(t[8]?100:1)}):null},\"rgb\"],[function(t){var n=l.exec(t)||p.exec(t);if(!n)return null;var e,u,a=g({h:(e=n[1],u=n[2],void 0===u&&(u=\"deg\"),Number(e)*(r[u]||1)),s:Number(n[3]),l:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return f(a)},\"hsl\"]],object:[[function(r){var n=r.r,e=r.g,u=r.b,o=r.a,i=void 0===o?1:o;return t(n)&&t(e)&&t(u)?a({r:Number(n),g:Number(e),b:Number(u),a:Number(i)}):null},\"rgb\"],[function(r){var n=r.h,e=r.s,u=r.l,a=r.a,o=void 0===a?1:a;if(!t(n)||!t(e)||!t(u))return null;var i=g({h:Number(n),s:Number(e),l:Number(u),a:Number(o)});return f(i)},\"hsl\"],[function(r){var n=r.h,a=r.s,o=r.v,i=r.a,s=void 0===i?1:i;if(!t(n)||!t(a)||!t(o))return null;var h=function(r){return{h:u(r.h),s:e(r.s,0,100),v:e(r.v,0,100),a:e(r.a)}}({h:Number(n),s:Number(a),v:Number(o),a:Number(s)});return b(h)},\"hsv\"]]},N=function(r,t){for(var n=0;n<t.length;n++){var e=t[n][0](r);if(e)return[e,t[n][1]]}return[null,void 0]},x=function(r){return\"string\"==typeof r?N(r.trim(),y.string):\"object\"==typeof r&&null!==r?N(r,y.object):[null,void 0]},I=function(r){return x(r)[1]},M=function(r,t){var n=c(r);return{h:n.h,s:e(n.s+100*t,0,100),l:n.l,a:n.a}},H=function(r){return(299*r.r+587*r.g+114*r.b)/1e3/255},$=function(r,t){var n=c(r);return{h:n.h,s:n.s,l:e(n.l+100*t,0,100),a:n.a}},j=function(){function r(r){this.parsed=x(r)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return r.prototype.isValid=function(){return null!==this.parsed},r.prototype.brightness=function(){return n(H(this.rgba),2)},r.prototype.isDark=function(){return H(this.rgba)<.5},r.prototype.isLight=function(){return H(this.rgba)>=.5},r.prototype.toHex=function(){return r=o(this.rgba),t=r.r,e=r.g,u=r.b,i=(a=r.a)<1?s(n(255*a)):\"\",\"#\"+s(t)+s(e)+s(u)+i;var r,t,e,u,a,i},r.prototype.toRgb=function(){return o(this.rgba)},r.prototype.toRgbString=function(){return r=o(this.rgba),t=r.r,n=r.g,e=r.b,(u=r.a)<1?\"rgba(\"+t+\", \"+n+\", \"+e+\", \"+u+\")\":\"rgb(\"+t+\", \"+n+\", \"+e+\")\";var r,t,n,e,u},r.prototype.toHsl=function(){return d(c(this.rgba))},r.prototype.toHslString=function(){return r=d(c(this.rgba)),t=r.h,n=r.s,e=r.l,(u=r.a)<1?\"hsla(\"+t+\", \"+n+\"%, \"+e+\"%, \"+u+\")\":\"hsl(\"+t+\", \"+n+\"%, \"+e+\"%)\";var r,t,n,e,u},r.prototype.toHsv=function(){return r=h(this.rgba),{h:n(r.h),s:n(r.s),v:n(r.v),a:n(r.a,3)};var r},r.prototype.invert=function(){return w({r:255-(r=this.rgba).r,g:255-r.g,b:255-r.b,a:r.a});var r},r.prototype.saturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,r))},r.prototype.desaturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,-r))},r.prototype.grayscale=function(){return w(M(this.rgba,-1))},r.prototype.lighten=function(r){return void 0===r&&(r=.1),w($(this.rgba,r))},r.prototype.darken=function(r){return void 0===r&&(r=.1),w($(this.rgba,-r))},r.prototype.rotate=function(r){return void 0===r&&(r=15),this.hue(this.hue()+r)},r.prototype.alpha=function(r){return\"number\"==typeof r?w({r:(t=this.rgba).r,g:t.g,b:t.b,a:r}):n(this.rgba.a,3);var t},r.prototype.hue=function(r){var t=c(this.rgba);return\"number\"==typeof r?w({h:r,s:t.s,l:t.l,a:t.a}):n(t.h)},r.prototype.isEqual=function(r){return this.toHex()===w(r).toHex()},r}(),w=function(r){return r instanceof j?r:new j(r)},S=[],k=function(r){r.forEach(function(r){S.indexOf(r)<0&&(r(j,y),S.push(r))})},E=function(){return new j({r:255*Math.random(),g:255*Math.random(),b:255*Math.random()})};export{j as Colord,w as colord,k as extend,I as getFormat,E as random};\n","export default function(e,f){var a={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},r={};for(var d in a)r[a[d]]=d;var l={};e.prototype.toName=function(f){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return\"transparent\";var d,i,n=r[this.toHex()];if(n)return n;if(null==f?void 0:f.closest){var o=this.toRgb(),t=1/0,b=\"black\";if(!l.length)for(var c in a)l[c]=new e(a[c]).toRgb();for(var g in a){var u=(d=o,i=l[g],Math.pow(d.r-i.r,2)+Math.pow(d.g-i.g,2)+Math.pow(d.b-i.b,2));u<t&&(t=u,b=g)}return b}};f.string.push([function(f){var r=f.toLowerCase(),d=\"transparent\"===r?\"#0000\":a[r];return d?new e(d).toRgb():null},\"name\"])}\n","var a=function(a){return\"string\"==typeof a?a.length>0:\"number\"==typeof a},t=function(a,t,o){return void 0===t&&(t=0),void 0===o&&(o=Math.pow(10,t)),Math.round(o*a)/o+0},o=function(a,t,o){return void 0===t&&(t=0),void 0===o&&(o=1),a>o?o:a>t?a:t},r=function(a){var t=a/255;return t<.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)},h=function(a){return 255*(a>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a)},n=96.422,p=100,M=82.521,u=function(a){var t,r,n={x:.9555766*(t=a).x+-.0230393*t.y+.0631636*t.z,y:-.0282895*t.x+1.0099416*t.y+.0210077*t.z,z:.0122982*t.x+-.020483*t.y+1.3299098*t.z};return r={r:h(.032404542*n.x-.015371385*n.y-.004985314*n.z),g:h(-.00969266*n.x+.018760108*n.y+41556e-8*n.z),b:h(556434e-9*n.x-.002040259*n.y+.010572252*n.z),a:a.a},{r:o(r.r,0,255),g:o(r.g,0,255),b:o(r.b,0,255),a:o(r.a)}},e=function(a){var t=r(a.r),h=r(a.g),u=r(a.b);return function(a){return{x:o(a.x,0,n),y:o(a.y,0,p),z:o(a.z,0,M),a:o(a.a)}}(function(a){return{x:1.0478112*a.x+.0228866*a.y+-.050127*a.z,y:.0295424*a.x+.9904844*a.y+-.0170491*a.z,z:-.0092345*a.x+.0150436*a.y+.7521316*a.z,a:a.a}}({x:100*(.4124564*t+.3575761*h+.1804375*u),y:100*(.2126729*t+.7151522*h+.072175*u),z:100*(.0193339*t+.119192*h+.9503041*u),a:a.a}))},w=216/24389,b=24389/27,i=function(t){var r=t.l,h=t.a,n=t.b,p=t.alpha,M=void 0===p?1:p;if(!a(r)||!a(h)||!a(n))return null;var u=function(a){return{l:o(a.l,0,400),a:a.a,b:a.b,alpha:o(a.alpha)}}({l:Number(r),a:Number(h),b:Number(n),alpha:Number(M)});return l(u)},l=function(a){var t=(a.l+16)/116,o=a.a/500+t,r=t-a.b/200;return u({x:(Math.pow(o,3)>w?Math.pow(o,3):(116*o-16)/b)*n,y:(a.l>8?Math.pow((a.l+16)/116,3):a.l/b)*p,z:(Math.pow(r,3)>w?Math.pow(r,3):(116*r-16)/b)*M,a:a.alpha})};export default function(a,r){a.prototype.toLab=function(){return o=e(this.rgba),h=o.y/p,u=o.z/M,r=(r=o.x/n)>w?Math.cbrt(r):(b*r+16)/116,a={l:116*(h=h>w?Math.cbrt(h):(b*h+16)/116)-16,a:500*(r-h),b:200*(h-(u=u>w?Math.cbrt(u):(b*u+16)/116)),alpha:o.a},{l:t(a.l,2),a:t(a.a,2),b:t(a.b,2),alpha:t(a.alpha,3)};var a,o,r,h,u},a.prototype.delta=function(r){void 0===r&&(r=\"#FFF\");var h=r instanceof a?r:new a(r),n=function(a,t){var o=a.l,r=a.a,h=a.b,n=t.l,p=t.a,M=t.b,u=180/Math.PI,e=Math.PI/180,w=Math.pow(Math.pow(r,2)+Math.pow(h,2),.5),b=Math.pow(Math.pow(p,2)+Math.pow(M,2),.5),i=(o+n)/2,l=Math.pow((w+b)/2,7),c=.5*(1-Math.pow(l/(l+Math.pow(25,7)),.5)),f=r*(1+c),y=p*(1+c),v=Math.pow(Math.pow(f,2)+Math.pow(h,2),.5),x=Math.pow(Math.pow(y,2)+Math.pow(M,2),.5),z=(v+x)/2,s=0===f&&0===h?0:Math.atan2(h,f)*u,d=0===y&&0===M?0:Math.atan2(M,y)*u;s<0&&(s+=360),d<0&&(d+=360);var g=d-s,m=Math.abs(d-s);m>180&&d<=s?g+=360:m>180&&d>s&&(g-=360);var N=s+d;m<=180?N/=2:N=(s+d<360?N+360:N-360)/2;var F=1-.17*Math.cos(e*(N-30))+.24*Math.cos(2*e*N)+.32*Math.cos(e*(3*N+6))-.2*Math.cos(e*(4*N-63)),L=n-o,I=x-v,P=2*Math.sin(e*g/2)*Math.pow(v*x,.5),j=1+.015*Math.pow(i-50,2)/Math.pow(20+Math.pow(i-50,2),.5),k=1+.045*z,q=1+.015*z*F,A=30*Math.exp(-1*Math.pow((N-275)/25,2)),B=-2*Math.pow(l/(l+Math.pow(25,7)),.5)*Math.sin(2*e*A);return Math.pow(Math.pow(L/1/j,2)+Math.pow(I/1/k,2)+Math.pow(P/1/q,2)+B*I*P/(1*k*1*q),.5)}(this.toLab(),h.toLab())/100;return o(t(n,3))},r.object.push([i,\"lab\"])}\n","// Wrapper elements.\nexport const SVG = 'svg';\nexport const DEFS = 'defs';\nexport const G = 'g';\n\nexport const TEXT = 'text';\n\n// Geometry elements.\nexport const LINE = 'line';\nexport const RECT = 'rect';\nexport const POLYGON = 'polygon';\nexport const POLYLINE = 'polyline';\nexport const PATH = 'path';\nexport const CIRCLE = 'circle';\nexport const ELLIPSE = 'ellipse';\n\n// https://css-tricks.com/svg-properties-and-css/\nexport const SVG_STYLE_FILL = 'fill';\nexport const SVG_STYLE_STROKE_WIDTH = 'stroke-width';\nexport const SVG_STYLE_STROKE_COLOR = 'stroke';\nexport const SVG_STYLE_COLOR = 'color';\nexport const SVG_STYLE_OPACITY = 'opacity';\nexport const SVG_STYLE_MASK = 'mask';\nexport const SVG_STYLE_CLIP_PATH = 'clip-path';\nexport const SVG_STYLE_STROKE_DASH_ARRAY = 'stroke-dasharray';","'use strict';\n\n\nvar paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 };\n\nvar SPECIAL_SPACES = [\n  0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006,\n  0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF\n];\n\nfunction isSpace(ch) {\n  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029) || // Line terminators\n    // White spaces\n    (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n    (ch >= 0x1680 && SPECIAL_SPACES.indexOf(ch) >= 0);\n}\n\nfunction isCommand(code) {\n  /*eslint-disable no-bitwise*/\n  switch (code | 0x20) {\n    case 0x6D/* m */:\n    case 0x7A/* z */:\n    case 0x6C/* l */:\n    case 0x68/* h */:\n    case 0x76/* v */:\n    case 0x63/* c */:\n    case 0x73/* s */:\n    case 0x71/* q */:\n    case 0x74/* t */:\n    case 0x61/* a */:\n    case 0x72/* r */:\n      return true;\n  }\n  return false;\n}\n\nfunction isArc(code) {\n  return (code | 0x20) === 0x61;\n}\n\nfunction isDigit(code) {\n  return (code >= 48 && code <= 57);   // 0..9\n}\n\nfunction isDigitStart(code) {\n  return (code >= 48 && code <= 57) || /* 0..9 */\n          code === 0x2B || /* + */\n          code === 0x2D || /* - */\n          code === 0x2E;   /* . */\n}\n\n\nfunction State(path) {\n  this.index  = 0;\n  this.path   = path;\n  this.max    = path.length;\n  this.result = [];\n  this.param  = 0.0;\n  this.err    = '';\n  this.segmentStart = 0;\n  this.data   = [];\n}\n\nfunction skipSpaces(state) {\n  while (state.index < state.max && isSpace(state.path.charCodeAt(state.index))) {\n    state.index++;\n  }\n}\n\n\nfunction scanFlag(state) {\n  var ch = state.path.charCodeAt(state.index);\n\n  if (ch === 0x30/* 0 */) {\n    state.param = 0;\n    state.index++;\n    return;\n  }\n\n  if (ch === 0x31/* 1 */) {\n    state.param = 1;\n    state.index++;\n    return;\n  }\n\n  state.err = 'SvgPath: arc flag can be 0 or 1 only (at pos ' + state.index + ')';\n}\n\n\nfunction scanParam(state) {\n  var start = state.index,\n      index = start,\n      max = state.max,\n      zeroFirst = false,\n      hasCeiling = false,\n      hasDecimal = false,\n      hasDot = false,\n      ch;\n\n  if (index >= max) {\n    state.err = 'SvgPath: missed param (at pos ' + index + ')';\n    return;\n  }\n  ch = state.path.charCodeAt(index);\n\n  if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n    index++;\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  // This logic is shamelessly borrowed from Esprima\n  // https://github.com/ariya/esprimas\n  //\n  if (!isDigit(ch) && ch !== 0x2E/* . */) {\n    state.err = 'SvgPath: param should start with 0..9 or `.` (at pos ' + index + ')';\n    return;\n  }\n\n  if (ch !== 0x2E/* . */) {\n    zeroFirst = (ch === 0x30/* 0 */);\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n\n    if (zeroFirst && index < max) {\n      // decimal number starts with '0' such as '09' is illegal.\n      if (ch && isDigit(ch)) {\n        state.err = 'SvgPath: numbers started with `0` such as `09` are illegal (at pos ' + start + ')';\n        return;\n      }\n    }\n\n    while (index < max && isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasCeiling = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x2E/* . */) {\n    hasDot = true;\n    index++;\n    while (isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasDecimal = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x65/* e */ || ch === 0x45/* E */) {\n    if (hasDot && !hasCeiling && !hasDecimal) {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      index++;\n    }\n    if (index < max && isDigit(state.path.charCodeAt(index))) {\n      while (index < max && isDigit(state.path.charCodeAt(index))) {\n        index++;\n      }\n    } else {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n  }\n\n  state.index = index;\n  state.param = parseFloat(state.path.slice(start, index)) + 0.0;\n}\n\n\nfunction finalizeSegment(state) {\n  var cmd, cmdLC;\n\n  // Process duplicated commands (without comand name)\n\n  // This logic is shamelessly borrowed from Raphael\n  // https://github.com/DmitryBaranovskiy/raphael/\n  //\n  cmd   = state.path[state.segmentStart];\n  cmdLC = cmd.toLowerCase();\n\n  var params = state.data;\n\n  if (cmdLC === 'm' && params.length > 2) {\n    state.result.push([ cmd, params[0], params[1] ]);\n    params = params.slice(2);\n    cmdLC = 'l';\n    cmd = (cmd === 'm') ? 'l' : 'L';\n  }\n\n  if (cmdLC === 'r') {\n    state.result.push([ cmd ].concat(params));\n  } else {\n\n    while (params.length >= paramCounts[cmdLC]) {\n      state.result.push([ cmd ].concat(params.splice(0, paramCounts[cmdLC])));\n      if (!paramCounts[cmdLC]) {\n        break;\n      }\n    }\n  }\n}\n\n\nfunction scanSegment(state) {\n  var max = state.max,\n      cmdCode, is_arc, comma_found, need_params, i;\n\n  state.segmentStart = state.index;\n  cmdCode = state.path.charCodeAt(state.index);\n  is_arc = isArc(cmdCode);\n\n  if (!isCommand(cmdCode)) {\n    state.err = 'SvgPath: bad command ' + state.path[state.index] + ' (at pos ' + state.index + ')';\n    return;\n  }\n\n  need_params = paramCounts[state.path[state.index].toLowerCase()];\n\n  state.index++;\n  skipSpaces(state);\n\n  state.data = [];\n\n  if (!need_params) {\n    // Z\n    finalizeSegment(state);\n    return;\n  }\n\n  comma_found = false;\n\n  for (;;) {\n    for (i = need_params; i > 0; i--) {\n      if (is_arc && (i === 3 || i === 4)) scanFlag(state);\n      else scanParam(state);\n\n      if (state.err.length) {\n        finalizeSegment(state);\n        return;\n      }\n      state.data.push(state.param);\n\n      skipSpaces(state);\n      comma_found = false;\n\n      if (state.index < max && state.path.charCodeAt(state.index) === 0x2C/* , */) {\n        state.index++;\n        skipSpaces(state);\n        comma_found = true;\n      }\n    }\n\n    // after ',' param is mandatory\n    if (comma_found) {\n      continue;\n    }\n\n    if (state.index >= state.max) {\n      break;\n    }\n\n    // Stop on next segment\n    if (!isDigitStart(state.path.charCodeAt(state.index))) {\n      break;\n    }\n  }\n\n  finalizeSegment(state);\n}\n\n\n/* Returns array of segments:\n *\n * [\n *   [ command, coord1, coord2, ... ]\n * ]\n */\nmodule.exports = function pathParse(svgPath) {\n  var state = new State(svgPath);\n  var max = state.max;\n\n  skipSpaces(state);\n\n  while (state.index < max && !state.err.length) {\n    scanSegment(state);\n  }\n\n  if (state.result.length) {\n    if ('mM'.indexOf(state.result[0][0]) < 0) {\n      state.err = 'SvgPath: string should start with `M` or `m`';\n      state.result = [];\n    } else {\n      state.result[0][0] = 'M';\n    }\n  }\n\n  return {\n    err: state.err,\n    segments: state.result\n  };\n};\n","'use strict';\n\n// combine 2 matrixes\n// m1, m2 - [a, b, c, d, e, g]\n//\nfunction combine(m1, m2) {\n  return [\n    m1[0] * m2[0] + m1[2] * m2[1],\n    m1[1] * m2[0] + m1[3] * m2[1],\n    m1[0] * m2[2] + m1[2] * m2[3],\n    m1[1] * m2[2] + m1[3] * m2[3],\n    m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n    m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n}\n\n\nfunction Matrix() {\n  if (!(this instanceof Matrix)) { return new Matrix(); }\n  this.queue = [];   // list of matrixes to apply\n  this.cache = null; // combined matrix cache\n}\n\n\nMatrix.prototype.matrix = function (m) {\n  if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0) {\n    return this;\n  }\n  this.cache = null;\n  this.queue.push(m);\n  return this;\n};\n\n\nMatrix.prototype.translate = function (tx, ty) {\n  if (tx !== 0 || ty !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, 0, 1, tx, ty ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.scale = function (sx, sy) {\n  if (sx !== 1 || sy !== 1) {\n    this.cache = null;\n    this.queue.push([ sx, 0, 0, sy, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.rotate = function (angle, rx, ry) {\n  var rad, cos, sin;\n\n  if (angle !== 0) {\n    this.translate(rx, ry);\n\n    rad = angle * Math.PI / 180;\n    cos = Math.cos(rad);\n    sin = Math.sin(rad);\n\n    this.queue.push([ cos, sin, -sin, cos, 0, 0 ]);\n    this.cache = null;\n\n    this.translate(-rx, -ry);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewX = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewY = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\n// Flatten queue\n//\nMatrix.prototype.toArray = function () {\n  if (this.cache) {\n    return this.cache;\n  }\n\n  if (!this.queue.length) {\n    this.cache = [ 1, 0, 0, 1, 0, 0 ];\n    return this.cache;\n  }\n\n  this.cache = this.queue[0];\n\n  if (this.queue.length === 1) {\n    return this.cache;\n  }\n\n  for (var i = 1; i < this.queue.length; i++) {\n    this.cache = combine(this.cache, this.queue[i]);\n  }\n\n  return this.cache;\n};\n\n\n// Apply list of matrixes to (x,y) point.\n// If `isRelative` set, `translate` component of matrix will be skipped\n//\nMatrix.prototype.calc = function (x, y, isRelative) {\n  var m;\n\n  // Don't change point on empty transforms queue\n  if (!this.queue.length) { return [ x, y ]; }\n\n  // Calculate final matrix, if not exists\n  //\n  // NB. if you deside to apply transforms to point one-by-one,\n  // they should be taken in reverse order\n\n  if (!this.cache) {\n    this.cache = this.toArray();\n  }\n\n  m = this.cache;\n\n  // Apply matrix to point\n  return [\n    x * m[0] + y * m[2] + (isRelative ? 0 : m[4]),\n    x * m[1] + y * m[3] + (isRelative ? 0 : m[5])\n  ];\n};\n\n\nmodule.exports = Matrix;\n","'use strict';\n\n\nvar Matrix = require('./matrix');\n\nvar operations = {\n  matrix: true,\n  scale: true,\n  rotate: true,\n  translate: true,\n  skewX: true,\n  skewY: true\n};\n\nvar CMD_SPLIT_RE    = /\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/;\nvar PARAMS_SPLIT_RE = /[\\s,]+/;\n\n\nmodule.exports = function transformParse(transformString) {\n  var matrix = new Matrix();\n  var cmd, params;\n\n  // Split value into ['', 'translate', '10 50', '', 'scale', '2', '', 'rotate',  '-45', '']\n  transformString.split(CMD_SPLIT_RE).forEach(function (item) {\n\n    // Skip empty elements\n    if (!item.length) { return; }\n\n    // remember operation\n    if (typeof operations[item] !== 'undefined') {\n      cmd = item;\n      return;\n    }\n\n    // extract params & att operation to matrix\n    params = item.split(PARAMS_SPLIT_RE).map(function (i) {\n      return +i || 0;\n    });\n\n    // If params count is not correct - ignore command\n    switch (cmd) {\n      case 'matrix':\n        if (params.length === 6) {\n          matrix.matrix(params);\n        }\n        return;\n\n      case 'scale':\n        if (params.length === 1) {\n          matrix.scale(params[0], params[0]);\n        } else if (params.length === 2) {\n          matrix.scale(params[0], params[1]);\n        }\n        return;\n\n      case 'rotate':\n        if (params.length === 1) {\n          matrix.rotate(params[0], 0, 0);\n        } else if (params.length === 3) {\n          matrix.rotate(params[0], params[1], params[2]);\n        }\n        return;\n\n      case 'translate':\n        if (params.length === 1) {\n          matrix.translate(params[0], 0);\n        } else if (params.length === 2) {\n          matrix.translate(params[0], params[1]);\n        }\n        return;\n\n      case 'skewX':\n        if (params.length === 1) {\n          matrix.skewX(params[0]);\n        }\n        return;\n\n      case 'skewY':\n        if (params.length === 1) {\n          matrix.skewY(params[0]);\n        }\n        return;\n    }\n  });\n\n  return matrix;\n};\n","// Convert an arc to a sequence of cubic bÃ©zier curves\n//\n'use strict';\n\n\nvar TAU = Math.PI * 2;\n\n\n/* eslint-disable space-infix-ops */\n\n// Calculate an angle between two unit vectors\n//\n// Since we measure angle between radii of circular arcs,\n// we can use simplified math (without length normalization)\n//\nfunction unit_vector_angle(ux, uy, vx, vy) {\n  var sign = (ux * vy - uy * vx < 0) ? -1 : 1;\n  var dot  = ux * vx + uy * vy;\n\n  // Add this to work with arbitrary vectors:\n  // dot /= Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n\n  // rounding errors, e.g. -1.0000000000000002 can screw up this\n  if (dot >  1.0) { dot =  1.0; }\n  if (dot < -1.0) { dot = -1.0; }\n\n  return sign * Math.acos(dot);\n}\n\n\n// Convert from endpoint to center parameterization,\n// see http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n//\n// Return [cx, cy, theta1, delta_theta]\n//\nfunction get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_phi, cos_phi) {\n  // Step 1.\n  //\n  // Moving an ellipse so origin will be the middlepoint between our two\n  // points. After that, rotate it to line up ellipse axes with coordinate\n  // axes.\n  //\n  var x1p =  cos_phi*(x1-x2)/2 + sin_phi*(y1-y2)/2;\n  var y1p = -sin_phi*(x1-x2)/2 + cos_phi*(y1-y2)/2;\n\n  var rx_sq  =  rx * rx;\n  var ry_sq  =  ry * ry;\n  var x1p_sq = x1p * x1p;\n  var y1p_sq = y1p * y1p;\n\n  // Step 2.\n  //\n  // Compute coordinates of the centre of this ellipse (cx', cy')\n  // in the new coordinate system.\n  //\n  var radicant = (rx_sq * ry_sq) - (rx_sq * y1p_sq) - (ry_sq * x1p_sq);\n\n  if (radicant < 0) {\n    // due to rounding errors it might be e.g. -1.3877787807814457e-17\n    radicant = 0;\n  }\n\n  radicant /=   (rx_sq * y1p_sq) + (ry_sq * x1p_sq);\n  radicant = Math.sqrt(radicant) * (fa === fs ? -1 : 1);\n\n  var cxp = radicant *  rx/ry * y1p;\n  var cyp = radicant * -ry/rx * x1p;\n\n  // Step 3.\n  //\n  // Transform back to get centre coordinates (cx, cy) in the original\n  // coordinate system.\n  //\n  var cx = cos_phi*cxp - sin_phi*cyp + (x1+x2)/2;\n  var cy = sin_phi*cxp + cos_phi*cyp + (y1+y2)/2;\n\n  // Step 4.\n  //\n  // Compute angles (theta1, delta_theta).\n  //\n  var v1x =  (x1p - cxp) / rx;\n  var v1y =  (y1p - cyp) / ry;\n  var v2x = (-x1p - cxp) / rx;\n  var v2y = (-y1p - cyp) / ry;\n\n  var theta1 = unit_vector_angle(1, 0, v1x, v1y);\n  var delta_theta = unit_vector_angle(v1x, v1y, v2x, v2y);\n\n  if (fs === 0 && delta_theta > 0) {\n    delta_theta -= TAU;\n  }\n  if (fs === 1 && delta_theta < 0) {\n    delta_theta += TAU;\n  }\n\n  return [ cx, cy, theta1, delta_theta ];\n}\n\n//\n// Approximate one unit arc segment with bÃ©zier curves,\n// see http://math.stackexchange.com/questions/873224\n//\nfunction approximate_unit_arc(theta1, delta_theta) {\n  var alpha = 4/3 * Math.tan(delta_theta/4);\n\n  var x1 = Math.cos(theta1);\n  var y1 = Math.sin(theta1);\n  var x2 = Math.cos(theta1 + delta_theta);\n  var y2 = Math.sin(theta1 + delta_theta);\n\n  return [ x1, y1, x1 - y1*alpha, y1 + x1*alpha, x2 + y2*alpha, y2 - x2*alpha, x2, y2 ];\n}\n\nmodule.exports = function a2c(x1, y1, x2, y2, fa, fs, rx, ry, phi) {\n  var sin_phi = Math.sin(phi * TAU / 360);\n  var cos_phi = Math.cos(phi * TAU / 360);\n\n  // Make sure radii are valid\n  //\n  var x1p =  cos_phi*(x1-x2)/2 + sin_phi*(y1-y2)/2;\n  var y1p = -sin_phi*(x1-x2)/2 + cos_phi*(y1-y2)/2;\n\n  if (x1p === 0 && y1p === 0) {\n    // we're asked to draw line to itself\n    return [];\n  }\n\n  if (rx === 0 || ry === 0) {\n    // one of the radii is zero\n    return [];\n  }\n\n\n  // Compensate out-of-range radii\n  //\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = (x1p * x1p) / (rx * rx) + (y1p * y1p) / (ry * ry);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n\n  // Get center parameters (cx, cy, theta1, delta_theta)\n  //\n  var cc = get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_phi, cos_phi);\n\n  var result = [];\n  var theta1 = cc[2];\n  var delta_theta = cc[3];\n\n  // Split an arc to multiple segments, so each segment\n  // will be less than Ï„/4 (= 90Â°)\n  //\n  var segments = Math.max(Math.ceil(Math.abs(delta_theta) / (TAU / 4)), 1);\n  delta_theta /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    result.push(approximate_unit_arc(theta1, delta_theta));\n    theta1 += delta_theta;\n  }\n\n  // We have a bezier approximation of a unit circle,\n  // now need to transform back to the original ellipse\n  //\n  return result.map(function (curve) {\n    for (var i = 0; i < curve.length; i += 2) {\n      var x = curve[i + 0];\n      var y = curve[i + 1];\n\n      // scale\n      x *= rx;\n      y *= ry;\n\n      // rotate\n      var xp = cos_phi*x - sin_phi*y;\n      var yp = sin_phi*x + cos_phi*y;\n\n      // translate\n      curve[i + 0] = xp + cc[0];\n      curve[i + 1] = yp + cc[1];\n    }\n\n    return curve;\n  });\n};\n","'use strict';\n\n/* eslint-disable space-infix-ops */\n\n// The precision used to consider an ellipse as a circle\n//\nvar epsilon = 0.0000000001;\n\n// To convert degree in radians\n//\nvar torad = Math.PI / 180;\n\n// Class constructor :\n//  an ellipse centred at 0 with radii rx,ry and x - axis - angle ax.\n//\nfunction Ellipse(rx, ry, ax) {\n  if (!(this instanceof Ellipse)) { return new Ellipse(rx, ry, ax); }\n  this.rx = rx;\n  this.ry = ry;\n  this.ax = ax;\n}\n\n// Apply a linear transform m to the ellipse\n// m is an array representing a matrix :\n//    -         -\n//   | m[0] m[2] |\n//   | m[1] m[3] |\n//    -         -\n//\nEllipse.prototype.transform = function (m) {\n  // We consider the current ellipse as image of the unit circle\n  // by first scale(rx,ry) and then rotate(ax) ...\n  // So we apply ma =  m x rotate(ax) x scale(rx,ry) to the unit circle.\n  var c = Math.cos(this.ax * torad), s = Math.sin(this.ax * torad);\n  var ma = [\n    this.rx * (m[0]*c + m[2]*s),\n    this.rx * (m[1]*c + m[3]*s),\n    this.ry * (-m[0]*s + m[2]*c),\n    this.ry * (-m[1]*s + m[3]*c)\n  ];\n\n  // ma * transpose(ma) = [ J L ]\n  //                      [ L K ]\n  // L is calculated later (if the image is not a circle)\n  var J = ma[0]*ma[0] + ma[2]*ma[2],\n      K = ma[1]*ma[1] + ma[3]*ma[3];\n\n  // the discriminant of the characteristic polynomial of ma * transpose(ma)\n  var D = ((ma[0]-ma[3])*(ma[0]-ma[3]) + (ma[2]+ma[1])*(ma[2]+ma[1])) *\n          ((ma[0]+ma[3])*(ma[0]+ma[3]) + (ma[2]-ma[1])*(ma[2]-ma[1]));\n\n  // the \"mean eigenvalue\"\n  var JK = (J + K) / 2;\n\n  // check if the image is (almost) a circle\n  if (D < epsilon * JK) {\n    // if it is\n    this.rx = this.ry = Math.sqrt(JK);\n    this.ax = 0;\n    return this;\n  }\n\n  // if it is not a circle\n  var L = ma[0]*ma[1] + ma[2]*ma[3];\n\n  D = Math.sqrt(D);\n\n  // {l1,l2} = the two eigen values of ma * transpose(ma)\n  var l1 = JK + D/2,\n      l2 = JK - D/2;\n  // the x - axis - rotation angle is the argument of the l1 - eigenvector\n  /*eslint-disable indent*/\n  this.ax = (Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon) ?\n    90\n  :\n    Math.atan(Math.abs(L) > Math.abs(l1 - K) ?\n      (l1 - J) / L\n    :\n      L / (l1 - K)\n    ) * 180 / Math.PI;\n  /*eslint-enable indent*/\n\n  // if ax > 0 => rx = sqrt(l1), ry = sqrt(l2), else exchange axes and ax += 90\n  if (this.ax >= 0) {\n    // if ax in [0,90]\n    this.rx = Math.sqrt(l1);\n    this.ry = Math.sqrt(l2);\n  } else {\n    // if ax in ]-90,0[ => exchange axes\n    this.ax += 90;\n    this.rx = Math.sqrt(l2);\n    this.ry = Math.sqrt(l1);\n  }\n\n  return this;\n};\n\n// Check if the ellipse is (almost) degenerate, i.e. rx = 0 or ry = 0\n//\nEllipse.prototype.isDegenerate = function () {\n  return (this.rx < epsilon * this.ry || this.ry < epsilon * this.rx);\n};\n\nmodule.exports = Ellipse;\n","// SVG Path transformations library\n//\n// Usage:\n//\n//    SvgPath('...')\n//      .translate(-150, -100)\n//      .scale(0.5)\n//      .translate(-150, -100)\n//      .toFixed(1)\n//      .toString()\n//\n\n'use strict';\n\n\nvar pathParse      = require('./path_parse');\nvar transformParse = require('./transform_parse');\nvar matrix         = require('./matrix');\nvar a2c            = require('./a2c');\nvar ellipse        = require('./ellipse');\n\n\n// Class constructor\n//\nfunction SvgPath(path) {\n  if (!(this instanceof SvgPath)) { return new SvgPath(path); }\n\n  var pstate = pathParse(path);\n\n  // Array of path segments.\n  // Each segment is array [command, param1, param2, ...]\n  this.segments = pstate.segments;\n\n  // Error message on parse error.\n  this.err      = pstate.err;\n\n  // Transforms stack for lazy evaluation\n  this.__stack    = [];\n}\n\nSvgPath.from = function (src) {\n  if (typeof src === 'string') return new SvgPath(src);\n\n  if (src instanceof SvgPath) {\n    // Create empty object\n    var s = new SvgPath('');\n\n    // Clone properies\n    s.err = src.err;\n    s.segments = src.segments.map(function (sgm) { return sgm.slice(); });\n    s.__stack = src.__stack.map(function (m) {\n      return matrix().matrix(m.toArray());\n    });\n\n    return s;\n  }\n\n  throw new Error('SvgPath.from: invalid param type ' + src);\n};\n\n\nSvgPath.prototype.__matrix = function (m) {\n  var self = this, i;\n\n  // Quick leave for empty matrix\n  if (!m.queue.length) { return; }\n\n  this.iterate(function (s, index, x, y) {\n    var p, result, name, isRelative;\n\n    switch (s[0]) {\n\n      // Process 'assymetric' commands separately\n      case 'v':\n        p      = m.calc(0, s[1], true);\n        result = (p[0] === 0) ? [ 'v', p[1] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'V':\n        p      = m.calc(x, s[1], false);\n        result = (p[0] === m.calc(x, y, false)[0]) ? [ 'V', p[1] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'h':\n        p      = m.calc(s[1], 0, true);\n        result = (p[1] === 0) ? [ 'h', p[0] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'H':\n        p      = m.calc(s[1], y, false);\n        result = (p[1] === m.calc(x, y, false)[1]) ? [ 'H', p[0] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'a':\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n\n        // Drop segment if arc is empty (end point === start point)\n        /*if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          return [];\n        }*/\n\n        // Transform rx, ry and the x-axis-rotation\n        var ma = m.toArray();\n        var e = ellipse(s[1], s[2], s[3]).transform(ma);\n\n        // flip sweep-flag if matrix is not orientation-preserving\n        if (ma[0] * ma[3] - ma[1] * ma[2] < 0) {\n          s[5] = s[5] ? '0' : '1';\n        }\n\n        // Transform end point as usual (without translation for relative notation)\n        p = m.calc(s[6], s[7], s[0] === 'a');\n\n        // Empty arcs can be ignored by renderer, but should not be dropped\n        // to avoid collisions with `S A S` and so on. Replace with empty line.\n        if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n          break;\n        }\n\n        // if the resulting ellipse is (almost) a segment ...\n        if (e.isDegenerate()) {\n          // replace the arc by a line\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n        } else {\n          // if it is a real ellipse\n          // s[0], s[4] and s[5] are not modified\n          result = [ s[0], e.rx, e.ry, e.ax, s[4], s[5], p[0], p[1] ];\n        }\n\n        break;\n\n      case 'm':\n        // Edge case. The very first `m` should be processed as absolute, if happens.\n        // Make sense for coord shift transforms.\n        isRelative = index > 0;\n\n        p = m.calc(s[1], s[2], isRelative);\n        result = [ 'm', p[0], p[1] ];\n        break;\n\n      default:\n        name       = s[0];\n        result     = [ name ];\n        isRelative = (name.toLowerCase() === name);\n\n        // Apply transformations to the segment\n        for (i = 1; i < s.length; i += 2) {\n          p = m.calc(s[i], s[i + 1], isRelative);\n          result.push(p[0], p[1]);\n        }\n    }\n\n    self.segments[index] = result;\n  }, true);\n};\n\n\n// Apply stacked commands\n//\nSvgPath.prototype.__evaluateStack = function () {\n  var m, i;\n\n  if (!this.__stack.length) { return; }\n\n  if (this.__stack.length === 1) {\n    this.__matrix(this.__stack[0]);\n    this.__stack = [];\n    return;\n  }\n\n  m = matrix();\n  i = this.__stack.length;\n\n  while (--i >= 0) {\n    m.matrix(this.__stack[i].toArray());\n  }\n\n  this.__matrix(m);\n  this.__stack = [];\n};\n\n\n// Convert processed SVG Path back to string\n//\nSvgPath.prototype.toString = function () {\n  var result = '', prevCmd = '', cmdSkipped = false;\n\n  this.__evaluateStack();\n\n  for (var i = 0, len = this.segments.length; i < len; i++) {\n    var segment = this.segments[i];\n    var cmd = segment[0];\n\n    // Command not repeating => store\n    if (cmd !== prevCmd || cmd === 'm' || cmd === 'M') {\n      // workaround for FontForge SVG importing bug, keep space between \"z m\".\n      if (cmd === 'm' && prevCmd === 'z') result += ' ';\n      result += cmd;\n\n      cmdSkipped = false;\n    } else {\n      cmdSkipped = true;\n    }\n\n    // Store segment params\n    for (var pos = 1; pos < segment.length; pos++) {\n      var val = segment[pos];\n      // Space can be skipped\n      // 1. After command (always)\n      // 2. For negative value (with '-' at start)\n      if (pos === 1) {\n        if (cmdSkipped && val >= 0) result += ' ';\n      } else if (val >= 0) result += ' ';\n\n      result += val;\n    }\n\n    prevCmd = cmd;\n  }\n\n  return result;\n};\n\n\n// Translate path to (x [, y])\n//\nSvgPath.prototype.translate = function (x, y) {\n  this.__stack.push(matrix().translate(x, y || 0));\n  return this;\n};\n\n\n// Scale path to (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.scale = function (sx, sy) {\n  this.__stack.push(matrix().scale(sx, (!sy && (sy !== 0)) ? sx : sy));\n  return this;\n};\n\n\n// Rotate path around point (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.rotate = function (angle, rx, ry) {\n  this.__stack.push(matrix().rotate(angle, rx || 0, ry || 0));\n  return this;\n};\n\n\n// Skew path along the X axis by `degrees` angle\n//\nSvgPath.prototype.skewX = function (degrees) {\n  this.__stack.push(matrix().skewX(degrees));\n  return this;\n};\n\n\n// Skew path along the Y axis by `degrees` angle\n//\nSvgPath.prototype.skewY = function (degrees) {\n  this.__stack.push(matrix().skewY(degrees));\n  return this;\n};\n\n\n// Apply matrix transform (array of 6 elements)\n//\nSvgPath.prototype.matrix = function (m) {\n  this.__stack.push(matrix().matrix(m));\n  return this;\n};\n\n\n// Transform path according to \"transform\" attr of SVG spec\n//\nSvgPath.prototype.transform = function (transformString) {\n  if (!transformString.trim()) {\n    return this;\n  }\n  this.__stack.push(transformParse(transformString));\n  return this;\n};\n\n\n// Round coords with given decimal precition.\n// 0 by default (to integers)\n//\nSvgPath.prototype.round = function (d) {\n  var contourStartDeltaX = 0, contourStartDeltaY = 0, deltaX = 0, deltaY = 0, l;\n\n  d = d || 0;\n\n  this.__evaluateStack();\n\n  this.segments.forEach(function (s) {\n    var isRelative = (s[0].toLowerCase() === s[0]);\n\n    switch (s[0]) {\n      case 'H':\n      case 'h':\n        if (isRelative) { s[1] += deltaX; }\n        deltaX = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'V':\n      case 'v':\n        if (isRelative) { s[1] += deltaY; }\n        deltaY = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'Z':\n      case 'z':\n        deltaX = contourStartDeltaX;\n        deltaY = contourStartDeltaY;\n        return;\n\n      case 'M':\n      case 'm':\n        if (isRelative) {\n          s[1] += deltaX;\n          s[2] += deltaY;\n        }\n\n        deltaX = s[1] - s[1].toFixed(d);\n        deltaY = s[2] - s[2].toFixed(d);\n\n        contourStartDeltaX = deltaX;\n        contourStartDeltaY = deltaY;\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        return;\n\n      case 'A':\n      case 'a':\n        // [cmd, rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        if (isRelative) {\n          s[6] += deltaX;\n          s[7] += deltaY;\n        }\n\n        deltaX = s[6] - s[6].toFixed(d);\n        deltaY = s[7] - s[7].toFixed(d);\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        s[3] = +s[3].toFixed(d + 2); // better precision for rotation\n        s[6] = +s[6].toFixed(d);\n        s[7] = +s[7].toFixed(d);\n        return;\n\n      default:\n        // a c l q s t\n        l = s.length;\n\n        if (isRelative) {\n          s[l - 2] += deltaX;\n          s[l - 1] += deltaY;\n        }\n\n        deltaX = s[l - 2] - s[l - 2].toFixed(d);\n        deltaY = s[l - 1] - s[l - 1].toFixed(d);\n\n        s.forEach(function (val, i) {\n          if (!i) { return; }\n          s[i] = +s[i].toFixed(d);\n        });\n        return;\n    }\n  });\n\n  return this;\n};\n\n\n// Apply iterator function to all segments. If function returns result,\n// current segment will be replaced to array of returned segments.\n// If empty array is returned, current regment will be deleted.\n//\nSvgPath.prototype.iterate = function (iterator, keepLazyStack) {\n  var segments = this.segments,\n      replacements = {},\n      needReplace = false,\n      lastX = 0,\n      lastY = 0,\n      countourStartX = 0,\n      countourStartY = 0;\n  var i, j, newSegments;\n\n  if (!keepLazyStack) {\n    this.__evaluateStack();\n  }\n\n  segments.forEach(function (s, index) {\n\n    var res = iterator(s, index, lastX, lastY);\n\n    if (Array.isArray(res)) {\n      replacements[index] = res;\n      needReplace = true;\n    }\n\n    var isRelative = (s[0] === s[0].toLowerCase());\n\n    // calculate absolute X and Y\n    switch (s[0]) {\n      case 'm':\n      case 'M':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        lastY = s[2] + (isRelative ? lastY : 0);\n        countourStartX = lastX;\n        countourStartY = lastY;\n        return;\n\n      case 'h':\n      case 'H':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        return;\n\n      case 'v':\n      case 'V':\n        lastY = s[1] + (isRelative ? lastY : 0);\n        return;\n\n      case 'z':\n      case 'Z':\n        // That make sence for multiple contours\n        lastX = countourStartX;\n        lastY = countourStartY;\n        return;\n\n      default:\n        lastX = s[s.length - 2] + (isRelative ? lastX : 0);\n        lastY = s[s.length - 1] + (isRelative ? lastY : 0);\n    }\n  });\n\n  // Replace segments if iterator return results\n\n  if (!needReplace) { return this; }\n\n  newSegments = [];\n\n  for (i = 0; i < segments.length; i++) {\n    if (typeof replacements[i] !== 'undefined') {\n      for (j = 0; j < replacements[i].length; j++) {\n        newSegments.push(replacements[i][j]);\n      }\n    } else {\n      newSegments.push(segments[i]);\n    }\n  }\n\n  this.segments = newSegments;\n\n  return this;\n};\n\n\n// Converts segments from relative to absolute\n//\nSvgPath.prototype.abs = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameUC = name.toUpperCase(),\n        i;\n\n    // Skip absolute commands\n    if (name === nameUC) { return; }\n\n    s[0] = nameUC;\n\n    switch (name) {\n      case 'v':\n        // v has shifted coords parity\n        s[1] += y;\n        return;\n\n      case 'a':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] += x;\n        s[7] += y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] += i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts segments from absolute to relative\n//\nSvgPath.prototype.rel = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameLC = name.toLowerCase(),\n        i;\n\n    // Skip relative commands\n    if (name === nameLC) { return; }\n\n    // Don't touch the first M to avoid potential confusions.\n    if (index === 0 && name === 'M') { return; }\n\n    s[0] = nameLC;\n\n    switch (name) {\n      case 'V':\n        // V has shifted coords parity\n        s[1] -= y;\n        return;\n\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] -= x;\n        s[7] -= y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] -= i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts arcs to cubic bÃ©zier curves\n//\nSvgPath.prototype.unarc = function () {\n  this.iterate(function (s, index, x, y) {\n    var new_segments, nextX, nextY, result = [], name = s[0];\n\n    // Skip anything except arcs\n    if (name !== 'A' && name !== 'a') { return null; }\n\n    if (name === 'a') {\n      // convert relative arc coordinates to absolute\n      nextX = x + s[6];\n      nextY = y + s[7];\n    } else {\n      nextX = s[6];\n      nextY = s[7];\n    }\n\n    new_segments = a2c(x, y, nextX, nextY, s[4], s[5], s[1], s[2], s[3]);\n\n    // Degenerated arcs can be ignored by renderer, but should not be dropped\n    // to avoid collisions with `S A S` and so on. Replace with empty line.\n    if (new_segments.length === 0) {\n      return [ [ s[0] === 'a' ? 'l' : 'L', s[6], s[7] ] ];\n    }\n\n    new_segments.forEach(function (s) {\n      result.push([ 'C', s[2], s[3], s[4], s[5], s[6], s[7] ]);\n    });\n\n    return result;\n  });\n\n  return this;\n};\n\n\n// Converts smooth curves (with missed control point) to generic curves\n//\nSvgPath.prototype.unshort = function () {\n  var segments = this.segments;\n  var prevControlX, prevControlY, prevSegment;\n  var curControlX, curControlY;\n\n  // TODO: add lazy evaluation flag when relative commands supported\n\n  this.iterate(function (s, idx, x, y) {\n    var name = s[0], nameUC = name.toUpperCase(), isRelative;\n\n    // First command MUST be M|m, it's safe to skip.\n    // Protect from access to [-1] for sure.\n    if (!idx) { return; }\n\n    if (nameUC === 'T') { // quadratic curve\n      isRelative = (name === 't');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'Q') {\n        prevControlX = prevSegment[1] - x;\n        prevControlY = prevSegment[2] - y;\n      } else if (prevSegment[0] === 'q') {\n        prevControlX = prevSegment[1] - prevSegment[3];\n        prevControlY = prevSegment[2] - prevSegment[4];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'q' : 'Q',\n        curControlX, curControlY,\n        s[1], s[2]\n      ];\n\n    } else if (nameUC === 'S') { // cubic curve\n      isRelative = (name === 's');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'C') {\n        prevControlX = prevSegment[3] - x;\n        prevControlY = prevSegment[4] - y;\n      } else if (prevSegment[0] === 'c') {\n        prevControlX = prevSegment[3] - prevSegment[5];\n        prevControlY = prevSegment[4] - prevSegment[6];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'c' : 'C',\n        curControlX, curControlY,\n        s[1], s[2], s[3], s[4]\n      ];\n    }\n  });\n\n  return this;\n};\n\n\nmodule.exports = SvgPath;\n","'use strict';\n\nmodule.exports = require('./lib/svgpath');\n","import { POLYGON, POLYLINE } from './constants';\nimport { applyTransform } from './transforms';\nimport {\n    CircleProperties,\n    EllipseProperties,\n    LineProperties,\n    PathParser,\n    PathProperties,\n    PolygonProperties,\n    PolylineProperties,\n    RectProperties,\n    Transform,\n} from './types';\nimport { removeWhitespacePadding } from './utils';\nimport svgpath from 'svgpath';\nimport { isNonNegativeNumber, isNumber, isString } from '@amandaghassaei/type-checks';\n\n/*\nExport any geometry object as path in Abs coordinates with only L, H, V, B, and C types.\n*/\n\nconst temp = [0, 0] as [number, number];\n\nexport function convertLineToPath(\n    properties: LineProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    let { x1, x2, y1, y2 } = properties;\n    // x1, x2, y1, y2 default to 0.\n    /* c8 ignore next if */\n    if (x1 === undefined) x1 = 0;\n    if (x2 === undefined) x2 = 0;\n    if (y1 === undefined) y1 = 0;\n    if (y2 === undefined) y2 = 0;\n    if (!isNumber(x1) || !isNumber(x2) || !isNumber(y1) || !isNumber(y2)) {\n        parsingErrors.push(`Invalid <line> properties: ${JSON.stringify({ x1, y1, x2, y2 })}.`);\n        return;\n    }\n    if (transform) {\n        temp[0] = x1;\n        temp[1] = y1;\n        [x1, y1] = applyTransform(temp, transform);\n        temp[0] = x2;\n        temp[1] = y2;\n        [x2, y2] = applyTransform(temp, transform);\n    }\n    return `M${x1},${y1} L${x2},${y2}`;\n}\n\nexport function convertRectToPath(\n    properties: RectProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    let { x, y } = properties;\n    // x and y default to 0.\n    if (x === undefined) x = 0;\n    if (y === undefined) y = 0;\n    const { width, height } = properties;\n    if (\n        !isNumber(x) ||\n        !isNumber(y) ||\n        !isNonNegativeNumber(width) ||\n        !isNonNegativeNumber(height)\n    ) {\n        parsingErrors.push(\n            `Invalid <rect> properties: ${JSON.stringify({ x, y, width, height })}.`\n        );\n        return;\n    }\n    let x1 = x;\n    let y1 = y;\n    let x2 = x + width;\n    let y2 = y;\n    let x3 = x + width;\n    let y3 = y + height;\n    let x4 = x;\n    let y4 = y + height;\n    if (transform) {\n        temp[0] = x1;\n        temp[1] = y1;\n        [x1, y1] = applyTransform(temp, transform);\n        temp[0] = x2;\n        temp[1] = y2;\n        [x2, y2] = applyTransform(temp, transform);\n        temp[0] = x3;\n        temp[1] = y3;\n        [x3, y3] = applyTransform(temp, transform);\n        temp[0] = x4;\n        temp[1] = y4;\n        [x4, y4] = applyTransform(temp, transform);\n    }\n    return `M${x1},${y1} L${x2},${y2} L${x3},${y3} L${x4},${y4} z`;\n}\n\nexport function convertCircleToPath(\n    properties: CircleProperties,\n    parsingErrors: string[],\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    let { cx, cy, r } = properties;\n    // cx, cy, r default to 0.\n    if (cx === undefined) cx = 0;\n    /* c8 ignore next if */\n    if (cy === undefined) cy = 0;\n    if (r === undefined) r = 0;\n    if (!isNumber(cx) || !isNumber(cy) || !isNonNegativeNumber(r)) {\n        parsingErrors.push(`Invalid <circle> properties: ${JSON.stringify({ cx, cy, r })}.`);\n        return;\n    }\n    const pathParser = _convertEllipseToPath(cx, cy, r, r, _preserveArcs, transform);\n    /* c8 ignore next 7 */\n    if (pathParser.err) {\n        // Should not hit this.\n        parsingErrors.push(\n            `Problem parsing <circle> ${JSON.stringify({ cx, cy, r })} with ${pathParser.err}.`\n        );\n        return;\n    }\n    return pathParser;\n}\n\nexport function convertEllipseToPath(\n    properties: EllipseProperties,\n    parsingErrors: string[],\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    let { cx, cy, rx, ry } = properties;\n    // cx, cy, rx, ry default to 0.\n    /* c8 ignore next if */\n    if (cx === undefined) cx = 0;\n    if (cy === undefined) cy = 0;\n    if (rx === undefined) rx = 0;\n    if (ry === undefined) ry = 0;\n    if (!isNumber(cx) || !isNumber(cy) || !isNonNegativeNumber(rx) || !isNonNegativeNumber(ry)) {\n        parsingErrors.push(`Invalid <ellipse> properties: ${JSON.stringify({ cx, cy, rx, ry })}.`);\n        return;\n    }\n    const pathParser = _convertEllipseToPath(cx, cy, rx, ry, _preserveArcs, transform);\n    /* c8 ignore next 9 */\n    if (pathParser.err) {\n        // Should not hit this.\n        parsingErrors.push(\n            `Problem parsing <ellipse> ${JSON.stringify({ cx, cy, rx, ry })} with ${\n                pathParser.err\n            }.`\n        );\n        return;\n    }\n    return pathParser;\n}\n\n// https://stackoverflow.com/questions/59011294/ellipse-to-path-convertion-using-javascript\n// const ellipsePoints = new Array(24).fill(0);\nfunction _convertEllipseToPath(\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number,\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    // Convert ellipse to 2 arcs.\n    const d = `M${cx - rx},${cy} a${rx},${ry} 0 1,0 ${rx * 2},0 a ${rx},${ry} 0 1,0 -${rx * 2},0`;\n    let pathParser = svgpath(d).abs() as any as PathParser;\n    // Convert arcs to bezier is _preserveArcs == false.\n    if (!_preserveArcs) pathParser = pathParser.unarc();\n    // Apply transform.\n    if (transform)\n        pathParser = pathParser.matrix([\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.e,\n            transform.f,\n        ]);\n    return pathParser;\n\n    // \tconst kappa = 0.5522847498;\n    // \tconst ox = rx * kappa; // x offset for the control point\n    // \tconst oy = ry * kappa; // y offset for the control point\n\n    // \tellipsePoints[0] = cx - rx;\n    // \tellipsePoints[1] = cy;\n\n    // \tellipsePoints[2] = cx - rx;\n    // \tellipsePoints[3] = cy - oy;\n\n    // \tellipsePoints[4] = cx - ox;\n    // \tellipsePoints[5] = cy - ry;\n\n    // \tellipsePoints[6] = cx;\n    // \tellipsePoints[7] = cy - ry;\n\n    // \tellipsePoints[8] = cx + ox;\n    // \tellipsePoints[9] = cy - ry;\n\n    // \tellipsePoints[10] = cx + rx;\n    // \tellipsePoints[11] = cy - oy;\n\n    // \tellipsePoints[12] = cx + rx;\n    // \tellipsePoints[13] = cy;\n\n    // \tellipsePoints[14] = cx + rx;\n    // \tellipsePoints[15] = cy + oy;\n\n    // \tellipsePoints[16] = cx + ox;\n    // \tellipsePoints[17] = cy + ry;\n\n    // \tellipsePoints[18] = cx;\n    // \tellipsePoints[19] = cy + ry;\n\n    // \tellipsePoints[20] = cx - ox;\n    // \tellipsePoints[21] = cy + ry;\n\n    // \tellipsePoints[22] = cx - rx;\n    // \tellipsePoints[23] = cy + oy;\n\n    // \tif (transform) {\n    // \t\tfor (let i = 0, length = ellipsePoints.length / 2; i < length; i++) {\n    // \t\t\ttemp[0] = ellipsePoints[2 * i];\n    // \t\t\ttemp[1] = ellipsePoints[2 * i + 1];\n    // \t\t\tapplyTransform(temp, transform);\n    // \t\t\tellipsePoints[2 * i] = temp[0];\n    // \t\t\tellipsePoints[2 * i + 1] = temp[1];\n    // \t\t}\n    // \t}\n    // \treturn `M${ellipsePoints[0]},${ellipsePoints[1]} \\\n    // C${ellipsePoints[2]},${ellipsePoints[3]} ${ellipsePoints[4]},${ellipsePoints[5]} ${ellipsePoints[6]},${ellipsePoints[7]} \\\n    // C${ellipsePoints[8]},${ellipsePoints[9]} ${ellipsePoints[10]},${ellipsePoints[11]} ${ellipsePoints[12]},${ellipsePoints[13]} \\\n    // C${ellipsePoints[14]},${ellipsePoints[15]} ${ellipsePoints[16]},${ellipsePoints[17]} ${ellipsePoints[18]},${ellipsePoints[19]} \\\n    // C${ellipsePoints[20]},${ellipsePoints[21]} ${ellipsePoints[22]},${ellipsePoints[23]} ${ellipsePoints[0]},${ellipsePoints[1]} \\\n    // z`;\n}\n\nexport function convertPolygonToPath(\n    properties: PolygonProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    const { points } = properties;\n    if (!isString(points)) {\n        parsingErrors.push(`Invalid <polygon> properties: ${JSON.stringify({ points })}.`);\n        return;\n    }\n    const path = _convertPointsToPath(points, parsingErrors, POLYGON, transform);\n    if (!path) return path;\n    return path + ' z';\n}\n\nexport function convertPolylineToPath(\n    properties: PolylineProperties,\n    parsingErrors: string[],\n    transform?: Transform\n) {\n    const { points } = properties;\n    if (!isString(points)) {\n        parsingErrors.push(`Invalid <polyline> properties: ${JSON.stringify({ points })}.`);\n        return;\n    }\n    return _convertPointsToPath(points, parsingErrors, POLYLINE, transform);\n}\n\nfunction _convertPointsToPath(\n    pointsString: string,\n    parsingErrors: string[],\n    elementType: typeof POLYGON | typeof POLYLINE,\n    transform?: Transform\n) {\n    const points = removeWhitespacePadding(pointsString).split(' ');\n    let d = '';\n    while (points.length) {\n        const point = points.shift()!.split(',');\n        if (point.length === 1) {\n            // Sometimes polyline is not separated by commas, only by whitespace.\n            if (points.length && points.length % 2 === 1) {\n                point.push(points.shift()!); // Get next element in points array.\n            }\n        }\n        if (point.length !== 2) {\n            parsingErrors.push(\n                `Unable to parse points string: \"${pointsString}\" in <${elementType}>.`\n            );\n            return;\n        }\n        let x = parseFloat(point[0]);\n        let y = parseFloat(point[1]);\n        if (isNaN(x) || isNaN(y)) {\n            parsingErrors.push(\n                `Unable to parse points string: \"${pointsString}\" in <${elementType}>.`\n            );\n            return;\n        }\n        if (transform) {\n            temp[0] = x;\n            temp[1] = y;\n            [x, y] = applyTransform(temp, transform);\n        }\n        if (d === '') {\n            d += `M${x},${y}`;\n        } else {\n            d += ` L${x},${y}`;\n        }\n    }\n    return d;\n}\n\nexport function convertPathToPath(\n    properties: PathProperties,\n    parsingErrors: string[],\n    _preserveArcs: boolean,\n    transform?: Transform\n) {\n    const { d } = properties;\n    if (!isString(d)) {\n        parsingErrors.push(`Invalid <path> properties: ${JSON.stringify({ d })}.`);\n        return;\n    }\n    // Convert to absolute coordinates,\n    // Convert smooth curves (T/S) to regular Bezier (Q/C).\n    let pathParser = svgpath(d).abs().unshort() as any as PathParser;\n    if (_preserveArcs) {\n        // Convert arcs to bezier.\n        pathParser = pathParser.unarc();\n    }\n    // Apply transform.\n    if (transform) {\n        pathParser = pathParser.matrix([\n            transform.a,\n            transform.b,\n            transform.c,\n            transform.d,\n            transform.e,\n            transform.f,\n        ]);\n    }\n    if (pathParser.err) {\n        parsingErrors.push(\n            `Problem parsing <path> ${JSON.stringify({ d })} with ${pathParser.err}.`\n        );\n        return;\n    }\n    return pathParser;\n}\n","function $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $009ddb00d3ec72b8$exports = {};\n\n$parcel$defineInteropFlag($009ddb00d3ec72b8$exports);\n\n$parcel$export($009ddb00d3ec72b8$exports, \"default\", () => $009ddb00d3ec72b8$export$2e2bcd8739ae039);\nclass $009ddb00d3ec72b8$export$2e2bcd8739ae039 extends Error {\n    constructor(filename, msg, lineno, column, css){\n        super(filename + \":\" + lineno + \":\" + column + \": \" + msg);\n        this.reason = msg;\n        this.filename = filename;\n        this.line = lineno;\n        this.column = column;\n        this.source = css;\n    }\n}\n\n\nvar $0865a9fb4cc365fe$exports = {};\n\n$parcel$defineInteropFlag($0865a9fb4cc365fe$exports);\n\n$parcel$export($0865a9fb4cc365fe$exports, \"default\", () => $0865a9fb4cc365fe$export$2e2bcd8739ae039);\n/**\n * Store position information for a node\n */ class $0865a9fb4cc365fe$export$2e2bcd8739ae039 {\n    constructor(start, end, source){\n        this.start = start;\n        this.end = end;\n        this.source = source;\n    }\n}\n\n\nvar $b2e137848b48cf4f$exports = {};\n\n$parcel$export($b2e137848b48cf4f$exports, \"CssTypes\", () => $b2e137848b48cf4f$export$9be5dd6e61d5d73a);\nvar $b2e137848b48cf4f$export$9be5dd6e61d5d73a;\n(function(CssTypes) {\n    CssTypes[\"stylesheet\"] = \"stylesheet\";\n    CssTypes[\"rule\"] = \"rule\";\n    CssTypes[\"declaration\"] = \"declaration\";\n    CssTypes[\"comment\"] = \"comment\";\n    CssTypes[\"container\"] = \"container\";\n    CssTypes[\"charset\"] = \"charset\";\n    CssTypes[\"document\"] = \"document\";\n    CssTypes[\"customMedia\"] = \"custom-media\";\n    CssTypes[\"fontFace\"] = \"font-face\";\n    CssTypes[\"host\"] = \"host\";\n    CssTypes[\"import\"] = \"import\";\n    CssTypes[\"keyframes\"] = \"keyframes\";\n    CssTypes[\"keyframe\"] = \"keyframe\";\n    CssTypes[\"layer\"] = \"layer\";\n    CssTypes[\"media\"] = \"media\";\n    CssTypes[\"namespace\"] = \"namespace\";\n    CssTypes[\"page\"] = \"page\";\n    CssTypes[\"supports\"] = \"supports\";\n})($b2e137848b48cf4f$export$9be5dd6e61d5d73a || ($b2e137848b48cf4f$export$9be5dd6e61d5d73a = {}));\n\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nconst $d708735ed1303b43$var$commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nconst $d708735ed1303b43$export$98e6a39c04603d36 = (css, options)=>{\n    options = options || {};\n    /**\n   * Positional.\n   */ let lineno = 1;\n    let column = 1;\n    /**\n   * Update lineno and column based on `str`.\n   */ function updatePosition(str) {\n        const lines = str.match(/\\n/g);\n        if (lines) lineno += lines.length;\n        const i = str.lastIndexOf(\"\\n\");\n        column = ~i ? str.length - i : column + str.length;\n    }\n    /**\n   * Mark position and patch `node.position`.\n   */ function position() {\n        const start = {\n            line: lineno,\n            column: column\n        };\n        return function(node) {\n            node.position = new (0, $0865a9fb4cc365fe$export$2e2bcd8739ae039)(start, {\n                line: lineno,\n                column: column\n            }, options?.source || \"\");\n            whitespace();\n            return node;\n        };\n    }\n    /**\n   * Error `msg`.\n   */ const errorsList = [];\n    function error(msg) {\n        const err = new (0, $009ddb00d3ec72b8$export$2e2bcd8739ae039)(options?.source || \"\", msg, lineno, column, css);\n        if (options?.silent) errorsList.push(err);\n        else throw err;\n    }\n    /**\n   * Parse stylesheet.\n   */ function stylesheet() {\n        const rulesList = rules();\n        const result = {\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet,\n            stylesheet: {\n                source: options?.source,\n                rules: rulesList,\n                parsingErrors: errorsList\n            }\n        };\n        return result;\n    }\n    /**\n   * Opening brace.\n   */ function open() {\n        return match(/^{\\s*/);\n    }\n    /**\n   * Closing brace.\n   */ function close() {\n        return match(/^}/);\n    }\n    /**\n   * Parse ruleset.\n   */ function rules() {\n        let node;\n        const rules = [];\n        whitespace();\n        comments(rules);\n        while(css.length && css.charAt(0) !== \"}\" && (node = atrule() || rule()))if (node) {\n            rules.push(node);\n            comments(rules);\n        }\n        return rules;\n    }\n    /**\n   * Match `re` and return captures.\n   */ function match(re) {\n        const m = re.exec(css);\n        if (!m) return;\n        const str = m[0];\n        updatePosition(str);\n        css = css.slice(str.length);\n        return m;\n    }\n    /**\n   * Parse whitespace.\n   */ function whitespace() {\n        match(/^\\s*/);\n    }\n    /**\n   * Parse comments;\n   */ function comments(rules) {\n        let c;\n        rules = rules || [];\n        while(c = comment())if (c) rules.push(c);\n        return rules;\n    }\n    /**\n   * Parse comment.\n   */ function comment() {\n        const pos = position();\n        if (\"/\" !== css.charAt(0) || \"*\" !== css.charAt(1)) return;\n        const m = match(/^\\/\\*[^]*?\\*\\//);\n        if (!m) return error(\"End of comment missing\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment,\n            comment: m[0].slice(2, -2)\n        });\n    }\n    /**\n   * Parse selector.\n   */ function selector() {\n        const m = match(/^([^{]+)/);\n        if (!m) return;\n        // remove comment in selector; [^] is equivalent to [.\\n\\r]\n        const res = $d708735ed1303b43$var$trim(m[0]).replace(/\\/\\*[^]*?\\*\\//gm, \"\");\n        // Optimisation: If there is no ',' no need to split or post-process (this is less costly)\n        if (res.indexOf(\",\") === -1) return [\n            res\n        ];\n        return res/**\n         * replace ',' by \\u200C for data selector (div[data-lang=\"fr,de,us\"])\n         * replace ',' by \\u200C for nthChild and other selector (div:nth-child(2,3,4))\n         *\n         * Examples:\n         * div[data-lang=\"fr,\\\"de,us\"]\n         * div[data-lang='fr,\\'de,us']\n         * div:matches(.toto, .titi:matches(.toto, .titi))\n         *\n         * Regex logic:\n         *  (\"|')(?:\\\\\\1|.)*?\\1 => Handle the \" and '\n         *  \\(.*?\\)  => Handle the ()\n         *\n         * Optimization 1:\n         * No greedy capture (see docs about the difference between .* and .*?)\n         *\n         * Optimization 2:\n         * (\"|')(?:\\\\\\1|.)*?\\1 this use reference to capture group, it work faster.\n         */ .replace(/(\"|')(?:\\\\\\1|.)*?\\1|\\(.*?\\)/g, (m)=>m.replace(/,/g, \"â€Œ\"))// Split the selector by ','\n        .split(\",\")// Replace back \\u200C by ','\n        .map((s)=>{\n            return $d708735ed1303b43$var$trim(s.replace(/\\u200C/g, \",\"));\n        });\n    }\n    /**\n   * Parse declaration.\n   */ function declaration() {\n        const pos = position();\n        // prop\n        const propMatch = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n        if (!propMatch) return;\n        const propValue = $d708735ed1303b43$var$trim(propMatch[0]);\n        // :\n        if (!match(/^:\\s*/)) return error(\"property missing ':'\");\n        // val\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/);\n        const ret = pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration,\n            property: propValue.replace($d708735ed1303b43$var$commentre, \"\"),\n            value: val ? $d708735ed1303b43$var$trim(val[0]).replace($d708735ed1303b43$var$commentre, \"\") : \"\"\n        });\n        // ;\n        match(/^[;\\s]*/);\n        return ret;\n    }\n    /**\n   * Parse declarations.\n   */ function declarations() {\n        const decls = [];\n        if (!open()) return error(\"missing '{'\");\n        comments(decls);\n        // declarations\n        let decl;\n        while(decl = declaration())if (decl) {\n            decls.push(decl);\n            comments(decls);\n        }\n        if (!close()) return error(\"missing '}'\");\n        return decls;\n    }\n    /**\n   * Parse keyframe.\n   */ function keyframe() {\n        let m;\n        const vals = [];\n        const pos = position();\n        while(m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)){\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n        if (!vals.length) return;\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe,\n            values: vals,\n            declarations: declarations() || []\n        });\n    }\n    /**\n   * Parse keyframes.\n   */ function atkeyframes() {\n        const pos = position();\n        const m1 = match(/^@([-\\w]+)?keyframes\\s*/);\n        if (!m1) return;\n        const vendor = m1[1];\n        // identifier\n        const m2 = match(/^([-\\w]+)\\s*/);\n        if (!m2) return error(\"@keyframes missing name\");\n        const name = m2[1];\n        if (!open()) return error(\"@keyframes missing '{'\");\n        let frame;\n        let frames = comments();\n        while(frame = keyframe()){\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n        if (!close()) return error(\"@keyframes missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes,\n            name: name,\n            vendor: vendor,\n            keyframes: frames\n        });\n    }\n    /**\n   * Parse supports.\n   */ function atsupports() {\n        const pos = position();\n        const m = match(/^@supports *([^{]+)/);\n        if (!m) return;\n        const supports = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) return error(\"@supports missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@supports missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports,\n            supports: supports,\n            rules: style\n        });\n    }\n    /**\n   * Parse host.\n   */ function athost() {\n        const pos = position();\n        const m = match(/^@host\\s*/);\n        if (!m) return;\n        if (!open()) return error(\"@host missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@host missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host,\n            rules: style\n        });\n    }\n    /**\n   * Parse container.\n   */ function atcontainer() {\n        const pos = position();\n        const m = match(/^@container *([^{]+)/);\n        if (!m) return;\n        const container = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) return error(\"@container missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@container missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container,\n            container: container,\n            rules: style\n        });\n    }\n    /**\n   * Parse container.\n   */ function atlayer() {\n        const pos = position();\n        const m = match(/^@layer *([^{;@]+)/);\n        if (!m) return;\n        const layer = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) {\n            match(/^[;\\s]*/);\n            return pos({\n                type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n                layer: layer\n            });\n        }\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@layer missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n            layer: layer,\n            rules: style\n        });\n    }\n    /**\n   * Parse media.\n   */ function atmedia() {\n        const pos = position();\n        const m = match(/^@media *([^{]+)/);\n        if (!m) return;\n        const media = $d708735ed1303b43$var$trim(m[1]);\n        if (!open()) return error(\"@media missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@media missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media,\n            media: media,\n            rules: style\n        });\n    }\n    /**\n   * Parse custom-media.\n   */ function atcustommedia() {\n        const pos = position();\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (!m) return;\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia,\n            name: $d708735ed1303b43$var$trim(m[1]),\n            media: $d708735ed1303b43$var$trim(m[2])\n        });\n    }\n    /**\n   * Parse paged media.\n   */ function atpage() {\n        const pos = position();\n        const m = match(/^@page */);\n        if (!m) return;\n        const sel = selector() || [];\n        if (!open()) return error(\"@page missing '{'\");\n        let decls = comments();\n        // declarations\n        let decl;\n        while(decl = declaration()){\n            decls.push(decl);\n            decls = decls.concat(comments());\n        }\n        if (!close()) return error(\"@page missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page,\n            selectors: sel,\n            declarations: decls\n        });\n    }\n    /**\n   * Parse document.\n   */ function atdocument() {\n        const pos = position();\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (!m) return;\n        const vendor = $d708735ed1303b43$var$trim(m[1]);\n        const doc = $d708735ed1303b43$var$trim(m[2]);\n        if (!open()) return error(\"@document missing '{'\");\n        const style = comments().concat(rules());\n        if (!close()) return error(\"@document missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document,\n            document: doc,\n            vendor: vendor,\n            rules: style\n        });\n    }\n    /**\n   * Parse font-face.\n   */ function atfontface() {\n        const pos = position();\n        const m = match(/^@font-face\\s*/);\n        if (!m) return;\n        if (!open()) return error(\"@font-face missing '{'\");\n        let decls = comments();\n        // declarations\n        let decl;\n        while(decl = declaration()){\n            decls.push(decl);\n            decls = decls.concat(comments());\n        }\n        if (!close()) return error(\"@font-face missing '}'\");\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace,\n            declarations: decls\n        });\n    }\n    /**\n   * Parse import\n   */ const atimport = _compileAtrule(\"import\");\n    /**\n   * Parse charset\n   */ const atcharset = _compileAtrule(\"charset\");\n    /**\n   * Parse namespace\n   */ const atnamespace = _compileAtrule(\"namespace\");\n    /**\n   * Parse non-block at-rules\n   */ function _compileAtrule(name) {\n        const re = new RegExp(\"^@\" + name + \"\\\\s*((:?[^;'\\\"]|\\\"(?:\\\\\\\\\\\"|[^\\\"])*?\\\"|'(?:\\\\\\\\'|[^'])*?')+);\");\n        // ^@import\\s*([^;\"']|(\"|')(?:\\\\\\2|.)*?\\2)+;\n        return function() {\n            const pos = position();\n            const m = match(re);\n            if (!m) return;\n            const ret = {\n                type: name\n            };\n            ret[name] = m[1].trim();\n            return pos(ret);\n        };\n    }\n    /**\n   * Parse at rule.\n   */ function atrule() {\n        if (css[0] !== \"@\") return;\n        return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface() || atcontainer() || atlayer();\n    }\n    /**\n   * Parse rule.\n   */ function rule() {\n        const pos = position();\n        const sel = selector();\n        if (!sel) return error(\"selector missing\");\n        comments();\n        return pos({\n            type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule,\n            selectors: sel,\n            declarations: declarations() || []\n        });\n    }\n    return $d708735ed1303b43$var$addParent(stylesheet());\n};\n/**\n * Trim `str`.\n */ function $d708735ed1303b43$var$trim(str) {\n    return str ? str.trim() : \"\";\n}\n/**\n * Adds non-enumerable parent node reference to each node.\n */ function $d708735ed1303b43$var$addParent(obj, parent) {\n    const isNode = obj && typeof obj.type === \"string\";\n    const childParent = isNode ? obj : parent;\n    for(const k in obj){\n        const value = obj[k];\n        if (Array.isArray(value)) value.forEach((v)=>{\n            $d708735ed1303b43$var$addParent(v, childParent);\n        });\n        else if (value && typeof value === \"object\") $d708735ed1303b43$var$addParent(value, childParent);\n    }\n    if (isNode) Object.defineProperty(obj, \"parent\", {\n        configurable: true,\n        writable: true,\n        enumerable: false,\n        value: parent || null\n    });\n    return obj;\n}\nvar $d708735ed1303b43$export$2e2bcd8739ae039 = $d708735ed1303b43$export$98e6a39c04603d36;\n\n\n\nclass $de9540138ed1fd01$var$Compiler {\n    constructor(options){\n        this.level = 0;\n        this.indentation = \"  \";\n        this.compress = false;\n        if (typeof options?.indent === \"string\") this.indentation = options?.indent;\n        if (options?.compress) this.compress = true;\n    }\n    // We disable no-unused-vars for _position. We keep position for potential reintroduction of source-map\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    emit(str, _position) {\n        return str;\n    }\n    /**\n   * Increase, decrease or return current indentation.\n   */ indent(level) {\n        this.level = this.level || 1;\n        if (level) {\n            this.level += level;\n            return \"\";\n        }\n        return Array(this.level).join(this.indentation);\n    }\n    visit(node) {\n        switch(node.type){\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet:\n                return this.stylesheet(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule:\n                return this.rule(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration:\n                return this.declaration(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment:\n                return this.comment(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container:\n                return this.container(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).charset:\n                return this.charset(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document:\n                return this.document(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia:\n                return this.customMedia(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace:\n                return this.fontFace(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host:\n                return this.host(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).import:\n                return this.import(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes:\n                return this.keyframes(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe:\n                return this.keyframe(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer:\n                return this.layer(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media:\n                return this.media(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).namespace:\n                return this.namespace(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page:\n                return this.page(node);\n            case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports:\n                return this.supports(node);\n        }\n    }\n    mapVisit(nodes, delim) {\n        let buf = \"\";\n        delim = delim || \"\";\n        for(let i = 0, length = nodes.length; i < length; i++){\n            buf += this.visit(nodes[i]);\n            if (delim && i < length - 1) buf += this.emit(delim);\n        }\n        return buf;\n    }\n    compile(node) {\n        if (this.compress) return node.stylesheet.rules.map(this.visit, this).join(\"\");\n        return this.stylesheet(node);\n    }\n    /**\n   * Visit stylesheet node.\n   */ stylesheet(node) {\n        return this.mapVisit(node.stylesheet.rules, \"\\n\\n\");\n    }\n    /**\n   * Visit comment node.\n   */ comment(node) {\n        if (this.compress) return this.emit(\"\", node.position);\n        return this.emit(this.indent() + \"/*\" + node.comment + \"*/\", node.position);\n    }\n    /**\n   * Visit container node.\n   */ container(node) {\n        if (this.compress) return this.emit(\"@container \" + node.container, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(this.indent() + \"@container \" + node.container, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n    }\n    /**\n   * Visit container node.\n   */ layer(node) {\n        if (this.compress) return this.emit(\"@layer \" + node.layer, node.position) + (node.rules ? this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\") : \";\");\n        return this.emit(this.indent() + \"@layer \" + node.layer, node.position) + (node.rules ? this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\") : \";\");\n    }\n    /**\n   * Visit import node.\n   */ import(node) {\n        return this.emit(\"@import \" + node.import + \";\", node.position);\n    }\n    /**\n   * Visit media node.\n   */ media(node) {\n        if (this.compress) return this.emit(\"@media \" + node.media, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(this.indent() + \"@media \" + node.media, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n    }\n    /**\n   * Visit document node.\n   */ document(node) {\n        const doc = \"@\" + (node.vendor || \"\") + \"document \" + node.document;\n        if (this.compress) return this.emit(doc, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(doc, node.position) + this.emit(\"  {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n    }\n    /**\n   * Visit charset node.\n   */ charset(node) {\n        return this.emit(\"@charset \" + node.charset + \";\", node.position);\n    }\n    /**\n   * Visit namespace node.\n   */ namespace(node) {\n        return this.emit(\"@namespace \" + node.namespace + \";\", node.position);\n    }\n    /**\n   * Visit supports node.\n   */ supports(node) {\n        if (this.compress) return this.emit(\"@supports \" + node.supports, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(this.indent() + \"@supports \" + node.supports, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n    }\n    /**\n   * Visit keyframes node.\n   */ keyframes(node) {\n        if (this.compress) return this.emit(\"@\" + (node.vendor || \"\") + \"keyframes \" + node.name, node.position) + this.emit(\"{\") + this.mapVisit(node.keyframes) + this.emit(\"}\");\n        return this.emit(\"@\" + (node.vendor || \"\") + \"keyframes \" + node.name, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.keyframes, \"\\n\") + this.emit(this.indent(-1) + \"}\");\n    }\n    /**\n   * Visit keyframe node.\n   */ keyframe(node) {\n        const decls = node.declarations;\n        if (this.compress) return this.emit(node.values.join(\",\"), node.position) + this.emit(\"{\") + this.mapVisit(decls) + this.emit(\"}\");\n        return this.emit(this.indent()) + this.emit(node.values.join(\", \"), node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(decls, \"\\n\") + this.emit(this.indent(-1) + \"\\n\" + this.indent() + \"}\\n\");\n    }\n    /**\n   * Visit page node.\n   */ page(node) {\n        if (this.compress) {\n            const sel = node.selectors.length ? node.selectors.join(\", \") : \"\";\n            return this.emit(\"@page \" + sel, node.position) + this.emit(\"{\") + this.mapVisit(node.declarations) + this.emit(\"}\");\n        }\n        const sel = node.selectors.length ? node.selectors.join(\", \") + \" \" : \"\";\n        return this.emit(\"@page \" + sel, node.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(node.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n    }\n    /**\n   * Visit font-face node.\n   */ fontFace(node) {\n        if (this.compress) return this.emit(\"@font-face\", node.position) + this.emit(\"{\") + this.mapVisit(node.declarations) + this.emit(\"}\");\n        return this.emit(\"@font-face \", node.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(node.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n    }\n    /**\n   * Visit host node.\n   */ host(node) {\n        if (this.compress) return this.emit(\"@host\", node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n        return this.emit(\"@host\", node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n    }\n    /**\n   * Visit custom-media node.\n   */ customMedia(node) {\n        return this.emit(\"@custom-media \" + node.name + \" \" + node.media + \";\", node.position);\n    }\n    /**\n   * Visit rule node.\n   */ rule(node) {\n        const decls = node.declarations;\n        if (!decls.length) return \"\";\n        if (this.compress) return this.emit(node.selectors.join(\",\"), node.position) + this.emit(\"{\") + this.mapVisit(decls) + this.emit(\"}\");\n        const indent = this.indent();\n        return this.emit(node.selectors.map((s)=>{\n            return indent + s;\n        }).join(\",\\n\"), node.position) + this.emit(\" {\\n\") + this.emit(this.indent(1)) + this.mapVisit(decls, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n\" + this.indent() + \"}\");\n    }\n    /**\n   * Visit declaration node.\n   */ declaration(node) {\n        if (this.compress) return this.emit(node.property + \":\" + node.value, node.position) + this.emit(\";\");\n        return this.emit(this.indent()) + this.emit(node.property + \": \" + node.value, node.position) + this.emit(\";\");\n    }\n}\nvar $de9540138ed1fd01$export$2e2bcd8739ae039 = $de9540138ed1fd01$var$Compiler;\n\n\nvar $fdf773ab87e20450$export$2e2bcd8739ae039 = (node, options)=>{\n    const compiler = new (0, $de9540138ed1fd01$export$2e2bcd8739ae039)(options || {});\n    return compiler.compile(node);\n};\n\n\n\n\n\nconst $149c1bd638913645$export$98e6a39c04603d36 = (0, $d708735ed1303b43$export$2e2bcd8739ae039);\nconst $149c1bd638913645$export$fac44ee5b035f737 = (0, $fdf773ab87e20450$export$2e2bcd8739ae039);\nvar $149c1bd638913645$export$2e2bcd8739ae039 = {\n    parse: $149c1bd638913645$export$98e6a39c04603d36,\n    stringify: $149c1bd638913645$export$fac44ee5b035f737\n};\n\n\nexport {$149c1bd638913645$export$98e6a39c04603d36 as parse, $149c1bd638913645$export$fac44ee5b035f737 as stringify, $149c1bd638913645$export$2e2bcd8739ae039 as default, $b2e137848b48cf4f$export$9be5dd6e61d5d73a as CssTypes};\n//# sourceMappingURL=index.mjs.map\n","import { parse, RootNode } from 'svg-parser';\nimport {\n    parseTransformString,\n    flattenTransformArray,\n    copyTransform,\n    transformToString,\n} from './transforms';\nimport { AnyColor, Colord, colord, extend } from 'colord';\nimport namesPlugin from 'colord/plugins/names';\nimport labPlugin from 'colord/plugins/lab';\nimport {\n    CIRCLE,\n    ELLIPSE,\n    G,\n    LINE,\n    PATH,\n    POLYGON,\n    POLYLINE,\n    RECT,\n    SVG,\n    SVG_STYLE_COLOR,\n    SVG_STYLE_FILL,\n    SVG_STYLE_OPACITY,\n    SVG_STYLE_STROKE_COLOR,\n    SVG_STYLE_STROKE_DASH_ARRAY,\n} from './constants';\nimport {\n    FlatArcSegment,\n    FlatBezierSegment,\n    ComputedProperties,\n    ElementNode,\n    FlatElement,\n    FlatPath,\n    FlatSegment,\n    GeometryElementProperties,\n    GeometryElementTagName,\n    Node,\n    PathParser,\n    Properties,\n    PropertiesFilter,\n    Style,\n    Transform,\n} from './types';\nimport {\n    convertCircleToPath,\n    convertEllipseToPath,\n    convertLineToPath,\n    convertPathToPath,\n    convertPolygonToPath,\n    convertPolylineToPath,\n    convertRectToPath,\n} from './convertToPath';\nimport svgpath from 'svgpath';\n// Had to roll back to @adobe/css-tools to version 4.3.0-rc.1 to get this to work.\n// https://github.com/adobe/css-tools/issues/116\nimport { parse as cssParse, type CssDeclarationAST, type CssRuleAST } from '@adobe/css-tools';\nimport { isNumber } from '@amandaghassaei/type-checks';\nimport { convertToDashArray } from './utils';\n\nextend([namesPlugin]);\nextend([labPlugin]);\n// Color input examples\n// \"#FFF\"\n// \"#ffffff\"\n// \"#ffffffff\"\n// \"rgb(255, 255, 255)\"\n// \"rgba(255, 255, 255, 0.5)\"\n// \"rgba(100% 100% 100% / 50%)\"\n// \"hsl(90, 100%, 100%)\"\n// \"hsla(90, 100%, 100%, 0.5)\"\n// \"hsla(90deg 100% 100% / 50%)\"\n// \"tomato\"\n\nexport class FlatSVG {\n    private readonly _rootNode: RootNode;\n    private _elements?: FlatElement[];\n    private _paths?: FlatPath[];\n    private _pathParsers?: (PathParser | undefined)[];\n    private _segments?: FlatSegment[];\n    private readonly _preserveArcs: boolean;\n\n    /**\n     * Defs elements that are removed during flattening.\n     */\n    readonly defs: ElementNode[] = [];\n    /**\n     * Global style to be applied to children during flattening.\n     */\n    private readonly _globalStyles?: { [key: string]: Style };\n\n    /**\n     * A list of errors generated during parsing.\n     */\n    readonly errors: string[] = [];\n    /**\n     * A list of warnings generated during parsing.\n     */\n    readonly warnings: string[] = [];\n\n    // Hold onto some extra computed properties so we don't have to recompute during filter operations.\n    private _computedElementProperties?: ComputedProperties[];\n    private _computedPathProperties?: ComputedProperties[];\n    private _computedSegmentProperties?: ComputedProperties[];\n\n    /**\n     * Init a FlatSVG object.\n     * @param string - SVG string to parse.\n     * @param options - Optional settings.\n     * @param options.preserveArcs - Preserve arcs, ellipses, and circles as arcs when calling FlatSVG.paths and FlatSVG.segments.  Defaults to false, which will approximate arcs as cubic beziers.\n     */\n    constructor(string: string, options?: { preserveArcs: boolean }) {\n        if (string === undefined) {\n            throw new Error('Must pass in an SVG string to FlatSVG().');\n        }\n        if (string === '') {\n            throw new Error('SVG string is empty.');\n        }\n        this._rootNode = parse(string);\n        this._preserveArcs = !!options?.preserveArcs;\n\n        // Validate svg.\n        // Check that a root svg element exists.\n        if (\n            this._rootNode.children.length !== 1 ||\n            this._rootNode.children[0].type !== 'element' ||\n            this._rootNode.children[0].tagName !== SVG\n        ) {\n            // console.log(this._rootNode);\n            this.errors.push(`Malformed SVG: expected only 1 child <svg> element on root node.`);\n            throw new Error(`Malformed SVG: expected only 1 child <svg> element on root node.`);\n        }\n\n        // Pull out defs/style tags.\n        const topChildren = this._rootNode.children[0].children;\n        for (let i = topChildren.length - 1; i >= 0; i--) {\n            const child = topChildren[i] as ElementNode;\n            if (child.tagName === 'defs') {\n                this.defs.push(child);\n                topChildren.splice(i, 1);\n                // Check if defs contains style.\n                if (child.children) {\n                    for (let j = child.children.length - 1; j >= 0; j--) {\n                        const defsChild = child.children[j] as ElementNode;\n                        if (defsChild.tagName === 'style') {\n                            child.children.splice(j, 1);\n                            if (\n                                defsChild.children &&\n                                defsChild.children[0] &&\n                                defsChild.children[0].type === 'text'\n                            ) {\n                                this._globalStyles = {\n                                    ...this._globalStyles,\n                                    ...this.parseStyleToObject(\n                                        defsChild.children[0].value as string\n                                    ),\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n            if (child.tagName === 'style') {\n                topChildren.splice(i, 1);\n                if (child.children && child.children[0] && child.children[0].type === 'text') {\n                    this._globalStyles = {\n                        ...this._globalStyles,\n                        ...this.parseStyleToObject(child.children[0].value as string),\n                    };\n                }\n            }\n        }\n\n        this.deepIterChildren = this.deepIterChildren.bind(this);\n\n        // // Check that no children are strings.\n        // this.deepIterChildren((child) => {\n        // \tif (typeof child === 'string') {\n        // \t\tconsole.log(this.rootNode);\n        // \t\tthrow new Error(`Child is a string: ${child}.`);\n        // \t}\n        // });\n    }\n\n    private parseStyleToObject(styleString: string) {\n        const { errors } = this;\n        const result = {} as { [key: string]: Style };\n        const css = cssParse(styleString, { silent: true });\n        const { stylesheet } = css;\n        /* c8 ignore next 3 */\n        if (!stylesheet) {\n            return result;\n        }\n        if (stylesheet.parsingErrors) {\n            const parsingErrors = stylesheet.parsingErrors\n                .map((error) => error.message)\n                .filter((error) => error !== undefined);\n            errors.push(...parsingErrors);\n        }\n        // Extract style info.\n        /* c8 ignore next 3 */\n        if (!stylesheet.rules) {\n            return result;\n        }\n        const rules = stylesheet.rules;\n        for (let i = 0, numRules = rules.length; i < numRules; i++) {\n            const rule = rules[i];\n            const selectorStyle: { [key: string]: number | string } = {};\n            const { declarations, selectors } = rule as CssRuleAST;\n            if (declarations) {\n                for (let j = 0, numDeclarations = declarations.length; j < numDeclarations; j++) {\n                    const declaration = declarations[j] as CssDeclarationAST;\n                    const { property } = declaration;\n                    let { value } = declaration;\n                    if (property && value !== undefined) {\n                        // Cast value as number if needed.\n                        // Try stripping px off the end.\n                        value = value.replace(/px\\b/g, '');\n                        if (/^\\-?[0-9]?([0-9]+e-?[0-9]+)?(\\.[0-9]+)?$/.test(value))\n                            selectorStyle[property] = parseFloat(value);\n                        else selectorStyle[property] = value;\n                    }\n                }\n            }\n            if (selectors) {\n                for (let j = 0, numSelectors = selectors.length; j < numSelectors; j++) {\n                    const selector = selectors[j];\n                    result[selector] = { ...result[selector], ...selectorStyle };\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Get the root node of the SVG.\n     */\n    get root() {\n        return this._rootNode.children[0] as Node as ElementNode;\n    }\n\n    /**\n     * Get the viewBox of the SVG as [min-x, min-y, width, height].\n     */\n    get viewBox() {\n        const viewBoxString = this.root.properties!.viewBox;\n        if (viewBoxString) {\n            return viewBoxString.split(' ').map((el) => parseFloat(el));\n        }\n        return [\n            Number.parseFloat((this.root.properties!.x || '0') as string),\n            Number.parseFloat((this.root.properties!.y || '0') as string),\n            Number.parseFloat((this.root.properties!.width || '0') as string),\n            Number.parseFloat((this.root.properties!.height || '0') as string),\n        ];\n    }\n\n    /**\n     * Get the units of the SVG as a string.\n     */\n    get units() {\n        // If you do not specify any units inside the width and height attributes, the units are assumed to be pixels.\n        const regex = new RegExp(/(em|ex|px|pt|pc|cm|mm|in)$/);\n        const { x, y, width, height } = this.root.properties || /* c8 ignore next */ {};\n        /* c8 ignore next 2 */\n        const match =\n            x?.match(regex) || y?.match(regex) || width?.match(regex) || height?.match(regex);\n        return (match ? match[0] : 'px') as 'in' | 'cm' | 'mm' | 'px' | 'pt' | 'em' | 'ex' | 'pc';\n    }\n\n    private deepIterChildren(\n        callback: (\n            child: ElementNode,\n            transform?: Transform,\n            ids?: string,\n            classes?: string,\n            properties?: GeometryElementProperties\n        ) => void,\n        node = this.root,\n        transform?: Transform,\n        ids?: string,\n        classes?: string,\n        properties?: Style\n    ) {\n        const { _globalStyles } = this;\n        for (let i = 0, numChildren = node.children.length; i < numChildren; i++) {\n            const child = node.children[i] as ElementNode;\n\n            let childTransform = transform;\n            let childClasses: string | undefined;\n            let childIds: string | undefined;\n            let childProperties: Style | undefined;\n\n            if (child.properties) {\n                // Add transforms to list.\n                if (child.properties.transform) {\n                    const childTransforms = parseTransformString(\n                        child.properties.transform,\n                        child.tagName\n                    );\n                    // Get errors / warnings.\n                    for (\n                        let transformIndex = 0, numTransforms = childTransforms.length;\n                        transformIndex < numTransforms;\n                        transformIndex++\n                    ) {\n                        const { errors, warnings } = childTransforms[transformIndex];\n                        /* c8 ignore next if */\n                        if (errors) this.errors.push(...errors);\n                        /* c8 ignore next if */\n                        if (warnings) this.warnings.push(...warnings);\n                    }\n                    // Merge transforms.\n                    if (childTransforms.length) {\n                        if (childTransform) {\n                            childTransforms.unshift(childTransform);\n                        }\n                        // Flatten transforms to a new matrix.\n                        childTransform = flattenTransformArray(childTransforms);\n                    }\n                    delete child.properties.transform;\n                }\n                let childPropertiesToMerge = child.properties || /* c8 ignore next */ {};\n\n                childIds = ids;\n                if (child.properties.id) {\n                    // Check for styling associated with id.\n                    if (_globalStyles) {\n                        const idsArray = child.properties.id.split(' ');\n                        for (let j = 0, numIds = idsArray.length; j < numIds; j++) {\n                            const idStyle = _globalStyles[`#${idsArray[j]}`];\n                            if (idStyle) {\n                                childPropertiesToMerge = { ...childPropertiesToMerge, ...idStyle };\n                            }\n                        }\n                    }\n                    // Add child ids to ids list.\n                    childIds = `${childIds ? `${childIds} ` : ''}${child.properties.id}`;\n                    delete child.properties.id;\n                    delete childPropertiesToMerge.id;\n                }\n\n                childClasses = classes;\n                if (child.properties.class) {\n                    // Check for styling associated with class.\n                    if (_globalStyles) {\n                        const classArray = child.properties.class.split(' ');\n                        for (let j = 0, numClasses = classArray.length; j < numClasses; j++) {\n                            const classStyle = _globalStyles[`.${classArray[j]}`];\n                            if (classStyle) {\n                                childPropertiesToMerge = {\n                                    ...childPropertiesToMerge,\n                                    ...classStyle,\n                                };\n                            }\n                        }\n                    }\n                    // Add child classes to classes list.\n                    childClasses = `${childClasses ? `${childClasses} ` : ''}${\n                        child.properties.class\n                    }`;\n                    delete child.properties.class;\n                    delete childPropertiesToMerge.class;\n                }\n\n                // Add child properties to properties list.\n                childProperties = properties;\n                // Check if the child has inline styles.\n                if ((childPropertiesToMerge as any).style) {\n                    const style = this.parseStyleToObject(\n                        `#this { ${(childPropertiesToMerge as any).style} }`\n                    )['#this'];\n                    childPropertiesToMerge = { ...style, ...childPropertiesToMerge };\n                    delete (childPropertiesToMerge as any).style;\n                }\n                const propertyKeys = Object.keys(childPropertiesToMerge);\n                for (let j = 0, numProperties = propertyKeys.length; j < numProperties; j++) {\n                    const key = propertyKeys[j] as keyof Properties;\n                    if (childPropertiesToMerge[key] !== undefined) {\n                        // Make a copy.\n                        if (!childProperties || childProperties === properties)\n                            childProperties = { ...properties };\n                        // In the case of opacity, multiply parent and child.\n                        if (key === SVG_STYLE_OPACITY) {\n                            /* c8 ignore next 6 */\n                            if (!isNumber(childPropertiesToMerge[key]))\n                                throw new Error(\n                                    `Opacity is not number: \"${JSON.stringify(\n                                        childPropertiesToMerge[key]\n                                    )}\".`\n                                );\n                            childProperties[key] =\n                                (childPropertiesToMerge[key] as number) *\n                                (childProperties[key] !== undefined\n                                    ? (childProperties[key] as number)\n                                    : 1);\n                        }\n                        // Only use child style if parent style is not defined.\n                        // @ts-ignore\n                        if (childProperties[key] === undefined)\n                            // @ts-ignore\n                            childProperties[key] = childPropertiesToMerge[key];\n                    }\n                }\n            }\n\n            // Callback.\n            if (child.tagName !== G) {\n                // Make copies of all child properties.\n                callback(\n                    child,\n                    childTransform ? copyTransform(childTransform) : undefined,\n                    childIds?.slice(),\n                    childClasses?.slice(),\n                    /* c8 ignore next 3 */\n                    childProperties\n                        ? ({ ...childProperties } as GeometryElementProperties)\n                        : undefined\n                );\n            }\n\n            if (child.children) {\n                this.deepIterChildren(\n                    callback,\n                    child,\n                    childTransform,\n                    childIds,\n                    childClasses,\n                    childProperties\n                );\n            }\n        }\n    }\n\n    /**\n     * Get a flat list of geometry elements in the SVG.\n     * The return value is cached internally.\n     */\n    get elements() {\n        if (this._elements) return this._elements;\n\n        // Init output arrays.\n        const elements: FlatElement[] = [];\n        const parsingErrors: string[] = [];\n        const parsingWarnings: string[] = [];\n\n        // Flatten all children and return.\n        this.deepIterChildren((child, transform, ids, classes, properties) => {\n            /* c8 ignore next 4 */\n            if (child.value) {\n                parsingErrors.push(`Skipping child ${child.tagName} with value: ${child.value}`);\n                return;\n            }\n            /* c8 ignore next 6 */\n            if (child.metadata) {\n                parsingErrors.push(\n                    `Skipping child ${child.tagName} with metadata: ${child.metadata}`\n                );\n                return;\n            }\n            if (!child.tagName) {\n                parsingErrors.push(`Skipping child with no tagName: ${JSON.stringify(child)}.`);\n                return;\n            }\n            /* c8 ignore next 4 */\n            if (!properties) {\n                parsingErrors.push(`Skipping child with no properties: ${JSON.stringify(child)}.`);\n                return;\n            }\n\n            if (ids) properties.ids = ids;\n            if (classes) properties.class = classes;\n\n            const flatChild = {\n                tagName: child.tagName as GeometryElementTagName,\n                properties,\n            } as FlatElement;\n            if (transform) flatChild.transform = transform;\n            elements.push(flatChild);\n        });\n\n        this._elements = elements; // Save for later so we don't need to recompute.\n\n        // Save any errors or warnings so we can query these later.\n        this.errors.push(...parsingErrors);\n        this.warnings.push(...parsingWarnings);\n\n        return elements;\n    }\n\n    private static wrapWithSVGTag(root: ElementNode, svgElements: string) {\n        const properties = root.properties || /* c8 ignore next */ {};\n        return `<svg ${Object.keys(properties)\n            .map((key) => `${key}=\"${properties[key as keyof Properties]}\"`)\n            .join(' ')}>\\n${svgElements}\\n</svg>`;\n    }\n\n    /**\n     * Get svg string from elements array.\n     * @private\n     */\n    private static elementsAsSVG(root: ElementNode, elements: FlatElement[]) {\n        return FlatSVG.wrapWithSVGTag(\n            root,\n            elements\n                .map((element) => {\n                    const { tagName, properties, transform } = element;\n                    const propertiesKeys = Object.keys(properties);\n                    let propertiesString = '';\n                    for (let i = 0, length = propertiesKeys.length; i < length; i++) {\n                        const key = propertiesKeys[i] as keyof typeof properties;\n                        propertiesString += `${key}=\"${properties[key]}\" `;\n                    }\n                    if (transform)\n                        propertiesString += `transform=\"${transformToString(transform)}\" `;\n                    return `<${tagName} ${propertiesString}/>`;\n                })\n                .join('\\n')\n        );\n    }\n\n    /**\n     * Get svg string from FlatSVG.elements array.\n     */\n    get elementsAsSVG() {\n        const { elements, root } = this;\n        return FlatSVG.elementsAsSVG(root, elements);\n    }\n\n    /**\n     * Get a flat list of SVG geometry represented as paths.\n     * The return value is cached internally.\n     */\n    get paths() {\n        if (this._paths) return this._paths;\n\n        const { elements, _preserveArcs } = this; // First query elements.\n\n        // Init output arrays.\n        const paths: FlatPath[] = [];\n        const pathParsers: (PathParser | undefined)[] = [];\n        const parsingErrors: string[] = [];\n        const parsingWarnings: string[] = [];\n\n        for (let i = 0; i < elements.length; i++) {\n            const child = elements[i];\n            const { transform, tagName, properties } = child;\n\n            const propertiesCopy: { [key: string]: any } = { ...properties };\n\n            // Convert all object types to path with absolute coordinates and transform applied.\n            let d: string | undefined;\n            let pathParser: PathParser | undefined;\n            switch (tagName) {\n                case LINE:\n                    d = convertLineToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.x1;\n                    delete propertiesCopy.y1;\n                    delete propertiesCopy.x2;\n                    delete propertiesCopy.y2;\n                    break;\n                case RECT:\n                    d = convertRectToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.x;\n                    delete propertiesCopy.y;\n                    delete propertiesCopy.width;\n                    delete propertiesCopy.height;\n                    break;\n                case POLYGON:\n                    d = convertPolygonToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.points;\n                    break;\n                case POLYLINE:\n                    d = convertPolylineToPath(properties, parsingErrors, transform);\n                    delete propertiesCopy.points;\n                    break;\n                case CIRCLE:\n                    pathParser = convertCircleToPath(\n                        properties,\n                        parsingErrors,\n                        _preserveArcs,\n                        transform\n                    );\n                    if (pathParser) d = pathParser.toString();\n                    delete propertiesCopy.cx;\n                    delete propertiesCopy.cy;\n                    delete propertiesCopy.r;\n                    break;\n                case ELLIPSE:\n                    pathParser = convertEllipseToPath(\n                        properties,\n                        parsingErrors,\n                        _preserveArcs,\n                        transform\n                    );\n                    if (pathParser) d = pathParser.toString();\n                    delete propertiesCopy.cx;\n                    delete propertiesCopy.cy;\n                    delete propertiesCopy.rx;\n                    delete propertiesCopy.ry;\n                    break;\n                case PATH:\n                    pathParser = convertPathToPath(\n                        properties,\n                        parsingErrors,\n                        _preserveArcs,\n                        transform\n                    );\n                    if (pathParser) d = pathParser.toString();\n                    delete propertiesCopy.d;\n                    break;\n                default:\n                    parsingWarnings.push(`Unsupported tagname: \"${tagName}\".`);\n                    break;\n            }\n            if (d === undefined || d === '') {\n                continue;\n            }\n\n            const path = {\n                properties: {\n                    ...propertiesCopy,\n                    d,\n                },\n            };\n            paths.push(path);\n            pathParsers.push(pathParser);\n        }\n\n        this._paths = paths; // Save for later so we don't need to recompute.\n        this._pathParsers = pathParsers; // Save pathParsers in case segments are queried.\n\n        // Save any errors or warnings so we can query these later.\n        this.errors.push(...parsingErrors);\n        this.warnings.push(...parsingWarnings);\n\n        return paths;\n    }\n\n    /**\n     * Get svg string from paths array.\n     * @private\n     */\n    private static pathsAsSVG(root: ElementNode, paths: FlatPath[]) {\n        return FlatSVG.wrapWithSVGTag(\n            root,\n            paths\n                .map((path) => {\n                    const { properties } = path;\n                    const propertiesKeys = Object.keys(properties);\n                    let propertiesString = '';\n                    for (let i = 0, length = propertiesKeys.length; i < length; i++) {\n                        const key = propertiesKeys[i] as keyof typeof properties;\n                        propertiesString += `${key}=\"${properties[key]}\" `;\n                    }\n                    return `<path ${propertiesString}/>`;\n                })\n                .join('\\n')\n        );\n    }\n\n    /**\n     * Get svg string from FlatSVG.paths array.\n     */\n    get pathsAsSVG() {\n        const { paths, root } = this;\n        return FlatSVG.pathsAsSVG(root, paths);\n    }\n\n    /**\n     * Get a flat list of SVG edge segments (as lines, quadratic/cubic beziers, or arcs).\n     * The return value is cached internally.\n     */\n    get segments() {\n        if (this._segments) return this._segments;\n\n        const { paths } = this; // First query paths.\n        const { _pathParsers } = this; // Once paths are computed, _pathParsers becomes available.\n        /* c8 ignore next 3 */\n        if (!_pathParsers) {\n            console.warn('Initing new _pathParsers array, we should never hit this.');\n        }\n        const pathParsers =\n            _pathParsers || /* c8 ignore next */ new Array(paths.length).fill(undefined);\n\n        // Init output arrays.\n        const segments: FlatSegment[] = [];\n        const parsingErrors: string[] = [];\n        const parsingWarnings: string[] = [];\n\n        for (let i = 0, numPaths = paths.length; i < numPaths; i++) {\n            const path = paths[i];\n            const { properties } = path;\n            let pathParser = pathParsers[i];\n            if (pathParser === undefined) {\n                // Define a pathParser for elements that were not originally paths.\n                pathParser = svgpath(properties.d);\n                pathParsers[i] = pathParser;\n            }\n            /* c8 ignore next 4 */\n            if (pathParser.err) {\n                // Should not hit this.\n                parsingErrors.push(`Problem parsing path to segments with ${pathParser.err}.`);\n            }\n            // Split paths to segments.\n            const startPoint = [0, 0];\n            pathParser.iterate((command: any, index: number, x: number, y: number) => {\n                const p1 = [x, y] as [number, number];\n\n                // Copy parent properties to segment (minus the \"d\" property).\n                const propertiesCopy: { [key: string]: any } = { ...properties };\n                delete propertiesCopy.d;\n                const segment = {\n                    p1,\n                    properties: propertiesCopy,\n                } as FlatSegment;\n\n                const segmentType = command[0];\n                /* c8 ignore next 6 */\n                if (index === 0 && segmentType !== 'M') {\n                    // Should not hit this, it should be caught earlier by SvgPath.\n                    parsingErrors.push(\n                        `Malformed svg path: \"${pathParser.toString()}\", should start with M command.`\n                    );\n                }\n                switch (segmentType) {\n                    case 'M':\n                        startPoint[0] = command[1];\n                        startPoint[1] = command[2];\n                        return;\n                    case 'L':\n                        segment.p2 = [command[1], command[2]];\n                        break;\n                    case 'H':\n                        segment.p2 = [command[1], y];\n                        break;\n                    case 'V':\n                        segment.p2 = [x, command[1]];\n                        break;\n                    case 'Q':\n                        (segment as FlatBezierSegment).controlPoints = [[command[1], command[2]]];\n                        segment.p2 = [command[3], command[4]];\n                        break;\n                    case 'C':\n                        (segment as FlatBezierSegment).controlPoints = [\n                            [command[1], command[2]],\n                            [command[3], command[4]],\n                        ];\n                        segment.p2 = [command[5], command[6]];\n                        break;\n                    case 'A':\n                        (segment as FlatArcSegment).rx = command[1];\n                        (segment as FlatArcSegment).ry = command[2];\n                        (segment as FlatArcSegment).xAxisRotation = command[3];\n                        (segment as FlatArcSegment).largeArcFlag = !!command[4];\n                        (segment as FlatArcSegment).sweepFlag = !!command[5];\n                        segment.p2 = [command[6], command[7]];\n                        break;\n                    case 'z':\n                    case 'Z':\n                        // Get first point since last move command.\n                        if (startPoint[0] === x && startPoint[1] === y) {\n                            // Ignore zero length line.\n                            return;\n                        }\n                        segment.p2 = [startPoint[0], startPoint[1]];\n                        break;\n                    /* c8 ignore next 4 */\n                    default:\n                        // Should not hit this.\n                        parsingErrors.push(`Unknown <path> command: ${segmentType}.`);\n                        return;\n                }\n                segments.push(segment);\n            });\n        }\n        this._segments = segments; // Save for later so we don't need to recompute.\n\n        // We no longer need to hold _pathParsers.\n        delete this._pathParsers;\n\n        // Save any errors or warnings so we can query these later.\n        this.errors.push(...parsingErrors);\n        this.warnings.push(...parsingWarnings);\n\n        return segments;\n    }\n\n    /**\n     * Get svg string from paths array.\n     * @private\n     */\n    private static segmentsAsSVG(root: ElementNode, segments: FlatSegment[]) {\n        return FlatSVG.wrapWithSVGTag(\n            root,\n            segments\n                .map((segment) => {\n                    const { p1, p2, properties } = segment;\n                    const propertiesKeys = Object.keys(properties);\n                    let propertiesString = '';\n                    for (let i = 0, length = propertiesKeys.length; i < length; i++) {\n                        const key = propertiesKeys[i] as keyof typeof properties;\n                        propertiesString += `${key}=\"${properties[key]}\" `;\n                    }\n                    if ((segment as FlatBezierSegment).controlPoints) {\n                        const { controlPoints } = segment as FlatBezierSegment;\n                        const curveType = controlPoints.length === 1 ? 'Q' : 'C';\n                        let d = `M ${p1[0]} ${p1[1]} ${curveType} ${controlPoints[0][0]} ${controlPoints[0][1]} `;\n                        if (curveType === 'C')\n                            d += `${controlPoints[1][0]} ${controlPoints[1][1]} `;\n                        d += `${p2[0]} ${p2[1]} `;\n                        return `<path d=\"${d}\" ${propertiesString}/>`;\n                    }\n                    if ((segment as FlatArcSegment).rx !== undefined) {\n                        const { rx, ry, xAxisRotation, largeArcFlag, sweepFlag } =\n                            segment as FlatArcSegment;\n                        return `<path d=\"M ${p1[0]} ${p1[1]} A ${rx} ${ry} ${xAxisRotation} ${\n                            /* c8 ignore next */ largeArcFlag ? 1 : 0\n                        } ${sweepFlag ? 1 : 0} ${p2[0]} ${p2[1]}\" ${propertiesString}/>`;\n                    }\n                    return `<line x1=\"${p1[0]}\" y1=\"${p1[1]}\" x2=\"${p2[0]}\" y2=\"${p2[1]}\" ${propertiesString}/>`;\n                })\n                .join('\\n')\n        );\n    }\n\n    /**\n     * Get svg string from FlatSVG.segments array.\n     */\n    get segmentsAsSVG() {\n        const { segments, root } = this;\n        return FlatSVG.segmentsAsSVG(root, segments);\n    }\n\n    private static filter(\n        objects: FlatElement[],\n        filterFunction: (object: FlatElement, index: number) => boolean\n    ): FlatElement[];\n    private static filter(\n        objects: FlatPath[],\n        filterFunction: (object: FlatPath, index: number) => boolean\n    ): FlatPath[];\n    private static filter(\n        objects: FlatSegment[],\n        filterFunction: (object: FlatSegment, index: number) => boolean\n    ): FlatSegment[];\n    private static filter(\n        objects: (FlatElement | FlatPath | FlatSegment)[],\n        filterFunction: (object: any, index: number) => boolean\n    ) {\n        const matches: (FlatElement | FlatPath | FlatSegment)[] = [];\n        // const remaining: (FlatElement | FlatPath | FlatSegment)[] = [];\n        for (let i = 0; i < objects.length; i++) {\n            const object = objects[i];\n            if (filterFunction(object, i)) matches.push(object);\n            // else remaining.push(object);\n        }\n        return matches;\n    }\n\n    private static filterByStyle(\n        objects: FlatElement[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ): { matches: FlatElement[]; computedProperties: ComputedProperties[] };\n    private static filterByStyle(\n        objects: FlatPath[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ): { matches: FlatPath[]; computedProperties: ComputedProperties[] };\n    private static filterByStyle(\n        objects: FlatSegment[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ): { matches: FlatSegment[]; computedProperties: ComputedProperties[] };\n    private static filterByStyle(\n        objects: (FlatElement | FlatPath | FlatSegment)[],\n        filter: PropertiesFilter | PropertiesFilter[],\n        computedProperties?: ComputedProperties[],\n        exclude?: boolean[]\n    ) {\n        const filterArray = Array.isArray(filter) ? filter : [filter];\n        const filterArrayValues: (string | number | Colord | number[])[] = [];\n        // Precompute colors.\n        for (let i = 0; i < filterArray.length; i++) {\n            const { key, value } = filterArray[i];\n            filterArrayValues.push(value);\n            switch (key) {\n                case SVG_STYLE_STROKE_COLOR:\n                case SVG_STYLE_FILL:\n                case SVG_STYLE_COLOR:\n                    filterArrayValues[i] = colord(value as AnyColor | Colord);\n                    break;\n                case SVG_STYLE_STROKE_DASH_ARRAY:\n                    filterArrayValues[i] = convertToDashArray(value as string | number | number[]);\n                    break;\n            }\n        }\n\n        const matches = FlatSVG.filter(objects as any[], (object, i) => {\n            if (exclude && exclude[i]) return false;\n            const { properties } = object;\n            // Check that this object meets ALL the the style requirements.\n            for (let j = 0; j < filterArray.length; j++) {\n                const { key, tolerance } = filterArray[j];\n                let value = filterArrayValues[j];\n                // Special handling of certain keys.\n                let passed = true;\n                switch (key) {\n                    case SVG_STYLE_STROKE_COLOR:\n                    case SVG_STYLE_FILL:\n                    case SVG_STYLE_COLOR:\n                    case SVG_STYLE_OPACITY:\n                        let color: Colord | undefined;\n                        const computedKey =\n                            key === SVG_STYLE_OPACITY ? SVG_STYLE_STROKE_COLOR : key;\n                        if (computedProperties) {\n                            color = computedProperties[i][computedKey];\n                        }\n                        if (color === undefined) {\n                            color = colord(properties[computedKey] as AnyColor);\n                            // Multiply color.a by properties.opacity.\n                            const opacity = properties[SVG_STYLE_OPACITY];\n                            if (opacity !== undefined) {\n                                const alpha = opacity * color.rgba.a; // Use color.rgba.a instead of alpha() to avoid rounding.\n                                color = color.alpha(alpha); // This makes a copy.\n                            }\n\n                            // Init computed properties array if needed.\n                            if (!computedProperties) {\n                                computedProperties = new Array(\n                                    objects.length\n                                ) as ComputedProperties[];\n                                // Fill with empty objects.\n                                // Don't use Array.fill({}) bc all elements will point to same empty object instance.\n                                for (let k = 0; k < objects.length; k++) {\n                                    computedProperties[k] = {};\n                                }\n                            }\n                            computedProperties[i][computedKey] = color;\n                        }\n                        if (\n                            key === SVG_STYLE_STROKE_COLOR ||\n                            key === SVG_STYLE_FILL ||\n                            key === SVG_STYLE_COLOR\n                        ) {\n                            passed = color.delta(value as AnyColor) <= (tolerance || 0);\n                            break;\n                        }\n                        // Else check color opacity for opacity.\n                        // Use color.rgba.a instead of alpha() to avoid rounding.\n                        passed = Math.abs(color.rgba.a - (value as number)) <= (tolerance || 0);\n                        break;\n                    case SVG_STYLE_STROKE_DASH_ARRAY:\n                        let dashArray: number[] | undefined;\n                        if (computedProperties) {\n                            dashArray = computedProperties[i][key];\n                        }\n                        if (!dashArray) {\n                            dashArray = convertToDashArray(properties[key] as string | number);\n                            // Init computed properties array if needed.\n                            if (!computedProperties) {\n                                computedProperties = new Array(\n                                    objects.length\n                                ) as ComputedProperties[];\n                                // Fill with empty objects.\n                                // Don't use Array.fill({}) bc all elements will point to same empty object instance.\n                                for (let k = 0; k < objects.length; k++) {\n                                    computedProperties[k] = {};\n                                }\n                            }\n                            computedProperties[i][key] = dashArray;\n                        }\n                        if (dashArray.length !== (value as number[]).length) {\n                            if (dashArray.length === (value as number[]).length * 2) {\n                                value = [...(value as number[]), ...(value as number[])];\n                            } else if (dashArray.length * 2 === (value as number[]).length) {\n                                dashArray = [\n                                    ...(dashArray as number[]),\n                                    ...(dashArray as number[]),\n                                ];\n                            } else {\n                                passed = false;\n                            }\n                        }\n                        if (passed) {\n                            for (let k = 0; k < (value as number[]).length; k++) {\n                                if (\n                                    Math.abs((value as number[])[k] - dashArray[k]) >\n                                    (tolerance || 0)\n                                )\n                                    passed = false;\n                            }\n                        }\n                        break;\n                    default:\n                        // Assume any remaining keys correspond to numbers.\n                        if (!isNumber(value)) {\n                            passed = false;\n                            throw new Error(\n                                `flat-svg cannot handle filters with key \"${key}\" and value ${JSON.stringify(\n                                    value\n                                )} of type ${typeof value}.  Please submit an issue to https://github.com/amandaghassaei/flat-svg if this feature should be added.`\n                            );\n                            /* c8 ignore next 2 */\n                            break;\n                        }\n                        if (\n                            properties[key as keyof typeof properties] === undefined ||\n                            Math.abs(\n                                (properties[key as keyof typeof properties] as number) -\n                                    (value as number)\n                            ) > (tolerance || 0)\n                        ) {\n                            passed = false;\n                        }\n                        break;\n                }\n                if (!passed) return false;\n            }\n            return true;\n        });\n        return { matches: matches as (FlatElement | FlatPath | FlatSegment)[], computedProperties };\n    }\n\n    /**\n     * Filter FlatSVG elements by style properties.\n     * @param filter - Style properties to filter for.\n     * @param exclude - Optionally pass an array of booleans of the same length as elements with \"true\" indicating that element should be excluded from the filter.\n     */\n    filterElementsByStyle(filter: PropertiesFilter | PropertiesFilter[], exclude?: boolean[]) {\n        const { elements } = this;\n        const { matches, computedProperties } = FlatSVG.filterByStyle(\n            elements,\n            filter,\n            this._computedElementProperties,\n            exclude\n        );\n        this._computedElementProperties = computedProperties;\n        return matches;\n    }\n\n    /**\n     * Filter FlatSVG paths by style properties.\n     * @param filter - Style properties to filter for.\n     * @param exclude - Optionally pass an array of booleans of the same length as paths with \"true\" indicating that path should be excluded from the filter.\n     */\n    filterPathsByStyle(filter: PropertiesFilter | PropertiesFilter[], exclude?: boolean[]) {\n        const { paths } = this;\n        const { matches, computedProperties } = FlatSVG.filterByStyle(\n            paths,\n            filter,\n            this._computedPathProperties,\n            exclude\n        );\n        this._computedPathProperties = computedProperties;\n        return matches;\n    }\n\n    /**\n     * Filter FlatSVG segments by style properties.\n     * @param filter - Style properties to filter for.\n     * @param exclude - Optionally pass an array of booleans of the same length as segments with \"true\" indicating that segment should be excluded from the filter.\n     */\n    filterSegmentsByStyle(filter: PropertiesFilter | PropertiesFilter[], exclude?: boolean[]) {\n        const { segments } = this;\n        const { matches, computedProperties } = FlatSVG.filterByStyle(\n            segments,\n            filter,\n            this._computedSegmentProperties,\n            exclude\n        );\n        this._computedSegmentProperties = computedProperties;\n        return matches;\n    }\n}\n"],"names":["r","t","n","e","u","a","o","i","h","b","l","p","M","w","Matrix","matrix","require$$0","a2c","ellipse","require$$1","require$$2","require$$3","require$$4","svgpath","extend","cssParse","colord"],"mappings":"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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,SAAS,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAgB,kllG;CACO,MAAM,GAAG,GAAG,KAAK,CAAC;CAElB,MAAM,CAAC,GAAG,GAAG,CAAC;CAIrB;CACO,MAAM,IAAI,GAAG,MAAM,CAAC;CACpB,MAAM,IAAI,GAAG,MAAM,CAAC;CACpB,MAAM,OAAO,GAAG,SAAS,CAAC;CAC1B,MAAM,QAAQ,GAAG,UAAU,CAAC;CAC5B,MAAM,IAAI,GAAG,MAAM,CAAC;CACpB,MAAM,MAAM,GAAG,QAAQ,CAAC;CACxB,MAAM,OAAO,GAAG,SAAS,CAAC;CAEjC;CACO,MAAM,cAAc,GAAG,MAAM,CAAC;CAE9B,MAAM,sBAAsB,GAAG,QAAQ,CAAC;CACxC,MAAM,eAAe,GAAG,OAAO,CAAC;CAChC,MAAM,iBAAiB,GAAG,SAAS,CAAC;CAGpC,MAAM,2BAA2B,GAAG,kBAAkB;;;;;;;;CCrB7D,IAAI,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACvF;CACA,IAAI,cAAc,GAAG;CACrB,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;CACxE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;CAChE,CAAC,CAAC;AACF;CACA,SAAS,OAAO,CAAC,EAAE,EAAE;CACrB,EAAE,OAAO,CAAC,EAAE,KAAK,IAAI,MAAM,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,MAAM,CAAC,KAAK,EAAE,KAAK,MAAM,CAAC;CAC7E;CACA,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC;CACrF,KAAK,EAAE,IAAI,MAAM,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;CACtD,CAAC;AACD;CACA,SAAS,SAAS,CAAC,IAAI,EAAE;CACzB;CACA,EAAE,QAAQ,IAAI,GAAG,IAAI;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI,QAAQ;CACrB,IAAI,KAAK,IAAI;CACb,MAAM,OAAO,IAAI,CAAC;CAClB,GAAG;CACH,EAAE,OAAO,KAAK,CAAC;CACf,CAAC;AACD;CACA,SAAS,KAAK,CAAC,IAAI,EAAE;CACrB,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,CAAC;CAChC,CAAC;AACD;CACA,SAAS,OAAO,CAAC,IAAI,EAAE;CACvB,EAAE,QAAQ,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE;CACpC,CAAC;AACD;CACA,SAAS,YAAY,CAAC,IAAI,EAAE;CAC5B,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE;CAClC,UAAU,IAAI,KAAK,IAAI;CACvB,UAAU,IAAI,KAAK,IAAI;CACvB,UAAU,IAAI,KAAK,IAAI,CAAC;CACxB,CAAC;AACD;AACA;CACA,SAAS,KAAK,CAAC,IAAI,EAAE;CACrB,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;CAClB,EAAE,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;CACrB,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;CAC5B,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;CACnB,EAAE,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC;CACpB,EAAE,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC;CACnB,EAAE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;CACxB,EAAE,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC;CACnB,CAAC;AACD;CACA,SAAS,UAAU,CAAC,KAAK,EAAE;CAC3B,EAAE,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;CACjF,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CAClB,GAAG;CACH,CAAC;AACD;AACA;CACA,SAAS,QAAQ,CAAC,KAAK,EAAE;CACzB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9C;CACA,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS;CAC1B,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;CACpB,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CAClB,IAAI,OAAO;CACX,GAAG;AACH;CACA,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS;CAC1B,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;CACpB,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CAClB,IAAI,OAAO;CACX,GAAG;AACH;CACA,EAAE,KAAK,CAAC,GAAG,GAAG,+CAA+C,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;CAClF,CAAC;AACD;AACA;CACA,SAAS,SAAS,CAAC,KAAK,EAAE;CAC1B,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK;CACzB,MAAM,KAAK,GAAG,KAAK;CACnB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG;CACrB,MAAM,SAAS,GAAG,KAAK;CACvB,MAAM,UAAU,GAAG,KAAK;CACxB,MAAM,UAAU,GAAG,KAAK;CACxB,MAAM,MAAM,GAAG,KAAK;CACpB,MAAM,EAAE,CAAC;AACT;CACA,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;CACpB,IAAI,KAAK,CAAC,GAAG,GAAG,gCAAgC,GAAG,KAAK,GAAG,GAAG,CAAC;CAC/D,IAAI,OAAO;CACX,GAAG;CACH,EAAE,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACpC;CACA,EAAE,IAAI,EAAE,KAAK,IAAI,WAAW,EAAE,KAAK,IAAI,SAAS;CAChD,IAAI,KAAK,EAAE,CAAC;CACZ,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAC1D,GAAG;AACH;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,SAAS;CAC1C,IAAI,KAAK,CAAC,GAAG,GAAG,uDAAuD,GAAG,KAAK,GAAG,GAAG,CAAC;CACtF,IAAI,OAAO;CACX,GAAG;AACH;CACA,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS;CAC1B,IAAI,SAAS,IAAI,EAAE,KAAK,IAAI,QAAQ,CAAC;CACrC,IAAI,KAAK,EAAE,CAAC;AACZ;CACA,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1D;CACA,IAAI,IAAI,SAAS,IAAI,KAAK,GAAG,GAAG,EAAE;CAClC;CACA,MAAM,IAAI,EAAE,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;CAC7B,QAAQ,KAAK,CAAC,GAAG,GAAG,qEAAqE,GAAG,KAAK,GAAG,GAAG,CAAC;CACxG,QAAQ,OAAO;CACf,OAAO;CACP,KAAK;AACL;CACA,IAAI,OAAO,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;CACjE,MAAM,KAAK,EAAE,CAAC;CACd,MAAM,UAAU,GAAG,IAAI,CAAC;CACxB,KAAK;CACL,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAC1D,GAAG;AACH;CACA,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS;CAC1B,IAAI,MAAM,GAAG,IAAI,CAAC;CAClB,IAAI,KAAK,EAAE,CAAC;CACZ,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;CAClD,MAAM,KAAK,EAAE,CAAC;CACd,MAAM,UAAU,GAAG,IAAI,CAAC;CACxB,KAAK;CACL,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAC1D,GAAG;AACH;CACA,EAAE,IAAI,EAAE,KAAK,IAAI,WAAW,EAAE,KAAK,IAAI,SAAS;CAChD,IAAI,IAAI,MAAM,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;CAC9C,MAAM,KAAK,CAAC,GAAG,GAAG,0CAA0C,GAAG,KAAK,GAAG,GAAG,CAAC;CAC3E,MAAM,OAAO;CACb,KAAK;AACL;CACA,IAAI,KAAK,EAAE,CAAC;AACZ;CACA,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAC1D,IAAI,IAAI,EAAE,KAAK,IAAI,WAAW,EAAE,KAAK,IAAI,SAAS;CAClD,MAAM,KAAK,EAAE,CAAC;CACd,KAAK;CACL,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;CAC9D,MAAM,OAAO,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;CACnE,QAAQ,KAAK,EAAE,CAAC;CAChB,OAAO;CACP,KAAK,MAAM;CACX,MAAM,KAAK,CAAC,GAAG,GAAG,0CAA0C,GAAG,KAAK,GAAG,GAAG,CAAC;CAC3E,MAAM,OAAO;CACb,KAAK;CACL,GAAG;AACH;CACA,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;CACtB,EAAE,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;CACjE,CAAC;AACD;AACA;CACA,SAAS,eAAe,CAAC,KAAK,EAAE;CAChC,EAAE,IAAI,GAAG,EAAE,KAAK,CAAC;AACjB;CACA;AACA;CACA;CACA;CACA;CACA,EAAE,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;CACzC,EAAE,KAAK,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;AAC5B;CACA,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;AAC1B;CACA,EAAE,IAAI,KAAK,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;CAC1C,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CACrD,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC7B,IAAI,KAAK,GAAG,GAAG,CAAC;CAChB,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;CACpC,GAAG;AACH;CACA,EAAE,IAAI,KAAK,KAAK,GAAG,EAAE;CACrB,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;CAC9C,GAAG,MAAM;AACT;CACA,IAAI,OAAO,MAAM,CAAC,MAAM,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;CAChD,MAAM,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CAC9E,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;CAC/B,QAAQ,MAAM;CACd,OAAO;CACP,KAAK;CACL,GAAG;CACH,CAAC;AACD;AACA;CACA,SAAS,WAAW,CAAC,KAAK,EAAE;CAC5B,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG;CACrB,MAAM,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;AACnD;CACA,EAAE,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;CACnC,EAAE,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;CAC/C,EAAE,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1B;CACA,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;CAC3B,IAAI,KAAK,CAAC,GAAG,GAAG,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;CACpG,IAAI,OAAO;CACX,GAAG;AACH;CACA,EAAE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AACnE;CACA,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;CAChB,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;AACpB;CACA,EAAE,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;AAClB;CACA,EAAE,IAAI,CAAC,WAAW,EAAE;CACpB;CACA,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;CAC3B,IAAI,OAAO;CACX,GAAG;AACH;CACA,EAAE,WAAW,GAAG,KAAK,CAAC;AACtB;CACA,EAAE,SAAS;CACX,IAAI,KAAK,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;CACtC,MAAM,IAAI,MAAM,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;CAC1D,WAAW,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5B;CACA,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE;CAC5B,QAAQ,eAAe,CAAC,KAAK,CAAC,CAAC;CAC/B,QAAQ,OAAO;CACf,OAAO;CACP,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACnC;CACA,MAAM,UAAU,CAAC,KAAK,CAAC,CAAC;CACxB,MAAM,WAAW,GAAG,KAAK,CAAC;AAC1B;CACA,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS;CACnF,QAAQ,KAAK,CAAC,KAAK,EAAE,CAAC;CACtB,QAAQ,UAAU,CAAC,KAAK,CAAC,CAAC;CAC1B,QAAQ,WAAW,GAAG,IAAI,CAAC;CAC3B,OAAO;CACP,KAAK;AACL;CACA;CACA,IAAI,IAAI,WAAW,EAAE;CACrB,MAAM,SAAS;CACf,KAAK;AACL;CACA,IAAI,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,EAAE;CAClC,MAAM,MAAM;CACZ,KAAK;AACL;CACA;CACA,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;CAC3D,MAAM,MAAM;CACZ,KAAK;CACL,GAAG;AACH;CACA,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;CACzB,CAAC;AACD;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,IAAA,UAAc,GAAG,SAAS,SAAS,CAAC,OAAO,EAAE;CAC7C,EAAE,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;CACjC,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AACtB;CACA,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;AACpB;CACA,EAAE,OAAO,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE;CACjD,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;CACvB,GAAG;AACH;CACA,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE;CAC3B,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;CAC9C,MAAM,KAAK,CAAC,GAAG,GAAG,8CAA8C,CAAC;CACjE,MAAM,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;CACxB,KAAK,MAAM;CACX,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAC/B,KAAK;CACL,GAAG;AACH;CACA,EAAE,OAAO;CACT,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG;CAClB,IAAI,QAAQ,EAAE,KAAK,CAAC,MAAM;CAC1B,GAAG,CAAC;CACJ,CAAC;;CCjTD;CACA;CACA;CACA,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE;CACzB,EAAE,OAAO;CACT,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACjC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACjC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACjC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACjC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACzC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACzC,GAAG,CAAC;CACJ,CAAC;AACD;AACA;CACA,SAASC,QAAM,GAAG;CAClB,EAAE,IAAI,EAAE,IAAI,YAAYA,QAAM,CAAC,EAAE,EAAE,OAAO,IAAIA,QAAM,EAAE,CAAC,EAAE;CACzD,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;CAClB,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACpB,CAAC;AACD;AACA;AACAA,SAAM,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;CACvC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;CACxF,IAAI,OAAO,IAAI,CAAC;CAChB,GAAG;CACH,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACpB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACrB,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;AACAA,SAAM,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;CAC/C,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;CAC5B,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACtB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;CAC5C,GAAG;CACH,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;AACAA,SAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;CAC3C,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;CAC5B,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACtB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CAC5C,GAAG;CACH,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;AACAA,SAAM,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;CACnD,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACpB;CACA,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE;CACnB,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3B;CACA,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;CAChC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxB;CACA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CACnD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB;CACA,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;CAC7B,GAAG;CACH,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;AACAA,SAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE;CAC1C,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE;CACnB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACtB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CACxE,GAAG;CACH,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;AACAA,SAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE;CAC1C,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE;CACnB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACtB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;CACxE,GAAG;CACH,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;AACAA,SAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;CACvC,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;CAClB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC;CACtB,GAAG;AACH;CACA,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;CAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;CACtC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC;CACtB,GAAG;AACH;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B;CACA,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;CAC/B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC;CACtB,GAAG;AACH;CACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC9C,IAAI,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CACpD,GAAG;AACH;CACA,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC;CACpB,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA;AACAA,SAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE;CACpD,EAAE,IAAI,CAAC,CAAC;AACR;CACA;CACA,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC9C;CACA;CACA;CACA;CACA;AACA;CACA,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;CACnB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;CAChC,GAAG;AACH;CACA,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AACjB;CACA;CACA,EAAE,OAAO;CACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACjD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACjD,GAAG,CAAC;CACJ,CAAC,CAAC;AACF;AACA;CACA,IAAAC,QAAc,GAAGD,QAAM;;CC5IvB,IAAI,MAAM,GAAGE,QAAmB,CAAC;AACjC;CACA,IAAI,UAAU,GAAG;CACjB,EAAE,MAAM,EAAE,IAAI;CACd,EAAE,KAAK,EAAE,IAAI;CACb,EAAE,MAAM,EAAE,IAAI;CACd,EAAE,SAAS,EAAE,IAAI;CACjB,EAAE,KAAK,EAAE,IAAI;CACb,EAAE,KAAK,EAAE,IAAI;CACb,CAAC,CAAC;AACF;CACA,IAAI,YAAY,MAAM,wEAAwE,CAAC;CAC/F,IAAI,eAAe,GAAG,QAAQ,CAAC;AAC/B;AACA;CACA,IAAA,eAAc,GAAG,SAAS,cAAc,CAAC,eAAe,EAAE;CAC1D,EAAE,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;CAC5B,EAAE,IAAI,GAAG,EAAE,MAAM,CAAC;AAClB;CACA;CACA,EAAE,eAAe,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC9D;CACA;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;AACjC;CACA;CACA,IAAI,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;CACjD,MAAM,GAAG,GAAG,IAAI,CAAC;CACjB,MAAM,OAAO;CACb,KAAK;AACL;CACA;CACA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;CAC1D,MAAM,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;CACrB,KAAK,CAAC,CAAC;AACP;CACA;CACA,IAAI,QAAQ,GAAG;CACf,MAAM,KAAK,QAAQ;CACnB,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,UAAU,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;CAChC,SAAS;CACT,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,OAAO;CAClB,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,UAAU,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CAC7C,SAAS,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACxC,UAAU,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CAC7C,SAAS;CACT,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,QAAQ;CACnB,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,UAAU,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACzC,SAAS,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACxC,UAAU,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CACzD,SAAS;CACT,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,WAAW;CACtB,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,UAAU,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACzC,SAAS,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACxC,UAAU,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CACjD,SAAS;CACT,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,OAAO;CAClB,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,UAAU,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CAClC,SAAS;CACT,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,OAAO;CAClB,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,UAAU,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CAClC,SAAS;CACT,QAAQ,OAAO;CACf,KAAK;CACL,GAAG,CAAC,CAAC;AACL;CACA,EAAE,OAAO,MAAM,CAAC;CAChB,CAAC;;CCjFD,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACtB;AACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;CAC3C,EAAE,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;CAC9C,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/B;CACA;CACA;AACA;CACA;CACA,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE;CACjC,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;AACjC;CACA,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC/B,CAAC;AACD;AACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE;CAC1E;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,GAAG,IAAI,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACnD,EAAE,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD;CACA,EAAE,IAAI,KAAK,KAAK,EAAE,GAAG,EAAE,CAAC;CACxB,EAAE,IAAI,KAAK,KAAK,EAAE,GAAG,EAAE,CAAC;CACxB,EAAE,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;CACzB,EAAE,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,QAAQ,GAAG,CAAC,KAAK,GAAG,KAAK,KAAK,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC;AACvE;CACA,EAAE,IAAI,QAAQ,GAAG,CAAC,EAAE;CACpB;CACA,IAAI,QAAQ,GAAG,CAAC,CAAC;CACjB,GAAG;AACH;CACA,EAAE,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM,KAAK,KAAK,GAAG,MAAM,CAAC,CAAC;CACpD,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxD;CACA,EAAE,IAAI,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;CACpC,EAAE,IAAI,GAAG,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;CACjD,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACjD;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;CAC9B,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;CAC9B,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;CAC9B,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;AAC9B;CACA,EAAE,IAAI,MAAM,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;CACjD,EAAE,IAAI,WAAW,GAAG,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1D;CACA,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,WAAW,GAAG,CAAC,EAAE;CACnC,IAAI,WAAW,IAAI,GAAG,CAAC;CACvB,GAAG;CACH,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,WAAW,GAAG,CAAC,EAAE;CACnC,IAAI,WAAW,IAAI,GAAG,CAAC;CACvB,GAAG;AACH;CACA,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC;CACzC,CAAC;AACD;CACA;CACA;CACA;CACA;CACA,SAAS,oBAAoB,CAAC,MAAM,EAAE,WAAW,EAAE;CACnD,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC5C;CACA,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CAC5B,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CAC5B,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC;CAC1C,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC;AAC1C;CACA,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACxF,CAAC;AACD;KACAC,KAAc,GAAG,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE;CACnE,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;CAC1C,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1C;CACA;CACA;CACA,EAAE,IAAI,GAAG,IAAI,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACnD,EAAE,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD;CACA,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;CAC9B;CACA,IAAI,OAAO,EAAE,CAAC;CACd,GAAG;AACH;CACA,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;CAC5B;CACA,IAAI,OAAO,EAAE,CAAC;CACd,GAAG;AACH;AACA;CACA;CACA;CACA,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;CACpB,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACpB;CACA,EAAE,IAAI,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;CACjE,EAAE,IAAI,MAAM,GAAG,CAAC,EAAE;CAClB,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CAC5B,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CAC5B,GAAG;AACH;AACA;CACA;CACA;CACA,EAAE,IAAI,EAAE,GAAG,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAC5E;CACA,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;CAClB,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CACrB,EAAE,IAAI,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1B;CACA;CACA;CACA;CACA,EAAE,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC3E,EAAE,WAAW,IAAI,QAAQ,CAAC;AAC1B;CACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;CACrC,IAAI,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;CAC3D,IAAI,MAAM,IAAI,WAAW,CAAC;CAC1B,GAAG;AACH;CACA;CACA;CACA;CACA,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE;CACrC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;CAC9C,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CAC3B,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3B;CACA;CACA,MAAM,CAAC,IAAI,EAAE,CAAC;CACd,MAAM,CAAC,IAAI,EAAE,CAAC;AACd;CACA;CACA,MAAM,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;CACrC,MAAM,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACrC;CACA;CACA,MAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CAChC,MAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CAChC,KAAK;AACL;CACA,IAAI,OAAO,KAAK,CAAC;CACjB,GAAG,CAAC,CAAC;CACL,CAAC;;CCzLD;AACA;CACA;CACA;CACA,IAAI,OAAO,GAAG,YAAY,CAAC;AAC3B;CACA;CACA;CACA,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAC1B;CACA;CACA;CACA;CACA,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;CAC7B,EAAE,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;CACrE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;CACf,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;CACf,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;CACf,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;CAC3C;CACA;CACA;CACA,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;CACnE,EAAE,IAAI,EAAE,GAAG;CACX,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC/B,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC/B,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAChC,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAChC,GAAG,CAAC;AACJ;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACnC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpC;CACA;CACA,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACpE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE;CACA;CACA,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvB;CACA;CACA,EAAE,IAAI,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE;CACxB;CACA,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACtC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;CAChB,IAAI,OAAO,IAAI,CAAC;CAChB,GAAG;AACH;CACA;CACA,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpC;CACA,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB;CACA;CACA,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;CACnB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;CACpB;CACA;CACA,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO;CAChE,IAAI,EAAE;CACN;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;CAC5C,MAAM,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC;CAClB;CACA,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CAClB,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;CACtB;AACA;CACA;CACA,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;CACpB;CACA,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CAC5B,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CAC5B,GAAG,MAAM;CACT;CACA,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;CAClB,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CAC5B,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CAC5B,GAAG;AACH;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;CAC7C,EAAE,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE;CACtE,CAAC,CAAC;AACF;CACA,IAAAC,SAAc,GAAG,OAAO;;CCxFxB,IAAI,SAAS,QAAQF,UAAuB,CAAC;CAC7C,IAAI,cAAc,GAAGG,eAA4B,CAAC;CAClD,IAAI,MAAM,WAAWC,QAAmB,CAAC;CACzC,IAAI,GAAG,cAAcC,KAAgB,CAAC;CACtC,IAAI,OAAO,UAAUC,SAAoB,CAAC;AAC1C;AACA;CACA;CACA;CACA,SAAS,OAAO,CAAC,IAAI,EAAE;CACvB,EAAE,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;AAC/D;CACA,EAAE,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAClC;CACA;CACA,EAAE,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,GAAG,CAAC;AAC7B;CACA;CACA,EAAE,IAAI,CAAC,OAAO,MAAM,EAAE,CAAC;CACvB,CAAC;AACD;CACA,OAAO,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE;CAC9B,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;AACvD;CACA,EAAE,IAAI,GAAG,YAAY,OAAO,EAAE;CAC9B;CACA,IAAI,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;AAC5B;CACA;CACA,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;CACpB,IAAI,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;CAC1E,IAAI,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;CAC7C,MAAM,OAAO,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;CAC1C,KAAK,CAAC,CAAC;AACP;CACA,IAAI,OAAO,CAAC,CAAC;CACb,GAAG;AACH;CACA,EAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,GAAG,GAAG,CAAC,CAAC;CAC7D,CAAC,CAAC;AACF;AACA;CACA,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;CAC1C,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;AACrB;CACA;CACA,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;AAClC;CACA,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;CACzC,IAAI,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC;AACpC;CACA,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChB;CACA;CACA,MAAM,KAAK,GAAG;CACd,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACvC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACpE,QAAQ,MAAM;AACd;CACA,MAAM,KAAK,GAAG;CACd,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;CACxC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACzF,QAAQ,MAAM;AACd;CACA,MAAM,KAAK,GAAG;CACd,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;CACvC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACpE,QAAQ,MAAM;AACd;CACA,MAAM,KAAK,GAAG;CACd,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;CACxC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACzF,QAAQ,MAAM;AACd;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;CAC7B,QAAQ,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AACxD;CACA;CACA,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;CAC/C,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;CAClC,SAAS;AACT;CACA;CACA,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;AAC7C;CACA;CACA;CACA,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;CACrD,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;CACxD,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CAC5D,UAAU,MAAM;CAChB,SAAS;AACT;CACA;CACA,QAAQ,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;CAC9B;CACA,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CAC5D,SAAS,MAAM;CACf;CACA;CACA,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACtE,SAAS;AACT;CACA,QAAQ,MAAM;AACd;CACA,MAAM,KAAK,GAAG;CACd;CACA;CACA,QAAQ,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;AAC/B;CACA,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;CAC3C,QAAQ,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACrC,QAAQ,MAAM;AACd;CACA,MAAM;CACN,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1B,QAAQ,MAAM,OAAO,EAAE,IAAI,EAAE,CAAC;CAC9B,QAAQ,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,CAAC;AACnD;CACA;CACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;CAC1C,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;CACjD,UAAU,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAClC,SAAS;CACT,KAAK;AACL;CACA,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;CAClC,GAAG,EAAE,IAAI,CAAC,CAAC;CACX,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,YAAY;CAChD,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AACX;CACA,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;AACvC;CACA,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;CACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;CACnC,IAAI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;CACtB,IAAI,OAAO;CACX,GAAG;AACH;CACA,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC;CACf,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1B;CACA,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;CACnB,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;CACxC,GAAG;AACH;CACA,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;CACnB,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;CACpB,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;CACzC,EAAE,IAAI,MAAM,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,UAAU,GAAG,KAAK,CAAC;AACpD;CACA,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;AACzB;CACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;CAC5D,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;CACnC,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACzB;CACA;CACA,IAAI,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,EAAE;CACvD;CACA,MAAM,IAAI,GAAG,KAAK,GAAG,IAAI,OAAO,KAAK,GAAG,EAAE,MAAM,IAAI,GAAG,CAAC;CACxD,MAAM,MAAM,IAAI,GAAG,CAAC;AACpB;CACA,MAAM,UAAU,GAAG,KAAK,CAAC;CACzB,KAAK,MAAM;CACX,MAAM,UAAU,GAAG,IAAI,CAAC;CACxB,KAAK;AACL;CACA;CACA,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;CACnD,MAAM,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;CAC7B;CACA;CACA;CACA,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE;CACrB,QAAQ,IAAI,UAAU,IAAI,GAAG,IAAI,CAAC,EAAE,MAAM,IAAI,GAAG,CAAC;CAClD,OAAO,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,MAAM,IAAI,GAAG,CAAC;AACzC;CACA,MAAM,MAAM,IAAI,GAAG,CAAC;CACpB,KAAK;AACL;CACA,IAAI,OAAO,GAAG,GAAG,CAAC;CAClB,GAAG;AACH;CACA,EAAE,OAAO,MAAM,CAAC;CAChB,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;CAC9C,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACnD,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;CAC5C,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;CACvE,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;CACpD,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;CAC9D,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;CAC7C,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;CAC7C,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO,EAAE;CAC7C,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;CAC7C,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;CACxC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;CACxC,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,eAAe,EAAE;CACzD,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE;CAC/B,IAAI,OAAO,IAAI,CAAC;CAChB,GAAG;CACH,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;CACrD,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;CACvC,EAAE,IAAI,kBAAkB,GAAG,CAAC,EAAE,kBAAkB,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;AAChF;CACA,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACb;CACA,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;AACzB;CACA,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;CACrC,IAAI,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD;CACA,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;CAChB,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,IAAI,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE;CAC3C,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CACxC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,IAAI,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE;CAC3C,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CACxC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,MAAM,GAAG,kBAAkB,CAAC;CACpC,QAAQ,MAAM,GAAG,kBAAkB,CAAC;CACpC,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,IAAI,UAAU,EAAE;CACxB,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;CACzB,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;CACzB,SAAS;AACT;CACA,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CACxC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxC;CACA,QAAQ,kBAAkB,GAAG,MAAM,CAAC;CACpC,QAAQ,kBAAkB,GAAG,MAAM,CAAC;AACpC;CACA,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd;CACA,QAAQ,IAAI,UAAU,EAAE;CACxB,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;CACzB,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;CACzB,SAAS;AACT;CACA,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CACxC,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxC;CACA,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC,QAAQ,OAAO;AACf;CACA,MAAM;CACN;CACA,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;AACrB;CACA,QAAQ,IAAI,UAAU,EAAE;CACxB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;CAC7B,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;CAC7B,SAAS;AACT;CACA,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAChD,QAAQ,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAChD;CACA,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE;CACpC,UAAU,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE;CAC7B,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CAClC,SAAS,CAAC,CAAC;CACX,QAAQ,OAAO;CACf,KAAK;CACL,GAAG,CAAC,CAAC;AACL;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,QAAQ,EAAE,aAAa,EAAE;CAC/D,EAAE,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;CAC9B,MAAM,YAAY,GAAG,EAAE;CACvB,MAAM,WAAW,GAAG,KAAK;CACzB,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,cAAc,GAAG,CAAC;CACxB,MAAM,cAAc,GAAG,CAAC,CAAC;CACzB,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC;AACxB;CACA,EAAE,IAAI,CAAC,aAAa,EAAE;CACtB,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;CAC3B,GAAG;AACH;CACA,EAAE,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE;AACvC;CACA,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC/C;CACA,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;CAC5B,MAAM,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;CAChC,MAAM,WAAW,GAAG,IAAI,CAAC;CACzB,KAAK;AACL;CACA,IAAI,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AACnD;CACA;CACA,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;CAChB,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;CAChD,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;CAChD,QAAQ,cAAc,GAAG,KAAK,CAAC;CAC/B,QAAQ,cAAc,GAAG,KAAK,CAAC;CAC/B,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;CAChD,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;CAChD,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG,CAAC;CACf,MAAM,KAAK,GAAG;CACd;CACA,QAAQ,KAAK,GAAG,cAAc,CAAC;CAC/B,QAAQ,KAAK,GAAG,cAAc,CAAC;CAC/B,QAAQ,OAAO;AACf;CACA,MAAM;CACN,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;CAC3D,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;CAC3D,KAAK;CACL,GAAG,CAAC,CAAC;AACL;CACA;AACA;CACA,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;AACpC;CACA,EAAE,WAAW,GAAG,EAAE,CAAC;AACnB;CACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACxC,IAAI,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;CAChD,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACnD,QAAQ,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC7C,OAAO;CACP,KAAK,MAAM;CACX,MAAM,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;CACpC,KAAK;CACL,GAAG;AACH;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AAC9B;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;AACpC;CACA,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;CACzC,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;CACnB,QAAQ,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;CACnC,QAAQ,CAAC,CAAC;AACV;CACA;CACA,IAAI,IAAI,IAAI,KAAK,MAAM,EAAE,EAAE,OAAO,EAAE;AACpC;CACA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AAClB;CACA,IAAI,QAAQ,IAAI;CAChB,MAAM,KAAK,GAAG;CACd;CACA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClB,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG;CACd;CACA;CACA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClB,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClB,QAAQ,OAAO;AACf;CACA,MAAM;CACN,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACvC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAChC,SAAS;CACT,KAAK;CACL,GAAG,EAAE,IAAI,CAAC,CAAC;AACX;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;AACpC;CACA,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;CACzC,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;CACnB,QAAQ,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;CACnC,QAAQ,CAAC,CAAC;AACV;CACA;CACA,IAAI,IAAI,IAAI,KAAK,MAAM,EAAE,EAAE,OAAO,EAAE;AACpC;CACA;CACA,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE;AAChD;CACA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AAClB;CACA,IAAI,QAAQ,IAAI;CAChB,MAAM,KAAK,GAAG;CACd;CACA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClB,QAAQ,OAAO;AACf;CACA,MAAM,KAAK,GAAG;CACd;CACA;CACA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClB,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;CAClB,QAAQ,OAAO;AACf;CACA,MAAM;CACN,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACvC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAChC,SAAS;CACT,KAAK;CACL,GAAG,EAAE,IAAI,CAAC,CAAC;AACX;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;CACtC,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;CACzC,IAAI,IAAI,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D;CACA;CACA,IAAI,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;AACtD;CACA,IAAI,IAAI,IAAI,KAAK,GAAG,EAAE;CACtB;CACA,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACvB,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACvB,KAAK,MAAM;CACX,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACnB,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACnB,KAAK;AACL;CACA,IAAI,YAAY,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE;CACA;CACA;CACA,IAAI,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;CACnC,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;CAC1D,KAAK;AACL;CACA,IAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;CACtC,MAAM,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAC/D,KAAK,CAAC,CAAC;AACP;CACA,IAAI,OAAO,MAAM,CAAC;CAClB,GAAG,CAAC,CAAC;AACL;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA;CACA;CACA,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;CACxC,EAAE,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;CAC/B,EAAE,IAAI,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC;CAC9C,EAAE,IAAI,WAAW,EAAE,WAAW,CAAC;AAC/B;CACA;AACA;CACA,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;CACvC,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,EAAE,UAAU,CAAC;AAC7D;CACA;CACA;CACA,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;AACzB;CACA,IAAI,IAAI,MAAM,KAAK,GAAG,EAAE;CACxB,MAAM,UAAU,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClC;CACA,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACtC;CACA,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;CAClC,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1C,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1C,OAAO,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;CACzC,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;CACvD,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;CACvD,OAAO,MAAM;CACb,QAAQ,YAAY,GAAG,CAAC,CAAC;CACzB,QAAQ,YAAY,GAAG,CAAC,CAAC;CACzB,OAAO;AACP;CACA,MAAM,WAAW,GAAG,CAAC,YAAY,CAAC;CAClC,MAAM,WAAW,GAAG,CAAC,YAAY,CAAC;AAClC;CACA,MAAM,IAAI,CAAC,UAAU,EAAE;CACvB,QAAQ,WAAW,IAAI,CAAC,CAAC;CACzB,QAAQ,WAAW,IAAI,CAAC,CAAC;CACzB,OAAO;AACP;CACA,MAAM,QAAQ,CAAC,GAAG,CAAC,GAAG;CACtB,QAAQ,UAAU,GAAG,GAAG,GAAG,GAAG;CAC9B,QAAQ,WAAW,EAAE,WAAW;CAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CAClB,OAAO,CAAC;AACR;CACA,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,EAAE;CAC/B,MAAM,UAAU,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClC;CACA,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACtC;CACA,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;CAClC,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1C,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1C,OAAO,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;CACzC,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;CACvD,QAAQ,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;CACvD,OAAO,MAAM;CACb,QAAQ,YAAY,GAAG,CAAC,CAAC;CACzB,QAAQ,YAAY,GAAG,CAAC,CAAC;CACzB,OAAO;AACP;CACA,MAAM,WAAW,GAAG,CAAC,YAAY,CAAC;CAClC,MAAM,WAAW,GAAG,CAAC,YAAY,CAAC;AAClC;CACA,MAAM,IAAI,CAAC,UAAU,EAAE;CACvB,QAAQ,WAAW,IAAI,CAAC,CAAC;CACzB,QAAQ,WAAW,IAAI,CAAC,CAAC;CACzB,OAAO;AACP;CACA,MAAM,QAAQ,CAAC,GAAG,CAAC,GAAG;CACtB,QAAQ,UAAU,GAAG,GAAG,GAAG,GAAG;CAC9B,QAAQ,WAAW,EAAE,WAAW;CAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CAC9B,OAAO,CAAC;CACR,KAAK;CACL,GAAG,CAAC,CAAC;AACL;CACA,EAAE,OAAO,IAAI,CAAC;CACd,CAAC,CAAC;AACF;AACA;CACA,IAAAC,SAAc,GAAG,OAAO;;;ACvpBxB;CACA,CAAA,MAAA,CAAA,OAAA,GAAiBP,SAAwB,CAAA;;;;;CCezC;;CAEE;CAEF,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAqB,CAAC;UAExB,iBAAiB,CAC7B,UAA0B,EAC1B,aAAuB,EACvB,SAAqB,EAAA;KAErB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,UAAU,CAAC;;;KAGpC,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;SAClE,aAAa,CAAC,IAAI,CAAC,CAAA,2BAAA,EAA8B,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SACxF,OAAO;CACV,KAAA;CACD,IAAA,IAAI,SAAS,EAAE;CACX,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CACb,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC3C,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CACb,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC9C,KAAA;KACD,OAAO,CAAA,CAAA,EAAI,EAAE,CAAI,CAAA,EAAA,EAAE,KAAK,EAAE,CAAA,CAAA,EAAI,EAAE,CAAA,CAAE,CAAC;CACvC,CAAC;UAEe,iBAAiB,CAC7B,UAA0B,EAC1B,aAAuB,EACvB,SAAqB,EAAA;CAErB,IAAA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC;;KAE1B,IAAI,CAAC,KAAK,SAAS;SAAE,CAAC,GAAG,CAAC,CAAC;KAC3B,IAAI,CAAC,KAAK,SAAS;SAAE,CAAC,GAAG,CAAC,CAAC;CAC3B,IAAA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC;CACrC,IAAA,IACI,CAAC,QAAQ,CAAC,CAAC,CAAC;SACZ,CAAC,QAAQ,CAAC,CAAC,CAAC;SACZ,CAAC,mBAAmB,CAAC,KAAK,CAAC;CAC3B,QAAA,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAC9B;SACE,aAAa,CAAC,IAAI,CACd,CAAA,2BAAA,EAA8B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA,CAAA,CAAG,CAC3E,CAAC;SACF,OAAO;CACV,KAAA;KACD,IAAI,EAAE,GAAG,CAAC,CAAC;KACX,IAAI,EAAE,GAAG,CAAC,CAAC;CACX,IAAA,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;KACnB,IAAI,EAAE,GAAG,CAAC,CAAC;CACX,IAAA,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;CACnB,IAAA,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;KACpB,IAAI,EAAE,GAAG,CAAC,CAAC;CACX,IAAA,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;CACpB,IAAA,IAAI,SAAS,EAAE;CACX,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CACb,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC3C,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CACb,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC3C,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CACb,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC3C,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CACb,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACb,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC9C,KAAA;CACD,IAAA,OAAO,IAAI,EAAE,CAAA,CAAA,EAAI,EAAE,CAAA,EAAA,EAAK,EAAE,CAAI,CAAA,EAAA,EAAE,CAAK,EAAA,EAAA,EAAE,IAAI,EAAE,CAAA,EAAA,EAAK,EAAE,CAAI,CAAA,EAAA,EAAE,IAAI,CAAC;CACnE,CAAC;CAEK,SAAU,mBAAmB,CAC/B,UAA4B,EAC5B,aAAuB,EACvB,aAAsB,EACtB,SAAqB,EAAA;KAErB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC;;KAE/B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;;KAE7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,CAAC,KAAK,SAAS;SAAE,CAAC,GAAG,CAAC,CAAC;CAC3B,IAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;CAC3D,QAAA,aAAa,CAAC,IAAI,CAAC,gCAAgC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SACrF,OAAO;CACV,KAAA;CACD,IAAA,MAAM,UAAU,GAAG,qBAAqB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;;KAEjF,IAAI,UAAU,CAAC,GAAG,EAAE;;SAEhB,aAAa,CAAC,IAAI,CACd,CAAA,yBAAA,EAA4B,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAA,MAAA,EAAS,UAAU,CAAC,GAAG,CAAG,CAAA,CAAA,CACtF,CAAC;SACF,OAAO;CACV,KAAA;CACD,IAAA,OAAO,UAAU,CAAC;CACtB,CAAC;CAEK,SAAU,oBAAoB,CAChC,UAA6B,EAC7B,aAAuB,EACvB,aAAsB,EACtB,SAAqB,EAAA;KAErB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,UAAU,CAAC;;;KAGpC,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,EAAE,KAAK,SAAS;SAAE,EAAE,GAAG,CAAC,CAAC;KAC7B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAAE;SACxF,aAAa,CAAC,IAAI,CAAC,CAAA,8BAAA,EAAiC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SAC3F,OAAO;CACV,KAAA;CACD,IAAA,MAAM,UAAU,GAAG,qBAAqB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;;KAEnF,IAAI,UAAU,CAAC,GAAG,EAAE;;SAEhB,aAAa,CAAC,IAAI,CACd,CAA6B,0BAAA,EAAA,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA,MAAA,EAC3D,UAAU,CAAC,GACf,CAAG,CAAA,CAAA,CACN,CAAC;SACF,OAAO;CACV,KAAA;CACD,IAAA,OAAO,UAAU,CAAC;CACtB,CAAC;CAED;CACA;CACA,SAAS,qBAAqB,CAC1B,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,aAAsB,EACtB,SAAqB,EAAA;;KAGrB,MAAM,CAAC,GAAG,CAAA,CAAA,EAAI,EAAE,GAAG,EAAE,CAAI,CAAA,EAAA,EAAE,CAAK,EAAA,EAAA,EAAE,CAAI,CAAA,EAAA,EAAE,UAAU,EAAE,GAAG,CAAC,CAAA,KAAA,EAAQ,EAAE,CAAA,CAAA,EAAI,EAAE,CAAA,QAAA,EAAW,EAAE,GAAG,CAAC,CAAA,EAAA,CAAI,CAAC;KAC9F,IAAI,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAuB,CAAC;;CAEvD,IAAA,IAAI,CAAC,aAAa;CAAE,QAAA,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;;CAEpD,IAAA,IAAI,SAAS;CACT,QAAA,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;CAC3B,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACd,SAAA,CAAC,CAAC;CACP,IAAA,OAAO,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyDtB,CAAC;UAEe,oBAAoB,CAChC,UAA6B,EAC7B,aAAuB,EACvB,SAAqB,EAAA;CAErB,IAAA,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC;CAC9B,IAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;CACnB,QAAA,aAAa,CAAC,IAAI,CAAC,CAAA,8BAAA,EAAiC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SACnF,OAAO;CACV,KAAA;CACD,IAAA,MAAM,IAAI,GAAG,oBAAoB,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;CAC7E,IAAA,IAAI,CAAC,IAAI;CAAE,QAAA,OAAO,IAAI,CAAC;KACvB,OAAO,IAAI,GAAG,IAAI,CAAC;CACvB,CAAC;UAEe,qBAAqB,CACjC,UAA8B,EAC9B,aAAuB,EACvB,SAAqB,EAAA;CAErB,IAAA,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC;CAC9B,IAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;CACnB,QAAA,aAAa,CAAC,IAAI,CAAC,CAAA,+BAAA,EAAkC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SACpF,OAAO;CACV,KAAA;KACD,OAAO,oBAAoB,CAAC,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;CAC5E,CAAC;CAED,SAAS,oBAAoB,CACzB,YAAoB,EACpB,aAAuB,EACvB,WAA6C,EAC7C,SAAqB,EAAA;KAErB,MAAM,MAAM,GAAG,uBAAuB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAChE,IAAI,CAAC,GAAG,EAAE,CAAC;KACX,OAAO,MAAM,CAAC,MAAM,EAAE;SAClB,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CACzC,QAAA,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;;aAEpB,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;iBAC1C,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAG,CAAC,CAAC;CAC/B,aAAA;CACJ,SAAA;CACD,QAAA,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;aACpB,aAAa,CAAC,IAAI,CACd,CAAA,gCAAA,EAAmC,YAAY,CAAS,MAAA,EAAA,WAAW,CAAI,EAAA,CAAA,CAC1E,CAAC;aACF,OAAO;CACV,SAAA;SACD,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;aACtB,aAAa,CAAC,IAAI,CACd,CAAA,gCAAA,EAAmC,YAAY,CAAS,MAAA,EAAA,WAAW,CAAI,EAAA,CAAA,CAC1E,CAAC;aACF,OAAO;CACV,SAAA;CACD,QAAA,IAAI,SAAS,EAAE;CACX,YAAA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CACZ,YAAA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACZ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC5C,SAAA;SACD,IAAI,CAAC,KAAK,EAAE,EAAE;CACV,YAAA,CAAC,IAAI,CAAI,CAAA,EAAA,CAAC,CAAI,CAAA,EAAA,CAAC,EAAE,CAAC;CACrB,SAAA;CAAM,aAAA;CACH,YAAA,CAAC,IAAI,CAAK,EAAA,EAAA,CAAC,CAAI,CAAA,EAAA,CAAC,EAAE,CAAC;CACtB,SAAA;CACJ,KAAA;CACD,IAAA,OAAO,CAAC,CAAC;CACb,CAAC;CAEK,SAAU,iBAAiB,CAC7B,UAA0B,EAC1B,aAAuB,EACvB,aAAsB,EACtB,SAAqB,EAAA;CAErB,IAAA,MAAM,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC;CACzB,IAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;CACd,QAAA,aAAa,CAAC,IAAI,CAAC,CAAA,2BAAA,EAA8B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SAC3E,OAAO;CACV,KAAA;;;CAGD,IAAA,IAAI,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAuB,CAAC;CACjE,IAAA,IAAI,aAAa,EAAE;;CAEf,QAAA,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;CACnC,KAAA;;CAED,IAAA,IAAI,SAAS,EAAE;CACX,QAAA,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;CAC3B,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACX,YAAA,SAAS,CAAC,CAAC;CACd,SAAA,CAAC,CAAC;CACN,KAAA;KACD,IAAI,UAAU,CAAC,GAAG,EAAE;CAChB,QAAA,aAAa,CAAC,IAAI,CACd,0BAA0B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAS,MAAA,EAAA,UAAU,CAAC,GAAG,CAAA,CAAA,CAAG,CAC5E,CAAC;SACF,OAAO;CACV,KAAA;CACD,IAAA,OAAO,UAAU,CAAC;CACtB;;CC3VA,SAAS,yBAAyB,CAAC,CAAC,EAAE;CACtC,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;CAC5E,CAAC;CACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;CACpC,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;CACtF,CAAC;CACD,IAAI,yBAAyB,GAAG,EAAE,CAAC;AACnC;CACA,yBAAyB,CAAC,yBAAyB,CAAC,CAAC;AACrD;CACA,cAAc,CAAC,yBAAyB,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC,CAAC;CACrG,MAAM,wCAAwC,SAAS,KAAK,CAAC;CAC7D,IAAI,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC;CACnD,QAAQ,KAAK,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;CACnE,QAAQ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;CAC1B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;CACjC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;CAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;CAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;CAC1B,KAAK;CACL,CAAC;AACD;AACA;CACA,IAAI,yBAAyB,GAAG,EAAE,CAAC;AACnC;CACA,yBAAyB,CAAC,yBAAyB,CAAC,CAAC;AACrD;CACA,cAAc,CAAC,yBAAyB,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC,CAAC;CACrG;CACA;CACA,IAAI,MAAM,wCAAwC,CAAC;CACnD,IAAI,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC;CACnC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CAC3B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;CACvB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;CAC7B,KAAK;CACL,CAAC;AACD;AACA;CACA,IAAI,yBAAyB,GAAG,EAAE,CAAC;AACnC;CACA,cAAc,CAAC,yBAAyB,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC,CAAC;CACvG,IAAI,yCAAyC,CAAC;CAC9C,CAAC,SAAS,QAAQ,EAAE;CACpB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC;CAC1C,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;CAC9B,IAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;CAC5C,IAAI,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;CACpC,IAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;CACxC,IAAI,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;CACpC,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;CACtC,IAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC;CAC7C,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC;CACvC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;CAC9B,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;CAClC,IAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;CACxC,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;CACtC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;CAChC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;CAChC,IAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;CACxC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;CAC9B,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;CACtC,CAAC,EAAE,yCAAyC,KAAK,yCAAyC,GAAG,EAAE,CAAC,CAAC,CAAC;AAClG;AACA;CACA;CACA;CACA,MAAM,+BAA+B,GAAG,iCAAiC,CAAC;CAC1E,MAAM,yCAAyC,GAAG,CAAC,GAAG,EAAE,OAAO,GAAG;CAClE,IAAI,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;CAC5B;CACA;CACA,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC;CACrB,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC;CACnB;CACA;CACA,MAAM,SAAS,cAAc,CAAC,GAAG,EAAE;CACnC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;CACvC,QAAQ,IAAI,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;CAC1C,QAAQ,MAAM,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;CACxC,QAAQ,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;CAC3D,KAAK;CACL;CACA;CACA,MAAM,SAAS,QAAQ,GAAG;CAC1B,QAAQ,MAAM,KAAK,GAAG;CACtB,YAAY,IAAI,EAAE,MAAM;CACxB,YAAY,MAAM,EAAE,MAAM;CAC1B,SAAS,CAAC;CACV,QAAQ,OAAO,SAAS,IAAI,EAAE;CAC9B,YAAY,IAAI,CAAC,QAAQ,GAAG,KAAQ,wCAAwC,EAAE,KAAK,EAAE;CACrF,gBAAgB,IAAI,EAAE,MAAM;CAC5B,gBAAgB,MAAM,EAAE,MAAM;CAC9B,aAAa,EAAE,OAAO,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;CACtC,YAAY,UAAU,EAAE,CAAC;CACzB,YAAY,OAAO,IAAI,CAAC;CACxB,SAAS,CAAC;CACV,KAAK;CACL;CACA;CACA,MAAM,MAAM,UAAU,GAAG,EAAE,CAAC;CAC5B,IAAI,SAAS,KAAK,CAAC,GAAG,EAAE;CACxB,QAAQ,MAAM,GAAG,GAAG,KAAQ,wCAAwC,EAAE,OAAO,EAAE,MAAM,IAAI,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;CACvH,QAAQ,IAAI,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAClD,aAAa,MAAM,GAAG,CAAC;CACvB,KAAK;CACL;CACA;CACA,MAAM,SAAS,UAAU,GAAG;CAC5B,QAAQ,MAAM,SAAS,GAAG,KAAK,EAAE,CAAC;CAClC,QAAQ,MAAM,MAAM,GAAG;CACvB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,UAAU;CAC3E,YAAY,UAAU,EAAE;CACxB,gBAAgB,MAAM,EAAE,OAAO,EAAE,MAAM;CACvC,gBAAgB,KAAK,EAAE,SAAS;CAChC,gBAAgB,aAAa,EAAE,UAAU;CACzC,aAAa;CACb,SAAS,CAAC;CACV,QAAQ,OAAO,MAAM,CAAC;CACtB,KAAK;CACL;CACA;CACA,MAAM,SAAS,IAAI,GAAG;CACtB,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC;CAC9B,KAAK;CACL;CACA;CACA,MAAM,SAAS,KAAK,GAAG;CACvB,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;CAC3B,KAAK;CACL;CACA;CACA,MAAM,SAAS,KAAK,GAAG;CACvB,QAAQ,IAAI,IAAI,CAAC;CACjB,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;CACzB,QAAQ,UAAU,EAAE,CAAC;CACrB,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC;CACxB,QAAQ,MAAM,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,IAAI,GAAG,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE;CAC3F,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC7B,YAAY,QAAQ,CAAC,KAAK,CAAC,CAAC;CAC5B,SAAS;CACT,QAAQ,OAAO,KAAK,CAAC;CACrB,KAAK;CACL;CACA;CACA,MAAM,SAAS,KAAK,CAAC,EAAE,EAAE;CACzB,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC/B,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACzB,QAAQ,cAAc,CAAC,GAAG,CAAC,CAAC;CAC5B,QAAQ,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CACpC,QAAQ,OAAO,CAAC,CAAC;CACjB,KAAK;CACL;CACA;CACA,MAAM,SAAS,UAAU,GAAG;CAC5B,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC;CACtB,KAAK;CACL;CACA;CACA,MAAM,SAAS,QAAQ,CAAC,KAAK,EAAE;CAC/B,QAAQ,IAAI,CAAC,CAAC;CACd,QAAQ,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;CAC5B,QAAQ,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjD,QAAQ,OAAO,KAAK,CAAC;CACrB,KAAK;CACL;CACA;CACA,MAAM,SAAS,OAAO,GAAG;CACzB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,IAAI,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO;CACnE,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;CAC1C,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CACvD,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,OAAO;CACxE,YAAY,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACtC,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,QAAQ,GAAG;CAC1B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;CACpC,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB;CACA,QAAQ,MAAM,GAAG,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;CACpF;CACA,QAAQ,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO;CAC5C,YAAY,GAAG;CACf,SAAS,CAAC;CACV,QAAQ,OAAO,GAAG;CAClB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,aAAa,OAAO,CAAC,8BAA8B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CAC/E,SAAS,KAAK,CAAC,GAAG,CAAC;CACnB,SAAS,GAAG,CAAC,CAAC,CAAC,GAAG;CAClB,YAAY,OAAO,0BAA0B,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;CACzE,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,WAAW,GAAG;CAC7B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B;CACA,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,wCAAwC,CAAC,CAAC;CAC1E,QAAQ,IAAI,CAAC,SAAS,EAAE,OAAO;CAC/B,QAAQ,MAAM,SAAS,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;CACnE;CACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,OAAO,KAAK,CAAC,sBAAsB,CAAC,CAAC;CAClE;CACA,QAAQ,MAAM,GAAG,GAAG,KAAK,CAAC,sDAAsD,CAAC,CAAC;CAClF,QAAQ,MAAM,GAAG,GAAG,GAAG,CAAC;CACxB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,WAAW;CAC5E,YAAY,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC;CAC5E,YAAY,KAAK,EAAE,GAAG,GAAG,0BAA0B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC,GAAG,EAAE;CAC7G,SAAS,CAAC,CAAC;CACX;CACA,QAAQ,KAAK,CAAC,SAAS,CAAC,CAAC;CACzB,QAAQ,OAAO,GAAG,CAAC;CACnB,KAAK;CACL;CACA;CACA,MAAM,SAAS,YAAY,GAAG;CAC9B,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;CACzB,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,aAAa,CAAC,CAAC;CACjD,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC;CACxB;CACA,QAAQ,IAAI,IAAI,CAAC;CACjB,QAAQ,MAAM,IAAI,GAAG,WAAW,EAAE,CAAC,IAAI,IAAI,EAAE;CAC7C,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC7B,YAAY,QAAQ,CAAC,KAAK,CAAC,CAAC;CAC5B,SAAS;CACT,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,aAAa,CAAC,CAAC;CAClD,QAAQ,OAAO,KAAK,CAAC;CACrB,KAAK;CACL;CACA;CACA,MAAM,SAAS,QAAQ,GAAG;CAC1B,QAAQ,IAAI,CAAC,CAAC;CACd,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC;CACxB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,qCAAqC,CAAC,CAAC;CAC/D,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC5B,YAAY,KAAK,CAAC,OAAO,CAAC,CAAC;CAC3B,SAAS;CACT,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO;CACjC,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,QAAQ;CACzE,YAAY,MAAM,EAAE,IAAI;CACxB,YAAY,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE;CAC9C,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,WAAW,GAAG;CAC7B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,EAAE,GAAG,KAAK,CAAC,yBAAyB,CAAC,CAAC;CACpD,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO;CACxB,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CAC7B;CACA,QAAQ,MAAM,EAAE,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;CACzC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,yBAAyB,CAAC,CAAC;CACzD,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CAC3B,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CAC5D,QAAQ,IAAI,KAAK,CAAC;CAClB,QAAQ,IAAI,MAAM,GAAG,QAAQ,EAAE,CAAC;CAChC,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;CACjC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC/B,YAAY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;CAC/C,SAAS;CACT,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CAC7D,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,SAAS;CAC1E,YAAY,IAAI,EAAE,IAAI;CACtB,YAAY,MAAM,EAAE,MAAM;CAC1B,YAAY,SAAS,EAAE,MAAM;CAC7B,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,UAAU,GAAG;CAC5B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,qBAAqB,CAAC,CAAC;CAC/C,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,QAAQ,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1D,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,uBAAuB,CAAC,CAAC;CAC3D,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACjD,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,uBAAuB,CAAC,CAAC;CAC5D,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,QAAQ;CACzE,YAAY,QAAQ,EAAE,QAAQ;CAC9B,YAAY,KAAK,EAAE,KAAK;CACxB,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,MAAM,GAAG;CACxB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;CACrC,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,mBAAmB,CAAC,CAAC;CACvD,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACjD,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,mBAAmB,CAAC,CAAC;CACxD,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,IAAI;CACrE,YAAY,KAAK,EAAE,KAAK;CACxB,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,WAAW,GAAG;CAC7B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,sBAAsB,CAAC,CAAC;CAChD,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,SAAS,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC3D,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CAC5D,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACjD,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CAC7D,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,SAAS;CAC1E,YAAY,SAAS,EAAE,SAAS;CAChC,YAAY,KAAK,EAAE,KAAK;CACxB,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,OAAO,GAAG;CACzB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC;CAC9C,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,KAAK,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACvD,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE;CACrB,YAAY,KAAK,CAAC,SAAS,CAAC,CAAC;CAC7B,YAAY,OAAO,GAAG,CAAC;CACvB,gBAAgB,IAAI,EAAE,CAAI,yCAAyC,EAAE,KAAK;CAC1E,gBAAgB,KAAK,EAAE,KAAK;CAC5B,aAAa,CAAC,CAAC;CACf,SAAS;CACT,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACjD,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,oBAAoB,CAAC,CAAC;CACzD,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,KAAK;CACtE,YAAY,KAAK,EAAE,KAAK;CACxB,YAAY,KAAK,EAAE,KAAK;CACxB,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,OAAO,GAAG;CACzB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC;CAC5C,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,KAAK,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACvD,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,oBAAoB,CAAC,CAAC;CACxD,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACjD,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,oBAAoB,CAAC,CAAC;CACzD,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,KAAK;CACtE,YAAY,KAAK,EAAE,KAAK;CACxB,YAAY,KAAK,EAAE,KAAK;CACxB,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,aAAa,GAAG;CAC/B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,yCAAyC,CAAC,CAAC;CACnE,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,WAAW;CAC5E,YAAY,IAAI,EAAE,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAClD,YAAY,KAAK,EAAE,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACnD,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,MAAM,GAAG;CACxB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;CACpC,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,IAAI,EAAE,CAAC;CACrC,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,mBAAmB,CAAC,CAAC;CACvD,QAAQ,IAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;CAC/B;CACA,QAAQ,IAAI,IAAI,CAAC;CACjB,QAAQ,MAAM,IAAI,GAAG,WAAW,EAAE,CAAC;CACnC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC7B,YAAY,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;CAC7C,SAAS;CACT,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,mBAAmB,CAAC,CAAC;CACxD,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,IAAI;CACrE,YAAY,SAAS,EAAE,GAAG;CAC1B,YAAY,YAAY,EAAE,KAAK;CAC/B,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,UAAU,GAAG;CAC5B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,8BAA8B,CAAC,CAAC;CACxD,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,MAAM,MAAM,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACxD,QAAQ,MAAM,GAAG,GAAG,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACrD,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,uBAAuB,CAAC,CAAC;CAC3D,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACjD,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,uBAAuB,CAAC,CAAC;CAC5D,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,QAAQ;CACzE,YAAY,QAAQ,EAAE,GAAG;CACzB,YAAY,MAAM,EAAE,MAAM;CAC1B,YAAY,KAAK,EAAE,KAAK;CACxB,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,SAAS,UAAU,GAAG;CAC5B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;CAC1C,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO;CACvB,QAAQ,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CAC5D,QAAQ,IAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;CAC/B;CACA,QAAQ,IAAI,IAAI,CAAC;CACjB,QAAQ,MAAM,IAAI,GAAG,WAAW,EAAE,CAAC;CACnC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC7B,YAAY,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;CAC7C,SAAS;CACT,QAAQ,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,wBAAwB,CAAC,CAAC;CAC7D,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,QAAQ;CACzE,YAAY,YAAY,EAAE,KAAK;CAC/B,SAAS,CAAC,CAAC;CACX,KAAK;CACL;CACA;CACA,MAAM,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;CAChD;CACA;CACA,MAAM,MAAM,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;CAClD;CACA;CACA,MAAM,MAAM,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;CACtD;CACA;CACA,MAAM,SAAS,cAAc,CAAC,IAAI,EAAE;CACpC,QAAQ,MAAM,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,+DAA+D,CAAC,CAAC;CAC7G;CACA,QAAQ,OAAO,WAAW;CAC1B,YAAY,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CACnC,YAAY,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;CAChC,YAAY,IAAI,CAAC,CAAC,EAAE,OAAO;CAC3B,YAAY,MAAM,GAAG,GAAG;CACxB,gBAAgB,IAAI,EAAE,IAAI;CAC1B,aAAa,CAAC;CACd,YAAY,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;CACpC,YAAY,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;CAC5B,SAAS,CAAC;CACV,KAAK;CACL;CACA;CACA,MAAM,SAAS,MAAM,GAAG;CACxB,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO;CACnC,QAAQ,OAAO,WAAW,EAAE,IAAI,OAAO,EAAE,IAAI,aAAa,EAAE,IAAI,UAAU,EAAE,IAAI,QAAQ,EAAE,IAAI,SAAS,EAAE,IAAI,WAAW,EAAE,IAAI,UAAU,EAAE,IAAI,MAAM,EAAE,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,IAAI,WAAW,EAAE,IAAI,OAAO,EAAE,CAAC;CACjN,KAAK;CACL;CACA;CACA,MAAM,SAAS,IAAI,GAAG;CACtB,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;CAC/B,QAAQ,IAAI,CAAC,GAAG,EAAE,OAAO,KAAK,CAAC,kBAAkB,CAAC,CAAC;CACnD,QAAQ,QAAQ,EAAE,CAAC;CACnB,QAAQ,OAAO,GAAG,CAAC;CACnB,YAAY,IAAI,EAAE,CAAI,yCAAyC,EAAE,IAAI;CACrE,YAAY,SAAS,EAAE,GAAG;CAC1B,YAAY,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE;CAC9C,SAAS,CAAC,CAAC;CACX,KAAK;CACL,IAAI,OAAO,+BAA+B,CAAC,UAAU,EAAE,CAAC,CAAC;CACzD,CAAC,CAAC;CACF;CACA;CACA,IAAI,SAAS,0BAA0B,CAAC,GAAG,EAAE;CAC7C,IAAI,OAAO,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;CACjC,CAAC;CACD;CACA;CACA,IAAI,SAAS,+BAA+B,CAAC,GAAG,EAAE,MAAM,EAAE;CAC1D,IAAI,MAAM,MAAM,GAAG,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC;CACvD,IAAI,MAAM,WAAW,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;CAC9C,IAAI,IAAI,MAAM,CAAC,IAAI,GAAG,CAAC;CACvB,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;CAC7B,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;CACrD,YAAY,+BAA+B,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;CAC5D,SAAS,CAAC,CAAC;CACX,aAAa,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,+BAA+B,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;CACzG,KAAK;CACL,IAAI,IAAI,MAAM,EAAE,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE;CACrD,QAAQ,YAAY,EAAE,IAAI;CAC1B,QAAQ,QAAQ,EAAE,IAAI;CACtB,QAAQ,UAAU,EAAE,KAAK;CACzB,QAAQ,KAAK,EAAE,MAAM,IAAI,IAAI;CAC7B,KAAK,CAAC,CAAC;CACP,IAAI,OAAO,GAAG,CAAC;CACf,CAAC;CACD,IAAI,wCAAwC,GAAG,yCAAyC,CAAC;AA0MzF;AACA;AACA;AACA;AACA;CACA,MAAM,yCAAyC,IAAO,wCAAwC,CAAC;;AC3pB/FQ,EAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;AACtBA,EAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;CACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;OAEa,OAAO,CAAA;CA+BhB;;;;;CAKG;KACH,WAAY,CAAA,MAAc,EAAE,OAAmC,EAAA;CA7B/D;;CAEG;SACM,IAAI,CAAA,IAAA,GAAkB,EAAE,CAAC;CAMlC;;CAEG;SACM,IAAM,CAAA,MAAA,GAAa,EAAE,CAAC;CAC/B;;CAEG;SACM,IAAQ,CAAA,QAAA,GAAa,EAAE,CAAC;SAc7B,IAAI,MAAM,KAAK,SAAS,EAAE;CACtB,YAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;CAC/D,SAAA;SACD,IAAI,MAAM,KAAK,EAAE,EAAE;CACf,YAAA,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;CAC3C,SAAA;CACD,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;CAC/B,QAAA,IAAI,CAAC,aAAa,GAAG,CAAC,EAAC,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,YAAY,CAAA,CAAC;;;SAI7C,IACI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;aACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS;aAC7C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG,EAC5C;;CAEE,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA,gEAAA,CAAkE,CAAC,CAAC;CACrF,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,gEAAA,CAAkE,CAAC,CAAC;CACvF,SAAA;;CAGD,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;CACxD,QAAA,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;CAC9C,YAAA,MAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAgB,CAAC;CAC5C,YAAA,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;CAC1B,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACtB,gBAAA,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;iBAEzB,IAAI,KAAK,CAAC,QAAQ,EAAE;CAChB,oBAAA,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;yBACjD,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAgB,CAAC;CACnD,wBAAA,IAAI,SAAS,CAAC,OAAO,KAAK,OAAO,EAAE;6BAC/B,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;6BAC5B,IACI,SAAS,CAAC,QAAQ;CAClB,gCAAA,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iCACrB,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,EACvC;iCACE,IAAI,CAAC,aAAa,GACX,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,aAAa,CAAA,EAClB,IAAI,CAAC,kBAAkB,CACtB,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAe,CACxC,CACJ,CAAC;CACL,6BAAA;CACJ,yBAAA;CACJ,qBAAA;CACJ,iBAAA;CACJ,aAAA;CACD,YAAA,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE;CAC3B,gBAAA,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACzB,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;qBAC1E,IAAI,CAAC,aAAa,GACX,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,aAAa,CAAA,EAClB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAChE,CAAC;CACL,iBAAA;CACJ,aAAA;CACJ,SAAA;SAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;;;;MAS5D;CAEO,IAAA,kBAAkB,CAAC,WAAmB,EAAA;CAC1C,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;SACxB,MAAM,MAAM,GAAG,EAA8B,CAAC;CAC9C,QAAA,MAAM,GAAG,GAAGC,yCAAQ,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;CACpD,QAAA,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;;SAE3B,IAAI,CAAC,UAAU,EAAE;CACb,YAAA,OAAO,MAAM,CAAC;CACjB,SAAA;SACD,IAAI,UAAU,CAAC,aAAa,EAAE;CAC1B,YAAA,MAAM,aAAa,GAAG,UAAU,CAAC,aAAa;kBACzC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC;kBAC7B,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,KAAK,SAAS,CAAC,CAAC;CAC5C,YAAA,MAAM,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;CACjC,SAAA;;;CAGD,QAAA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;CACnB,YAAA,OAAO,MAAM,CAAC;CACjB,SAAA;CACD,QAAA,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;CAC/B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;CACxD,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACtB,MAAM,aAAa,GAAuC,EAAE,CAAC;CAC7D,YAAA,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,IAAkB,CAAC;CACvD,YAAA,IAAI,YAAY,EAAE;CACd,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,eAAe,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;CAC7E,oBAAA,MAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAsB,CAAC;CACzD,oBAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,WAAW,CAAC;CACjC,oBAAA,IAAI,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC;CAC5B,oBAAA,IAAI,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE;;;yBAGjC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;CACnC,wBAAA,IAAI,0CAA0C,CAAC,IAAI,CAAC,KAAK,CAAC;6BACtD,aAAa,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;;CAC3C,4BAAA,aAAa,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;CACxC,qBAAA;CACJ,iBAAA;CACJ,aAAA;CACD,YAAA,IAAI,SAAS,EAAE;CACX,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;CACpE,oBAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;qBAC9B,MAAM,CAAC,QAAQ,CAAC,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CAAC,QAAQ,CAAC,CAAA,EAAK,aAAa,CAAE,CAAC;CAChE,iBAAA;CACJ,aAAA;CACJ,SAAA;CACD,QAAA,OAAO,MAAM,CAAC;MACjB;CAED;;CAEG;CACH,IAAA,IAAI,IAAI,GAAA;SACJ,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAwB,CAAC;MAC5D;CAED;;CAEG;CACH,IAAA,IAAI,OAAO,GAAA;SACP,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,OAAO,CAAC;CACpD,QAAA,IAAI,aAAa,EAAE;CACf,YAAA,OAAO,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;CAC/D,SAAA;SACD,OAAO;CACH,YAAA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,IAAI,GAAG,EAAY;CAC7D,YAAA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,IAAI,GAAG,EAAY;CAC7D,YAAA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,KAAK,IAAI,GAAG,EAAY;CACjE,YAAA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,MAAM,IAAI,GAAG,EAAY;UACrE,CAAC;MACL;CAED;;CAEG;CACH,IAAA,IAAI,KAAK,GAAA;;CAEL,QAAA,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,4BAA4B,CAAC,CAAC;CACvD,QAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,yBAAyB,EAAE,CAAC;;SAEhF,MAAM,KAAK,GACP,CAAA,CAAC,aAAD,CAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAD,CAAC,CAAE,KAAK,CAAC,KAAK,CAAC,MAAI,CAAC,KAAD,IAAA,IAAA,CAAC,uBAAD,CAAC,CAAE,KAAK,CAAC,KAAK,CAAC,CAAA,KAAI,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,CAAA,KAAI,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,CAAA,CAAC;CACtF,QAAA,QAAQ,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,EAA2D;MAC7F;CAEO,IAAA,gBAAgB,CACpB,QAMS,EACT,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,SAAqB,EACrB,GAAY,EACZ,OAAgB,EAChB,UAAkB,EAAA;CAElB,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;CAC/B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;aACtE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAgB,CAAC;aAE9C,IAAI,cAAc,GAAG,SAAS,CAAC;CAC/B,YAAA,IAAI,YAAgC,CAAC;CACrC,YAAA,IAAI,QAA4B,CAAC;CACjC,YAAA,IAAI,eAAkC,CAAC;aAEvC,IAAI,KAAK,CAAC,UAAU,EAAE;;CAElB,gBAAA,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE;CAC5B,oBAAA,MAAM,eAAe,GAAG,oBAAoB,CACxC,KAAK,CAAC,UAAU,CAAC,SAAS,EAC1B,KAAK,CAAC,OAAO,CAChB,CAAC;;CAEF,oBAAA,KACI,IAAI,cAAc,GAAG,CAAC,EAAE,aAAa,GAAG,eAAe,CAAC,MAAM,EAC9D,cAAc,GAAG,aAAa,EAC9B,cAAc,EAAE,EAClB;yBACE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,eAAe,CAAC,cAAc,CAAC,CAAC;;CAE7D,wBAAA,IAAI,MAAM;6BAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC;;CAExC,wBAAA,IAAI,QAAQ;6BAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;CACjD,qBAAA;;qBAED,IAAI,eAAe,CAAC,MAAM,EAAE;CACxB,wBAAA,IAAI,cAAc,EAAE;CAChB,4BAAA,eAAe,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;CAC3C,yBAAA;;CAED,wBAAA,cAAc,GAAG,qBAAqB,CAAC,eAAe,CAAC,CAAC;CAC3D,qBAAA;CACD,oBAAA,OAAO,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC;CACrC,iBAAA;iBACD,IAAI,sBAAsB,GAAG,KAAK,CAAC,UAAU,yBAAyB,EAAE,CAAC;iBAEzE,QAAQ,GAAG,GAAG,CAAC;CACf,gBAAA,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE;;CAErB,oBAAA,IAAI,aAAa,EAAE;CACf,wBAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAChD,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;6BACvD,MAAM,OAAO,GAAG,aAAa,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC;CACjD,4BAAA,IAAI,OAAO,EAAE;CACT,gCAAA,sBAAsB,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,sBAAsB,CAAK,EAAA,OAAO,CAAE,CAAC;CACtE,6BAAA;CACJ,yBAAA;CACJ,qBAAA;;qBAED,QAAQ,GAAG,GAAG,QAAQ,GAAG,CAAA,EAAG,QAAQ,CAAG,CAAA,CAAA,GAAG,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC;CACrE,oBAAA,OAAO,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC;qBAC3B,OAAO,sBAAsB,CAAC,EAAE,CAAC;CACpC,iBAAA;iBAED,YAAY,GAAG,OAAO,CAAC;CACvB,gBAAA,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE;;CAExB,oBAAA,IAAI,aAAa,EAAE;CACf,wBAAA,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CACrD,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;6BACjE,MAAM,UAAU,GAAG,aAAa,CAAC,CAAA,CAAA,EAAI,UAAU,CAAC,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC;CACtD,4BAAA,IAAI,UAAU,EAAE;CACZ,gCAAA,sBAAsB,GACf,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,sBAAsB,CACtB,EAAA,UAAU,CAChB,CAAC;CACL,6BAAA;CACJ,yBAAA;CACJ,qBAAA;;qBAED,YAAY,GAAG,GAAG,YAAY,GAAG,CAAA,EAAG,YAAY,CAAG,CAAA,CAAA,GAAG,EAAE,GACpD,KAAK,CAAC,UAAU,CAAC,KACrB,EAAE,CAAC;CACH,oBAAA,OAAO,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;qBAC9B,OAAO,sBAAsB,CAAC,KAAK,CAAC;CACvC,iBAAA;;iBAGD,eAAe,GAAG,UAAU,CAAC;;iBAE7B,IAAK,sBAA8B,CAAC,KAAK,EAAE;CACvC,oBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CACjC,CAAA,QAAA,EAAY,sBAA8B,CAAC,KAAK,CAAI,EAAA,CAAA,CACvD,CAAC,OAAO,CAAC,CAAC;CACX,oBAAA,sBAAsB,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CAAK,EAAA,sBAAsB,CAAE,CAAC;qBACjE,OAAQ,sBAA8B,CAAC,KAAK,CAAC;CAChD,iBAAA;iBACD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;CACzD,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,aAAa,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;CACzE,oBAAA,MAAM,GAAG,GAAG,YAAY,CAAC,CAAC,CAAqB,CAAC;CAChD,oBAAA,IAAI,sBAAsB,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;;CAE3C,wBAAA,IAAI,CAAC,eAAe,IAAI,eAAe,KAAK,UAAU;6BAClD,eAAe,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,UAAU,CAAE,CAAC;;yBAExC,IAAI,GAAG,KAAK,iBAAiB,EAAE;;CAE3B,4BAAA,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;CACtC,gCAAA,MAAM,IAAI,KAAK,CACX,CAAA,wBAAA,EAA2B,IAAI,CAAC,SAAS,CACrC,sBAAsB,CAAC,GAAG,CAAC,CAC9B,CAAA,EAAA,CAAI,CACR,CAAC;6BACN,eAAe,CAAC,GAAG,CAAC;iCACf,sBAAsB,CAAC,GAAG,CAAY;CACvC,qCAAC,eAAe,CAAC,GAAG,CAAC,KAAK,SAAS;CAC/B,0CAAG,eAAe,CAAC,GAAG,CAAY;2CAChC,CAAC,CAAC,CAAC;CAChB,yBAAA;;;CAGD,wBAAA,IAAI,eAAe,CAAC,GAAG,CAAC,KAAK,SAAS;;6BAElC,eAAe,CAAC,GAAG,CAAC,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;CAC1D,qBAAA;CACJ,iBAAA;CACJ,aAAA;;CAGD,YAAA,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;;CAErB,gBAAA,QAAQ,CACJ,KAAK,EACL,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,GAAG,SAAS,EAC1D,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,KAAK,EAAE,EACjB,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,KAAK,EAAE;;iBAErB,eAAe;uBACR,MAAK,CAAA,MAAA,CAAA,EAAA,EAAA,eAAe,CAAgC;uBACrD,SAAS,CAClB,CAAC;CACL,aAAA;aAED,IAAI,KAAK,CAAC,QAAQ,EAAE;CAChB,gBAAA,IAAI,CAAC,gBAAgB,CACjB,QAAQ,EACR,KAAK,EACL,cAAc,EACd,QAAQ,EACR,YAAY,EACZ,eAAe,CAClB,CAAC;CACL,aAAA;CACJ,SAAA;MACJ;CAED;;;CAGG;CACH,IAAA,IAAI,QAAQ,GAAA;SACR,IAAI,IAAI,CAAC,SAAS;aAAE,OAAO,IAAI,CAAC,SAAS,CAAC;;SAG1C,MAAM,QAAQ,GAAkB,EAAE,CAAC;SACnC,MAAM,aAAa,GAAa,EAAE,CAAC;SACnC,MAAM,eAAe,GAAa,EAAE,CAAC;;CAGrC,QAAA,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,KAAI;;aAEjE,IAAI,KAAK,CAAC,KAAK,EAAE;CACb,gBAAA,aAAa,CAAC,IAAI,CAAC,CAAA,eAAA,EAAkB,KAAK,CAAC,OAAO,CAAA,aAAA,EAAgB,KAAK,CAAC,KAAK,CAAA,CAAE,CAAC,CAAC;iBACjF,OAAO;CACV,aAAA;;aAED,IAAI,KAAK,CAAC,QAAQ,EAAE;CAChB,gBAAA,aAAa,CAAC,IAAI,CACd,CAAA,eAAA,EAAkB,KAAK,CAAC,OAAO,CAAA,gBAAA,EAAmB,KAAK,CAAC,QAAQ,CAAA,CAAE,CACrE,CAAC;iBACF,OAAO;CACV,aAAA;CACD,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;CAChB,gBAAA,aAAa,CAAC,IAAI,CAAC,CAAA,gCAAA,EAAmC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAG,CAAA,CAAA,CAAC,CAAC;iBAChF,OAAO;CACV,aAAA;;aAED,IAAI,CAAC,UAAU,EAAE;CACb,gBAAA,aAAa,CAAC,IAAI,CAAC,CAAA,mCAAA,EAAsC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAG,CAAA,CAAA,CAAC,CAAC;iBACnF,OAAO;CACV,aAAA;CAED,YAAA,IAAI,GAAG;CAAE,gBAAA,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;CAC9B,YAAA,IAAI,OAAO;CAAE,gBAAA,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC;CAExC,YAAA,MAAM,SAAS,GAAG;iBACd,OAAO,EAAE,KAAK,CAAC,OAAiC;iBAChD,UAAU;cACE,CAAC;CACjB,YAAA,IAAI,SAAS;CAAE,gBAAA,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;CAC/C,YAAA,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;CAC7B,SAAC,CAAC,CAAC;CAEH,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAG1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;SACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;CAEvC,QAAA,OAAO,QAAQ,CAAC;MACnB;CAEO,IAAA,OAAO,cAAc,CAAC,IAAiB,EAAE,WAAmB,EAAA;SAChE,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,yBAAyB,EAAE,CAAC;CAC9D,QAAA,OAAO,QAAQ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;AACjC,aAAA,GAAG,CAAC,CAAC,GAAG,KAAK,CAAA,EAAG,GAAG,CAAA,EAAA,EAAK,UAAU,CAAC,GAAuB,CAAC,GAAG,CAAC;AAC/D,aAAA,IAAI,CAAC,GAAG,CAAC,CAAM,GAAA,EAAA,WAAW,UAAU,CAAC;MAC7C;CAED;;;CAGG;CACK,IAAA,OAAO,aAAa,CAAC,IAAiB,EAAE,QAAuB,EAAA;CACnE,QAAA,OAAO,OAAO,CAAC,cAAc,CACzB,IAAI,EACJ,QAAQ;CACH,aAAA,GAAG,CAAC,CAAC,OAAO,KAAI;aACb,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;aACnD,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/C,IAAI,gBAAgB,GAAG,EAAE,CAAC;CAC1B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CAC7D,gBAAA,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAA4B,CAAC;iBACzD,gBAAgB,IAAI,GAAG,GAAG,CAAA,EAAA,EAAK,UAAU,CAAC,GAAG,CAAC,CAAA,EAAA,CAAI,CAAC;CACtD,aAAA;CACD,YAAA,IAAI,SAAS;CACT,gBAAA,gBAAgB,IAAI,CAAc,WAAA,EAAA,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC;CACvE,YAAA,OAAO,CAAI,CAAA,EAAA,OAAO,CAAI,CAAA,EAAA,gBAAgB,IAAI,CAAC;CAC/C,SAAC,CAAC;CACD,aAAA,IAAI,CAAC,IAAI,CAAC,CAClB,CAAC;MACL;CAED;;CAEG;CACH,IAAA,IAAI,aAAa,GAAA;CACb,QAAA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;SAChC,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;MAChD;CAED;;;CAGG;CACH,IAAA,IAAI,KAAK,GAAA;SACL,IAAI,IAAI,CAAC,MAAM;aAAE,OAAO,IAAI,CAAC,MAAM,CAAC;SAEpC,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;;SAGzC,MAAM,KAAK,GAAe,EAAE,CAAC;SAC7B,MAAM,WAAW,GAA+B,EAAE,CAAC;SACnD,MAAM,aAAa,GAAa,EAAE,CAAC;SACnC,MAAM,eAAe,GAAa,EAAE,CAAC;CAErC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACtC,YAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC1B,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;CAEjD,YAAA,MAAM,cAAc,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAgC,UAAU,CAAE,CAAC;;CAGjE,YAAA,IAAI,CAAqB,CAAC;CAC1B,YAAA,IAAI,UAAkC,CAAC;CACvC,YAAA,QAAQ,OAAO;CACX,gBAAA,KAAK,IAAI;qBACL,CAAC,GAAG,iBAAiB,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;qBAC5D,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,MAAM;CACV,gBAAA,KAAK,IAAI;qBACL,CAAC,GAAG,iBAAiB,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;qBAC5D,OAAO,cAAc,CAAC,CAAC,CAAC;qBACxB,OAAO,cAAc,CAAC,CAAC,CAAC;qBACxB,OAAO,cAAc,CAAC,KAAK,CAAC;qBAC5B,OAAO,cAAc,CAAC,MAAM,CAAC;qBAC7B,MAAM;CACV,gBAAA,KAAK,OAAO;qBACR,CAAC,GAAG,oBAAoB,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;qBAC/D,OAAO,cAAc,CAAC,MAAM,CAAC;qBAC7B,MAAM;CACV,gBAAA,KAAK,QAAQ;qBACT,CAAC,GAAG,qBAAqB,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;qBAChE,OAAO,cAAc,CAAC,MAAM,CAAC;qBAC7B,MAAM;CACV,gBAAA,KAAK,MAAM;qBACP,UAAU,GAAG,mBAAmB,CAC5B,UAAU,EACV,aAAa,EACb,aAAa,EACb,SAAS,CACZ,CAAC;CACF,oBAAA,IAAI,UAAU;CAAE,wBAAA,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;qBAC1C,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,CAAC,CAAC;qBACxB,MAAM;CACV,gBAAA,KAAK,OAAO;qBACR,UAAU,GAAG,oBAAoB,CAC7B,UAAU,EACV,aAAa,EACb,aAAa,EACb,SAAS,CACZ,CAAC;CACF,oBAAA,IAAI,UAAU;CAAE,wBAAA,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;qBAC1C,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,OAAO,cAAc,CAAC,EAAE,CAAC;qBACzB,MAAM;CACV,gBAAA,KAAK,IAAI;qBACL,UAAU,GAAG,iBAAiB,CAC1B,UAAU,EACV,aAAa,EACb,aAAa,EACb,SAAS,CACZ,CAAC;CACF,oBAAA,IAAI,UAAU;CAAE,wBAAA,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;qBAC1C,OAAO,cAAc,CAAC,CAAC,CAAC;qBACxB,MAAM;CACV,gBAAA;CACI,oBAAA,eAAe,CAAC,IAAI,CAAC,yBAAyB,OAAO,CAAA,EAAA,CAAI,CAAC,CAAC;qBAC3D,MAAM;CACb,aAAA;CACD,YAAA,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,EAAE,EAAE;iBAC7B,SAAS;CACZ,aAAA;CAED,YAAA,MAAM,IAAI,GAAG;CACT,gBAAA,UAAU,EACH,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAc,CACjB,EAAA,EAAA,CAAC,EACJ,CAAA;cACJ,CAAC;CACF,YAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACjB,YAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;CAChC,SAAA;CAED,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;CACpB,QAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;SAGhC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;SACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;CAEvC,QAAA,OAAO,KAAK,CAAC;MAChB;CAED;;;CAGG;CACK,IAAA,OAAO,UAAU,CAAC,IAAiB,EAAE,KAAiB,EAAA;CAC1D,QAAA,OAAO,OAAO,CAAC,cAAc,CACzB,IAAI,EACJ,KAAK;CACA,aAAA,GAAG,CAAC,CAAC,IAAI,KAAI;CACV,YAAA,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;aAC5B,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/C,IAAI,gBAAgB,GAAG,EAAE,CAAC;CAC1B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CAC7D,gBAAA,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAA4B,CAAC;iBACzD,gBAAgB,IAAI,GAAG,GAAG,CAAA,EAAA,EAAK,UAAU,CAAC,GAAG,CAAC,CAAA,EAAA,CAAI,CAAC;CACtD,aAAA;aACD,OAAO,CAAA,MAAA,EAAS,gBAAgB,CAAA,EAAA,CAAI,CAAC;CACzC,SAAC,CAAC;CACD,aAAA,IAAI,CAAC,IAAI,CAAC,CAClB,CAAC;MACL;CAED;;CAEG;CACH,IAAA,IAAI,UAAU,GAAA;CACV,QAAA,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;SAC7B,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;MAC1C;CAED;;;CAGG;CACH,IAAA,IAAI,QAAQ,GAAA;SACR,IAAI,IAAI,CAAC,SAAS;aAAE,OAAO,IAAI,CAAC,SAAS,CAAC;CAE1C,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;CACvB,QAAA,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;;SAE9B,IAAI,CAAC,YAAY,EAAE;CACf,YAAA,OAAO,CAAC,IAAI,CAAC,2DAA2D,CAAC,CAAC;CAC7E,SAAA;CACD,QAAA,MAAM,WAAW,GACb,YAAY,yBAAyB,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;SAGjF,MAAM,QAAQ,GAAkB,EAAE,CAAC;SACnC,MAAM,aAAa,GAAa,EAAE,CAAC;SACnC,MAAM,eAAe,GAAa,EAAE,CAAC;CAErC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;CACxD,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;CACtB,YAAA,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;CAC5B,YAAA,IAAI,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;aAChC,IAAI,UAAU,KAAK,SAAS,EAAE;;CAE1B,gBAAA,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;CACnC,gBAAA,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;CAC/B,aAAA;;aAED,IAAI,UAAU,CAAC,GAAG,EAAE;;iBAEhB,aAAa,CAAC,IAAI,CAAC,CAAA,sCAAA,EAAyC,UAAU,CAAC,GAAG,CAAG,CAAA,CAAA,CAAC,CAAC;CAClF,aAAA;;CAED,YAAA,MAAM,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC1B,YAAA,UAAU,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,KAAa,EAAE,CAAS,EAAE,CAAS,KAAI;CACrE,gBAAA,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAqB,CAAC;;CAGtC,gBAAA,MAAM,cAAc,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAgC,UAAU,CAAE,CAAC;iBACjE,OAAO,cAAc,CAAC,CAAC,CAAC;CACxB,gBAAA,MAAM,OAAO,GAAG;qBACZ,EAAE;CACF,oBAAA,UAAU,EAAE,cAAc;kBACd,CAAC;CAEjB,gBAAA,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;CAE/B,gBAAA,IAAI,KAAK,KAAK,CAAC,IAAI,WAAW,KAAK,GAAG,EAAE;;qBAEpC,aAAa,CAAC,IAAI,CACd,CAAwB,qBAAA,EAAA,UAAU,CAAC,QAAQ,EAAE,CAAiC,+BAAA,CAAA,CACjF,CAAC;CACL,iBAAA;CACD,gBAAA,QAAQ,WAAW;CACf,oBAAA,KAAK,GAAG;yBACJ,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;yBAC3B,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;yBAC3B,OAAO;CACX,oBAAA,KAAK,GAAG;CACJ,wBAAA,OAAO,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtC,MAAM;CACV,oBAAA,KAAK,GAAG;yBACJ,OAAO,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBAC7B,MAAM;CACV,oBAAA,KAAK,GAAG;yBACJ,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC7B,MAAM;CACV,oBAAA,KAAK,GAAG;CACH,wBAAA,OAA6B,CAAC,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1E,wBAAA,OAAO,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtC,MAAM;CACV,oBAAA,KAAK,GAAG;yBACH,OAA6B,CAAC,aAAa,GAAG;6BAC3C,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;6BACxB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;0BAC3B,CAAC;CACF,wBAAA,OAAO,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtC,MAAM;CACV,oBAAA,KAAK,GAAG;CACH,wBAAA,OAA0B,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CAC3C,wBAAA,OAA0B,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CAC3C,wBAAA,OAA0B,CAAC,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;yBACtD,OAA0B,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;yBACvD,OAA0B,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CACrD,wBAAA,OAAO,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBACtC,MAAM;CACV,oBAAA,KAAK,GAAG,CAAC;CACT,oBAAA,KAAK,GAAG;;CAEJ,wBAAA,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;6BAE5C,OAAO;CACV,yBAAA;CACD,wBAAA,OAAO,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5C,MAAM;;CAEV,oBAAA;;CAEI,wBAAA,aAAa,CAAC,IAAI,CAAC,2BAA2B,WAAW,CAAA,CAAA,CAAG,CAAC,CAAC;yBAC9D,OAAO;CACd,iBAAA;CACD,gBAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC3B,aAAC,CAAC,CAAC;CACN,SAAA;CACD,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAG1B,OAAO,IAAI,CAAC,YAAY,CAAC;;SAGzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;SACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;CAEvC,QAAA,OAAO,QAAQ,CAAC;MACnB;CAED;;;CAGG;CACK,IAAA,OAAO,aAAa,CAAC,IAAiB,EAAE,QAAuB,EAAA;CACnE,QAAA,OAAO,OAAO,CAAC,cAAc,CACzB,IAAI,EACJ,QAAQ;CACH,aAAA,GAAG,CAAC,CAAC,OAAO,KAAI;aACb,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;aACvC,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/C,IAAI,gBAAgB,GAAG,EAAE,CAAC;CAC1B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CAC7D,gBAAA,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAA4B,CAAC;iBACzD,gBAAgB,IAAI,GAAG,GAAG,CAAA,EAAA,EAAK,UAAU,CAAC,GAAG,CAAC,CAAA,EAAA,CAAI,CAAC;CACtD,aAAA;aACD,IAAK,OAA6B,CAAC,aAAa,EAAE;CAC9C,gBAAA,MAAM,EAAE,aAAa,EAAE,GAAG,OAA4B,CAAC;CACvD,gBAAA,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;CACzD,gBAAA,IAAI,CAAC,GAAG,CAAK,EAAA,EAAA,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,EAAE,CAAC,CAAC,CAAC,IAAI,SAAS,CAAA,CAAA,EAAI,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;iBAC1F,IAAI,SAAS,KAAK,GAAG;CACjB,oBAAA,CAAC,IAAI,CAAG,EAAA,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;CAC1D,gBAAA,CAAC,IAAI,CAAA,EAAG,EAAE,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC;CAC1B,gBAAA,OAAO,CAAY,SAAA,EAAA,CAAC,CAAK,EAAA,EAAA,gBAAgB,IAAI,CAAC;CACjD,aAAA;CACD,YAAA,IAAK,OAA0B,CAAC,EAAE,KAAK,SAAS,EAAE;CAC9C,gBAAA,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,SAAS,EAAE,GACpD,OAAyB,CAAC;CAC9B,gBAAA,OAAO,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA,CAAA,EAAI,EAAE,CAAA,CAAA,EAAI,aAAa,CAAI,CAAA;AAClE,qCAAqB,YAAY,GAAG,CAAC,GAAG,CAC5C,CAAA,CAAA,EAAI,SAAS,GAAG,CAAC,GAAG,CAAC,CAAI,CAAA,EAAA,EAAE,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,EAAE,CAAC,CAAC,CAAC,CAAK,EAAA,EAAA,gBAAgB,IAAI,CAAC;CACpE,aAAA;aACD,OAAO,CAAA,UAAA,EAAa,EAAE,CAAC,CAAC,CAAC,CAAS,MAAA,EAAA,EAAE,CAAC,CAAC,CAAC,CAAA,MAAA,EAAS,EAAE,CAAC,CAAC,CAAC,CAAA,MAAA,EAAS,EAAE,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,gBAAgB,CAAA,EAAA,CAAI,CAAC;CACjG,SAAC,CAAC;CACD,aAAA,IAAI,CAAC,IAAI,CAAC,CAClB,CAAC;MACL;CAED;;CAEG;CACH,IAAA,IAAI,aAAa,GAAA;CACb,QAAA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;SAChC,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;MAChD;CAcO,IAAA,OAAO,MAAM,CACjB,OAAiD,EACjD,cAAuD,EAAA;SAEvD,MAAM,OAAO,GAA6C,EAAE,CAAC;;CAE7D,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACrC,YAAA,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CAC1B,YAAA,IAAI,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC;CAAE,gBAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;CAEvD,SAAA;CACD,QAAA,OAAO,OAAO,CAAC;MAClB;KAoBO,OAAO,aAAa,CACxB,OAAiD,EACjD,MAA6C,EAC7C,kBAAyC,EACzC,OAAmB,EAAA;CAEnB,QAAA,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;SAC9D,MAAM,iBAAiB,GAA4C,EAAE,CAAC;;CAEtE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;aACzC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;CACtC,YAAA,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC9B,YAAA,QAAQ,GAAG;CACP,gBAAA,KAAK,sBAAsB,CAAC;CAC5B,gBAAA,KAAK,cAAc,CAAC;CACpB,gBAAA,KAAK,eAAe;qBAChB,iBAAiB,CAAC,CAAC,CAAC,GAAGC,GAAM,CAAC,KAA0B,CAAC,CAAC;qBAC1D,MAAM;CACV,gBAAA,KAAK,2BAA2B;qBAC5B,iBAAiB,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,KAAmC,CAAC,CAAC;qBAC/E,MAAM;CACb,aAAA;CACJ,SAAA;CAED,QAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,OAAgB,EAAE,CAAC,MAAM,EAAE,CAAC,KAAI;CAC3D,YAAA,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;CAAE,gBAAA,OAAO,KAAK,CAAC;CACxC,YAAA,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;;CAE9B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;iBACzC,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;CAC1C,gBAAA,IAAI,KAAK,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;;iBAEjC,IAAI,MAAM,GAAG,IAAI,CAAC;CAClB,gBAAA,QAAQ,GAAG;CACP,oBAAA,KAAK,sBAAsB,CAAC;CAC5B,oBAAA,KAAK,cAAc,CAAC;CACpB,oBAAA,KAAK,eAAe,CAAC;CACrB,oBAAA,KAAK,iBAAiB;CAClB,wBAAA,IAAI,KAAyB,CAAC;CAC9B,wBAAA,MAAM,WAAW,GACb,GAAG,KAAK,iBAAiB,GAAG,sBAAsB,GAAG,GAAG,CAAC;CAC7D,wBAAA,IAAI,kBAAkB,EAAE;6BACpB,KAAK,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;CAC9C,yBAAA;yBACD,IAAI,KAAK,KAAK,SAAS,EAAE;6BACrB,KAAK,GAAGA,GAAM,CAAC,UAAU,CAAC,WAAW,CAAa,CAAC,CAAC;;CAEpD,4BAAA,MAAM,OAAO,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;6BAC9C,IAAI,OAAO,KAAK,SAAS,EAAE;iCACvB,MAAM,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;iCACrC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;CAC9B,6BAAA;;6BAGD,IAAI,CAAC,kBAAkB,EAAE;iCACrB,kBAAkB,GAAG,IAAI,KAAK,CAC1B,OAAO,CAAC,MAAM,CACO,CAAC;;;CAG1B,gCAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACrC,oCAAA,kBAAkB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CAC9B,iCAAA;CACJ,6BAAA;6BACD,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;CAC9C,yBAAA;yBACD,IACI,GAAG,KAAK,sBAAsB;CAC9B,4BAAA,GAAG,KAAK,cAAc;6BACtB,GAAG,KAAK,eAAe,EACzB;CACE,4BAAA,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAiB,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC;6BAC5D,MAAM;CACT,yBAAA;;;CAGD,wBAAA,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAI,KAAgB,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC;yBACxE,MAAM;CACV,oBAAA,KAAK,2BAA2B;CAC5B,wBAAA,IAAI,SAA+B,CAAC;CACpC,wBAAA,IAAI,kBAAkB,EAAE;6BACpB,SAAS,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1C,yBAAA;yBACD,IAAI,CAAC,SAAS,EAAE;6BACZ,SAAS,GAAG,kBAAkB,CAAC,UAAU,CAAC,GAAG,CAAoB,CAAC,CAAC;;6BAEnE,IAAI,CAAC,kBAAkB,EAAE;iCACrB,kBAAkB,GAAG,IAAI,KAAK,CAC1B,OAAO,CAAC,MAAM,CACO,CAAC;;;CAG1B,gCAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACrC,oCAAA,kBAAkB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;CAC9B,iCAAA;CACJ,6BAAA;6BACD,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;CAC1C,yBAAA;CACD,wBAAA,IAAI,SAAS,CAAC,MAAM,KAAM,KAAkB,CAAC,MAAM,EAAE;6BACjD,IAAI,SAAS,CAAC,MAAM,KAAM,KAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;iCACrD,KAAK,GAAG,CAAC,GAAI,KAAkB,EAAE,GAAI,KAAkB,CAAC,CAAC;CAC5D,6BAAA;kCAAM,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,KAAM,KAAkB,CAAC,MAAM,EAAE;CAC5D,gCAAA,SAAS,GAAG;CACR,oCAAA,GAAI,SAAsB;CAC1B,oCAAA,GAAI,SAAsB;kCAC7B,CAAC;CACL,6BAAA;CAAM,iCAAA;iCACH,MAAM,GAAG,KAAK,CAAC;CAClB,6BAAA;CACJ,yBAAA;CACD,wBAAA,IAAI,MAAM,EAAE;CACR,4BAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAI,KAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACjD,gCAAA,IACI,IAAI,CAAC,GAAG,CAAE,KAAkB,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;sCAC9C,SAAS,IAAI,CAAC,CAAC;qCAEhB,MAAM,GAAG,KAAK,CAAC;CACtB,6BAAA;CACJ,yBAAA;yBACD,MAAM;CACV,oBAAA;;CAEI,wBAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;6BAClB,MAAM,GAAG,KAAK,CAAC;CACf,4BAAA,MAAM,IAAI,KAAK,CACX,CAA4C,yCAAA,EAAA,GAAG,eAAe,IAAI,CAAC,SAAS,CACxE,KAAK,CACR,CAAA,SAAA,EAAY,OAAO,KAAK,CAAA,wGAAA,CAA0G,CACtI,CAAC;CAGL,yBAAA;CACD,wBAAA,IACI,UAAU,CAAC,GAA8B,CAAC,KAAK,SAAS;CACxD,4BAAA,IAAI,CAAC,GAAG,CACH,UAAU,CAAC,GAA8B,CAAY;CACjD,gCAAA,KAAgB,CACxB,IAAI,SAAS,IAAI,CAAC,CAAC,EACtB;6BACE,MAAM,GAAG,KAAK,CAAC;CAClB,yBAAA;yBACD,MAAM;CACb,iBAAA;CACD,gBAAA,IAAI,CAAC,MAAM;CAAE,oBAAA,OAAO,KAAK,CAAC;CAC7B,aAAA;CACD,YAAA,OAAO,IAAI,CAAC;CAChB,SAAC,CAAC,CAAC;CACH,QAAA,OAAO,EAAE,OAAO,EAAE,OAAmD,EAAE,kBAAkB,EAAE,CAAC;MAC/F;CAED;;;;CAIG;KACH,qBAAqB,CAAC,MAA6C,EAAE,OAAmB,EAAA;CACpF,QAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;SAC1B,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,aAAa,CACzD,QAAQ,EACR,MAAM,EACN,IAAI,CAAC,0BAA0B,EAC/B,OAAO,CACV,CAAC;CACF,QAAA,IAAI,CAAC,0BAA0B,GAAG,kBAAkB,CAAC;CACrD,QAAA,OAAO,OAAO,CAAC;MAClB;CAED;;;;CAIG;KACH,kBAAkB,CAAC,MAA6C,EAAE,OAAmB,EAAA;CACjF,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;SACvB,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,aAAa,CACzD,KAAK,EACL,MAAM,EACN,IAAI,CAAC,uBAAuB,EAC5B,OAAO,CACV,CAAC;CACF,QAAA,IAAI,CAAC,uBAAuB,GAAG,kBAAkB,CAAC;CAClD,QAAA,OAAO,OAAO,CAAC;MAClB;CAED;;;;CAIG;KACH,qBAAqB,CAAC,MAA6C,EAAE,OAAmB,EAAA;CACpF,QAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;SAC1B,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,aAAa,CACzD,QAAQ,EACR,MAAM,EACN,IAAI,CAAC,0BAA0B,EAC/B,OAAO,CACV,CAAC;CACF,QAAA,IAAI,CAAC,0BAA0B,GAAG,kBAAkB,CAAC;CACrD,QAAA,OAAO,OAAO,CAAC;MAClB;CACJ;;;;;;;;;;"}